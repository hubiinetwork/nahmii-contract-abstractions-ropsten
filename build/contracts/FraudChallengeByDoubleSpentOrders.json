{
  "contractName": "FraudChallengeByDoubleSpentOrders",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "newFraudChallenge",
          "type": "address"
        }
      ],
      "name": "setFraudChallenge",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newValidator",
          "type": "address"
        }
      ],
      "name": "setValidator",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "triggerSelfDestruction",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "selfDestructionDisabled",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "validator",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "fraudChallenge",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "destructor",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "operator",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newConfiguration",
          "type": "address"
        }
      ],
      "name": "setConfiguration",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newSecurityBond",
          "type": "address"
        }
      ],
      "name": "setSecurityBond",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "securityBond",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "configuration",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "disableSelfDestruction",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newDeployer",
          "type": "address"
        }
      ],
      "name": "setDeployer",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOperator",
          "type": "address"
        }
      ],
      "name": "setOperator",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "deployer",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "deployer",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "tradeHash1",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "tradeHash2",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "challenger",
          "type": "address"
        }
      ],
      "name": "ChallengeByDoubleSpentOrdersEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "oldSecurityBond",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "newSecurityBond",
          "type": "address"
        }
      ],
      "name": "SetSecurityBondEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "oldValidator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "newValidator",
          "type": "address"
        }
      ],
      "name": "SetValidatorEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "oldConfiguration",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "newConfiguration",
          "type": "address"
        }
      ],
      "name": "SetConfigurationEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "oldFraudChallenge",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "newFraudChallenge",
          "type": "address"
        }
      ],
      "name": "SetFraudChallengeEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "oldDeployer",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "newDeployer",
          "type": "address"
        }
      ],
      "name": "SetDeployerEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "oldOperator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "newOperator",
          "type": "address"
        }
      ],
      "name": "SetOperatorEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "wallet",
          "type": "address"
        }
      ],
      "name": "SelfDestructionDisabledEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "wallet",
          "type": "address"
        }
      ],
      "name": "TriggerSelfDestructionEvent",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "components": [
            {
              "name": "nonce",
              "type": "uint256"
            },
            {
              "name": "amount",
              "type": "int256"
            },
            {
              "components": [
                {
                  "components": [
                    {
                      "name": "ct",
                      "type": "address"
                    },
                    {
                      "name": "id",
                      "type": "uint256"
                    }
                  ],
                  "name": "intended",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "name": "ct",
                      "type": "address"
                    },
                    {
                      "name": "id",
                      "type": "uint256"
                    }
                  ],
                  "name": "conjugate",
                  "type": "tuple"
                }
              ],
              "name": "currencies",
              "type": "tuple"
            },
            {
              "name": "rate",
              "type": "int256"
            },
            {
              "components": [
                {
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "name": "wallet",
                  "type": "address"
                },
                {
                  "name": "rollingVolume",
                  "type": "uint256"
                },
                {
                  "name": "liquidityRole",
                  "type": "uint8"
                },
                {
                  "components": [
                    {
                      "name": "amount",
                      "type": "int256"
                    },
                    {
                      "components": [
                        {
                          "name": "wallet",
                          "type": "bytes32"
                        },
                        {
                          "name": "operator",
                          "type": "bytes32"
                        }
                      ],
                      "name": "hashes",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "name": "current",
                          "type": "int256"
                        },
                        {
                          "name": "previous",
                          "type": "int256"
                        }
                      ],
                      "name": "residuals",
                      "type": "tuple"
                    }
                  ],
                  "name": "order",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "components": [
                        {
                          "name": "current",
                          "type": "int256"
                        },
                        {
                          "name": "previous",
                          "type": "int256"
                        }
                      ],
                      "name": "intended",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "name": "current",
                          "type": "int256"
                        },
                        {
                          "name": "previous",
                          "type": "int256"
                        }
                      ],
                      "name": "conjugate",
                      "type": "tuple"
                    }
                  ],
                  "name": "balances",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "components": [
                        {
                          "name": "amount",
                          "type": "int256"
                        },
                        {
                          "components": [
                            {
                              "name": "ct",
                              "type": "address"
                            },
                            {
                              "name": "id",
                              "type": "uint256"
                            }
                          ],
                          "name": "currency",
                          "type": "tuple"
                        }
                      ],
                      "name": "single",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "name": "originId",
                          "type": "uint256"
                        },
                        {
                          "components": [
                            {
                              "name": "amount",
                              "type": "int256"
                            },
                            {
                              "components": [
                                {
                                  "name": "ct",
                                  "type": "address"
                                },
                                {
                                  "name": "id",
                                  "type": "uint256"
                                }
                              ],
                              "name": "currency",
                              "type": "tuple"
                            }
                          ],
                          "name": "figure",
                          "type": "tuple"
                        }
                      ],
                      "name": "total",
                      "type": "tuple[]"
                    }
                  ],
                  "name": "fees",
                  "type": "tuple"
                }
              ],
              "name": "buyer",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "name": "wallet",
                  "type": "address"
                },
                {
                  "name": "rollingVolume",
                  "type": "uint256"
                },
                {
                  "name": "liquidityRole",
                  "type": "uint8"
                },
                {
                  "components": [
                    {
                      "name": "amount",
                      "type": "int256"
                    },
                    {
                      "components": [
                        {
                          "name": "wallet",
                          "type": "bytes32"
                        },
                        {
                          "name": "operator",
                          "type": "bytes32"
                        }
                      ],
                      "name": "hashes",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "name": "current",
                          "type": "int256"
                        },
                        {
                          "name": "previous",
                          "type": "int256"
                        }
                      ],
                      "name": "residuals",
                      "type": "tuple"
                    }
                  ],
                  "name": "order",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "components": [
                        {
                          "name": "current",
                          "type": "int256"
                        },
                        {
                          "name": "previous",
                          "type": "int256"
                        }
                      ],
                      "name": "intended",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "name": "current",
                          "type": "int256"
                        },
                        {
                          "name": "previous",
                          "type": "int256"
                        }
                      ],
                      "name": "conjugate",
                      "type": "tuple"
                    }
                  ],
                  "name": "balances",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "components": [
                        {
                          "name": "amount",
                          "type": "int256"
                        },
                        {
                          "components": [
                            {
                              "name": "ct",
                              "type": "address"
                            },
                            {
                              "name": "id",
                              "type": "uint256"
                            }
                          ],
                          "name": "currency",
                          "type": "tuple"
                        }
                      ],
                      "name": "single",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "name": "originId",
                          "type": "uint256"
                        },
                        {
                          "components": [
                            {
                              "name": "amount",
                              "type": "int256"
                            },
                            {
                              "components": [
                                {
                                  "name": "ct",
                                  "type": "address"
                                },
                                {
                                  "name": "id",
                                  "type": "uint256"
                                }
                              ],
                              "name": "currency",
                              "type": "tuple"
                            }
                          ],
                          "name": "figure",
                          "type": "tuple"
                        }
                      ],
                      "name": "total",
                      "type": "tuple[]"
                    }
                  ],
                  "name": "fees",
                  "type": "tuple"
                }
              ],
              "name": "seller",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "components": [
                    {
                      "name": "single",
                      "type": "int256"
                    },
                    {
                      "name": "total",
                      "type": "int256"
                    }
                  ],
                  "name": "intended",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "name": "single",
                      "type": "int256"
                    },
                    {
                      "name": "total",
                      "type": "int256"
                    }
                  ],
                  "name": "conjugate",
                  "type": "tuple"
                }
              ],
              "name": "transfers",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "name": "hash",
                  "type": "bytes32"
                },
                {
                  "components": [
                    {
                      "name": "r",
                      "type": "bytes32"
                    },
                    {
                      "name": "s",
                      "type": "bytes32"
                    },
                    {
                      "name": "v",
                      "type": "uint8"
                    }
                  ],
                  "name": "signature",
                  "type": "tuple"
                }
              ],
              "name": "seal",
              "type": "tuple"
            },
            {
              "name": "blockNumber",
              "type": "uint256"
            },
            {
              "name": "operatorId",
              "type": "uint256"
            }
          ],
          "name": "trade1",
          "type": "tuple"
        },
        {
          "components": [
            {
              "name": "nonce",
              "type": "uint256"
            },
            {
              "name": "amount",
              "type": "int256"
            },
            {
              "components": [
                {
                  "components": [
                    {
                      "name": "ct",
                      "type": "address"
                    },
                    {
                      "name": "id",
                      "type": "uint256"
                    }
                  ],
                  "name": "intended",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "name": "ct",
                      "type": "address"
                    },
                    {
                      "name": "id",
                      "type": "uint256"
                    }
                  ],
                  "name": "conjugate",
                  "type": "tuple"
                }
              ],
              "name": "currencies",
              "type": "tuple"
            },
            {
              "name": "rate",
              "type": "int256"
            },
            {
              "components": [
                {
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "name": "wallet",
                  "type": "address"
                },
                {
                  "name": "rollingVolume",
                  "type": "uint256"
                },
                {
                  "name": "liquidityRole",
                  "type": "uint8"
                },
                {
                  "components": [
                    {
                      "name": "amount",
                      "type": "int256"
                    },
                    {
                      "components": [
                        {
                          "name": "wallet",
                          "type": "bytes32"
                        },
                        {
                          "name": "operator",
                          "type": "bytes32"
                        }
                      ],
                      "name": "hashes",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "name": "current",
                          "type": "int256"
                        },
                        {
                          "name": "previous",
                          "type": "int256"
                        }
                      ],
                      "name": "residuals",
                      "type": "tuple"
                    }
                  ],
                  "name": "order",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "components": [
                        {
                          "name": "current",
                          "type": "int256"
                        },
                        {
                          "name": "previous",
                          "type": "int256"
                        }
                      ],
                      "name": "intended",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "name": "current",
                          "type": "int256"
                        },
                        {
                          "name": "previous",
                          "type": "int256"
                        }
                      ],
                      "name": "conjugate",
                      "type": "tuple"
                    }
                  ],
                  "name": "balances",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "components": [
                        {
                          "name": "amount",
                          "type": "int256"
                        },
                        {
                          "components": [
                            {
                              "name": "ct",
                              "type": "address"
                            },
                            {
                              "name": "id",
                              "type": "uint256"
                            }
                          ],
                          "name": "currency",
                          "type": "tuple"
                        }
                      ],
                      "name": "single",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "name": "originId",
                          "type": "uint256"
                        },
                        {
                          "components": [
                            {
                              "name": "amount",
                              "type": "int256"
                            },
                            {
                              "components": [
                                {
                                  "name": "ct",
                                  "type": "address"
                                },
                                {
                                  "name": "id",
                                  "type": "uint256"
                                }
                              ],
                              "name": "currency",
                              "type": "tuple"
                            }
                          ],
                          "name": "figure",
                          "type": "tuple"
                        }
                      ],
                      "name": "total",
                      "type": "tuple[]"
                    }
                  ],
                  "name": "fees",
                  "type": "tuple"
                }
              ],
              "name": "buyer",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "name": "wallet",
                  "type": "address"
                },
                {
                  "name": "rollingVolume",
                  "type": "uint256"
                },
                {
                  "name": "liquidityRole",
                  "type": "uint8"
                },
                {
                  "components": [
                    {
                      "name": "amount",
                      "type": "int256"
                    },
                    {
                      "components": [
                        {
                          "name": "wallet",
                          "type": "bytes32"
                        },
                        {
                          "name": "operator",
                          "type": "bytes32"
                        }
                      ],
                      "name": "hashes",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "name": "current",
                          "type": "int256"
                        },
                        {
                          "name": "previous",
                          "type": "int256"
                        }
                      ],
                      "name": "residuals",
                      "type": "tuple"
                    }
                  ],
                  "name": "order",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "components": [
                        {
                          "name": "current",
                          "type": "int256"
                        },
                        {
                          "name": "previous",
                          "type": "int256"
                        }
                      ],
                      "name": "intended",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "name": "current",
                          "type": "int256"
                        },
                        {
                          "name": "previous",
                          "type": "int256"
                        }
                      ],
                      "name": "conjugate",
                      "type": "tuple"
                    }
                  ],
                  "name": "balances",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "components": [
                        {
                          "name": "amount",
                          "type": "int256"
                        },
                        {
                          "components": [
                            {
                              "name": "ct",
                              "type": "address"
                            },
                            {
                              "name": "id",
                              "type": "uint256"
                            }
                          ],
                          "name": "currency",
                          "type": "tuple"
                        }
                      ],
                      "name": "single",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "name": "originId",
                          "type": "uint256"
                        },
                        {
                          "components": [
                            {
                              "name": "amount",
                              "type": "int256"
                            },
                            {
                              "components": [
                                {
                                  "name": "ct",
                                  "type": "address"
                                },
                                {
                                  "name": "id",
                                  "type": "uint256"
                                }
                              ],
                              "name": "currency",
                              "type": "tuple"
                            }
                          ],
                          "name": "figure",
                          "type": "tuple"
                        }
                      ],
                      "name": "total",
                      "type": "tuple[]"
                    }
                  ],
                  "name": "fees",
                  "type": "tuple"
                }
              ],
              "name": "seller",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "components": [
                    {
                      "name": "single",
                      "type": "int256"
                    },
                    {
                      "name": "total",
                      "type": "int256"
                    }
                  ],
                  "name": "intended",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "name": "single",
                      "type": "int256"
                    },
                    {
                      "name": "total",
                      "type": "int256"
                    }
                  ],
                  "name": "conjugate",
                  "type": "tuple"
                }
              ],
              "name": "transfers",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "name": "hash",
                  "type": "bytes32"
                },
                {
                  "components": [
                    {
                      "name": "r",
                      "type": "bytes32"
                    },
                    {
                      "name": "s",
                      "type": "bytes32"
                    },
                    {
                      "name": "v",
                      "type": "uint8"
                    }
                  ],
                  "name": "signature",
                  "type": "tuple"
                }
              ],
              "name": "seal",
              "type": "tuple"
            },
            {
              "name": "blockNumber",
              "type": "uint256"
            },
            {
              "name": "operatorId",
              "type": "uint256"
            }
          ],
          "name": "trade2",
          "type": "tuple"
        }
      ],
      "name": "challenge",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "",
  "deployedBytecode": "0x6080604052600436106100d75763ffffffff60e060020a60003504166301370d0681146100dc5780631327d3d8146100fe5780632738a1121461011e5780632f013a00146101335780633a5381b51461015e5780633bd7857f146101805780634476d23b14610195578063570ca735146101b7578063627f09c3146101cc5780636792ce6e146101ec5780636b0570d01461020c5780636c70bee91461022157806370327ea1146102365780638fdcfa841461024b578063962147351461026b578063b3ab15fb1461028b578063d5f39488146102ab575b600080fd5b3480156100e857600080fd5b506100fc6100f7366004611320565b6102c0565b005b34801561010a57600080fd5b506100fc610119366004611320565b610368565b34801561012a57600080fd5b506100fc610400565b34801561013f57600080fd5b50610148610466565b60405161015591906117ae565b60405180910390f35b34801561016a57600080fd5b5061017361046f565b60405161015591906117f2565b34801561018c57600080fd5b5061017361047e565b3480156101a157600080fd5b506101aa61048d565b6040516101559190611757565b3480156101c357600080fd5b506101aa6104a1565b3480156101d857600080fd5b506100fc6101e7366004611320565b6104b0565b3480156101f857600080fd5b506100fc610207366004611320565b610548565b34801561021857600080fd5b506101736105e0565b34801561022d57600080fd5b506101736105ef565b34801561024257600080fd5b506100fc6105fe565b34801561025757600080fd5b506100fc61026636600461133e565b610661565b34801561027757600080fd5b506100fc6102863660046112dc565b610be2565b34801561029757600080fd5b506100fc6102a63660046112dc565b610ca9565b3480156102b757600080fd5b506101aa610d53565b60006102ca610d67565b15156102d557600080fd5b81600160a060020a03811615156102eb57600080fd5b6002548390600160a060020a0390811690821681146103615760028054600160a060020a03878116600160a060020a0319831617909255604051911694507f07998fa7be97abe2427246ae4688298c89d6196bbffdf0997b9495a8d27bc673906103589086908890611800565b60405180910390a15b5050505050565b6000610372610d67565b151561037d57600080fd5b81600160a060020a038116151561039357600080fd5b6004548390600160a060020a0390811690821681146103615760048054600160a060020a03878116600160a060020a0319831617909255604051911694507f1882af944a16549c3d4f60e3cd26f158b0c7aac3222cf32971fc21375ce05f60906103589086908890611800565b3361040961048d565b600160a060020a03161461041c57600080fd5b60005460ff161561042c57600080fd5b7f787a5d936e74f4b564b9153575886059829c78cd9927b1be5e0d976b317ef7363360405161045b9190611757565b60405180910390a133ff5b60005460ff1681565b600454600160a060020a031681565b600254600160a060020a031681565b6000546101009004600160a060020a031690565b600154600160a060020a031681565b60006104ba610d67565b15156104c557600080fd5b81600160a060020a03811615156104db57600080fd5b6003548390600160a060020a0390811690821681146103615760038054600160a060020a03878116600160a060020a0319831617909255604051911694507f634f61bf00e14adedce330c80c2823e16e184f189ebe853e1ddecc4a268477ff906103589086908890611800565b6000610552610d67565b151561055d57600080fd5b81600160a060020a038116151561057357600080fd5b6005548390600160a060020a0390811690821681146103615760058054600160a060020a03878116600160a060020a0319831617909255604051911694507fc9f3f00c1760fe26985aeacb814a21c56ea289d680562e89b249681b08c30382906103589086908890611800565b600554600160a060020a031681565b600354600160a060020a031681565b3361060761048d565b600160a060020a03161461061a57600080fd5b6000805460ff191660011790556040517fd5a2a04a775c741c2ca0dc46ea7ce4835190e1aaf1ca018def0e82568ec3361690610657903390611757565b60405180910390a1565b600080600360009054906101000a9004600160a060020a0316600160a060020a031663f71e860f6040518163ffffffff1660e060020a028152600401602060405180830381600087803b1580156106b757600080fd5b505af11580156106cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506106ef9190810190611302565b15156106fa57600080fd5b6004805460405160e160020a637211c8c70281528692600160a060020a039092169163e423918e9161072e9185910161181b565b602060405180830381600087803b15801561074857600080fd5b505af115801561075c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506107809190810190611302565b151561078b57600080fd5b6004805460405160e160020a637211c8c70281528692600160a060020a039092169163e423918e916107bf9185910161181b565b602060405180830381600087803b1580156107d957600080fd5b505af11580156107ed573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506108119190810190611302565b151561081c57600080fd5b60e080860151519087015151141561083357600080fd5b6080808601518101516020908101518101518883015183015182015182015160a0808a0151850151840151840151908b015190940151830151909201519114955014925083806108805750825b151561088b57600080fd5b600360009054906101000a9004600160a060020a0316600160a060020a031663f8e6e8886040518163ffffffff1660e060020a028152600401600060405180830381600087803b1580156108de57600080fd5b505af11580156108f2573d6000803e3d6000fd5b505060025460e08901515160405160e060020a6375d8655b028152600160a060020a0390921693506375d8655b925061092d916004016117bc565b600060405180830381600087803b15801561094757600080fd5b505af115801561095b573d6000803e3d6000fd5b505060025460e08801515160405160e060020a6375d8655b028152600160a060020a0390921693506375d8655b9250610996916004016117bc565b600060405180830381600087803b1580156109b057600080fd5b505af11580156109c4573d6000803e3d6000fd5b50506005546003546040805160e060020a639699f3370281529051600160a060020a03938416955063760b82929450339390921691639699f337916004808201926020929091908290030181600087803b158015610a2157600080fd5b505af1158015610a35573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610a5991908101906113a5565b60006040518463ffffffff1660e060020a028152600401610a7c93929190611786565b600060405180830381600087803b158015610a9657600080fd5b505af1158015610aaa573d6000803e3d6000fd5b505050508315610b215760025460808601516020015160405160e160020a632531d11d028152600160a060020a0390921691634a63a23a91610aee91600401611757565b600060405180830381600087803b158015610b0857600080fd5b505af1158015610b1c573d6000803e3d6000fd5b505050505b8215610b945760025460a08601516020015160405160e160020a632531d11d028152600160a060020a0390921691634a63a23a91610b6191600401611757565b600060405180830381600087803b158015610b7b57600080fd5b505af1158015610b8f573d6000803e3d6000fd5b505050505b60e0808701515190860151516040517f062cdd5a38a8c97ea6d34cf2f7ead767cd74a89372d592342cc5a78de2d425db92610bd292909133906117ca565b60405180910390a1505050505050565b6000610bec610d67565b1515610bf757600080fd5b81600160a060020a0381161515610c0d57600080fd5b600160a060020a038116301415610c2357600080fd5b600054600160a060020a038481166101009092041614610ca45760008054600160a060020a0385811661010090810261010060a860020a0319841617909355604051929091041692507f977e5fa58e458501775e0008d275006294c5249e3c08d1d0e3a9f3acad14f6e490610c9b908490869061176b565b60405180910390a15b505050565b6000610cb3610d7d565b1515610cbe57600080fd5b81600160a060020a0381161515610cd457600080fd5b600160a060020a038116301415610cea57600080fd5b600154600160a060020a03848116911614610ca45760018054600160a060020a03858116600160a060020a0319831617909255604051911692507f9f611b789425d0d5b90b920f1b2852907dd865c80074a30b1629aaa041d1812c90610c9b908490869061176b565b6000546101009004600160a060020a031681565b6000546101009004600160a060020a0316331490565b600154600160a060020a0316331490565b6000610d9a823561187c565b9392505050565b6000601f82018313610db257600080fd5b8135610dc5610dc082611852565b61182c565b91508181835260208401935060208101905083856080840282011115610dea57600080fd5b60005b83811015610e185781610e008882610f74565b84525060209092019160809190910190600101610ded565b5050505092915050565b6000610d9a8251611888565b6000610d9a823561188d565b6000610d9a82356118a6565b6000610d9a82356118b1565b600060408284031215610e6457600080fd5b610e6e604061182c565b90506000610e7c8484610d8e565b8252506020610e8d84848301610e2e565b60208301525092915050565b600060408284031215610eab57600080fd5b610eb5604061182c565b90506000610e7c8484610e2e565b600060608284031215610ed557600080fd5b610edf604061182c565b90506000610eed8484610e2e565b8252506020610e8d84848301610e52565b600060808284031215610f1057600080fd5b610f1a604061182c565b90506000610f288484610e52565b8252506040610e8d84848301610e52565b600060808284031215610f4b57600080fd5b610f55604061182c565b90506000610f638484610e99565b8252506040610e8d84848301610e99565b600060808284031215610f8657600080fd5b610f90604061182c565b90506000610f9e8484610e2e565b8252506020610e8d84848301610ec3565b600060808284031215610fc157600080fd5b610fcb604061182c565b90506000610fd98484610e2e565b8252506020610e8d84848301600060608284031215610ff757600080fd5b611001606061182c565b9050600061100f8484610e2e565b825250602061102084848301610e2e565b6020830152506040611034848285016112d0565b60408301525092915050565b60006080828403121561105257600080fd5b61105c604061182c565b9050600061106a8484610ec3565b82525060608201356001604060020a0381111561108657600080fd5b610e8d84828501610da1565b600060a082840312156110a457600080fd5b6110ae606061182c565b905060006110bc8484610e2e565b82525060206110cd84848301610e99565b602083015250606061103484828501610e99565b60006101c082840312156110f457600080fd5b6110fe60e061182c565b9050600061110c8484610e2e565b825250602061111d84848301610d8e565b602083015250604061113184828501610e2e565b604083015250606061114584828501610e46565b606083015250608061115984828501611092565b60808301525061012061116e84828501610f39565b60a0830152506101a08201356001604060020a0381111561118e57600080fd5b61119a84828501611040565b60c08301525092915050565b600061026082840312156111b957600080fd5b6111c461014061182c565b905060006111d28484610e2e565b82525060206111e384848301610e2e565b60208301525060406111f784828501610efe565b60408301525060c061120b84828501610e2e565b60608301525060e08201356001604060020a0381111561122a57600080fd5b611236848285016110e1565b6080830152506101008201356001604060020a0381111561125657600080fd5b611262848285016110e1565b60a08301525061012061127784828501610f39565b60c0830152506101a061128c84828501610faf565b60e0830152506102206112a184828501610e2e565b610100830152506102406112b784828501610e2e565b6101208301525092915050565b6000610d9a825161188d565b6000610d9a82356118a0565b6000602082840312156112ee57600080fd5b60006112fa8484610d8e565b949350505050565b60006020828403121561131457600080fd5b60006112fa8484610e22565b60006020828403121561133257600080fd5b60006112fa8484610e3a565b6000806040838503121561135157600080fd5b82356001604060020a0381111561136757600080fd5b611373858286016111a6565b92505060208301356001604060020a0381111561138f57600080fd5b61139b858286016111a6565b9150509250929050565b6000602082840312156113b757600080fd5b60006112fa84846112c4565b6113cc8161187c565b82525050565b60006113dd82611878565b8084526020840193506113ef83611872565b60005b8281101561141f576114058683516114fd565b61140e82611872565b6080969096019591506001016113f2565b5093949350505050565b6113cc81611888565b6113cc8161188d565b6113cc816118a6565b6113cc816118c0565b6113cc816118cb565b8051604083019061146784826113c3565b50602082015161147a6020850182611432565b50505050565b805160408301906114678482611432565b805160608301906114a28482611432565b50602082015161147a6020850182611456565b805160808301906114c68482611456565b50602082015161147a6040850182611456565b805160808301906114ea8482611480565b50602082015161147a6040850182611480565b8051608083019061150e8482611432565b50602082015161147a6020850182611491565b805160808301906115328482611432565b50602082015161147a6020850182805160608301906115518482611432565b5060208201516115646020850182611432565b50604082015161147a604085018261174e565b8051600090608084019061158b8582611491565b50602083015184820360608601526115a382826113d2565b95945050505050565b805160a08301906115bd8482611432565b5060208201516115d06020850182611480565b50604082015161147a6060850182611480565b80516000906101c08401906115f88582611432565b50602083015161160b60208601826113c3565b50604083015161161e6040860182611432565b5060608301516116316060860182611444565b50608083015161164460808601826115ac565b5060a08301516116586101208601826114d9565b5060c08301518482036101a08601526115a38282611577565b80516000906102608401906116868582611432565b5060208301516116996020860182611432565b5060408301516116ac60408601826114b5565b5060608301516116bf60c0860182611432565b50608083015184820360e08601526116d782826115e3565b91505060a08301518482036101008601526116f282826115e3565b91505060c08301516117086101208601826114d9565b5060e083015161171c6101a0860182611521565b50610100830151611731610220860182611432565b50610120830151611746610240860182611432565b509392505050565b6113cc816118a0565b6020810161176582846113c3565b92915050565b6040810161177982856113c3565b610d9a60208301846113c3565b6060810161179482866113c3565b6117a16020830185611432565b6112fa604083018461144d565b602081016117658284611429565b602081016117658284611432565b606081016117d88286611432565b6117e56020830185611432565b6112fa60408301846113c3565b60208101611765828461143b565b6040810161180e828561143b565b610d9a602083018461143b565b60208082528101610d9a8184611671565b6040518181016001604060020a038111828210171561184a57600080fd5b604052919050565b60006001604060020a0382111561186857600080fd5b5060209081020190565b60200190565b5190565b600160a060020a031690565b151590565b90565b60006002821061189c57fe5b5090565b60ff1690565b60006117658261187c565b60006002821061189c57600080fd5b600061176582611890565b60006117658261188d5600a265627a7a72305820277dad4d95991177143039612f73adc780b12bf5c5c7bb3db7b52c8d0cf822d46c6578706572696d656e74616cf50037",
  "sourceMap": "635:2438:37:-;;;1167:62;8:9:-1;5:2;;;30:1;27;20:12;5:2;1167:62:37;;;;;;;;;;;;;;;;;;;;;;1205:8;;-1:-1:-1;;;;;673:22:51;;;;665:31;;;;;;-1:-1:-1;;;;;714:25:51;;734:4;714:25;;706:34;;;;;;-1:-1:-1;1097:8:63;:20;;-1:-1:-1;;;;;;1097:20:63;;-1:-1:-1;;;;;1097:20:63;;;;;;;;;;-1:-1:-1;1127:20:63;;-1:-1:-1;;;;;;1127:20:63;;;;;;-1:-1:-1;635:2438:37;;5:122:-1;;83:39;114:6;108:13;83:39;;;74:48;68:59;-1:-1;;;68:59;134:263;;249:2;237:9;228:7;224:23;220:32;217:2;;;265:1;262;255:12;217:2;300:1;317:64;373:7;353:9;317:64;;;307:74;211:186;-1:-1;;;;211:186;404:128;-1:-1;;;;;473:54;;456:76;;635:2438:37;;;;;;",
  "deployedSourceMap": "635:2438:37:-;;;;;;;;;-1:-1:-1;;;635:2438:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1089:430:35;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1089:430:35;;;;;;;;;;;1188:357:92;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1188:357:92;;;;;;;;;1441:425:75;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1441:425:75;;;;413:35;;8:9:-1;5:2;;;30:1;27;20:12;5:2;413:35:75;;;;;;;;;;;;;;;;;;;;668:28:92;;8:9:-1;5:2;;;30:1;27;20:12;5:2;668:28:92;;;;;;;;;;;;524:36:35;;8:9:-1;5:2;;;30:1;27;20:12;5:2;524:36:35;;;;1382:100:63;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1382:100:63;;;;;;;;;;;;555:23;;8:9:-1;5:2;;;30:1;27;20:12;5:2;555:23:63;;;;1060:414:19;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1060:414:19;;;;;;;;;1061:399:74;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1061:399:74;;;;;;;;;516:32;;8:9:-1;5:2;;;30:1;27;20:12;5:2;516:32:74;;;;506:34:19;;8:9:-1;5:2;;;30:1;27;20:12;5:2;506:34:19;;;;1083:314:75;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1083:314:75;;;;1629:1442:37;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1629:1442:37;;;;;;;;;1597:368:63;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1597:368:63;;;;;;;;;2080;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2080:368:63;;;;;;;;;526:23;;8:9:-1;5:2;;;30:1;27;20:12;5:2;526:23:63;;;;1089:430:35;1321:32;3453:12:63;:10;:12::i;:::-;3445:21;;;;;;;;1197:17:35;-1:-1:-1;;;;;450:22:51;;;;442:31;;;;;;1256:14:35;;1237:17;;-1:-1:-1;;;;;1256:14:35;;;;842:22:51;;;;838:41;;1356:14:35;;;-1:-1:-1;;;;;1380:34:35;;;-1:-1:-1;;;;;;1380:34:35;;;;;;1452:60;;1356:14;;;-1:-1:-1;1452:60:35;;;;1356:14;;1397:17;;1452:60;;;;;;;;;;838:41:51;483:1;;3476::63;1089:430:35;;:::o;1188:357:92:-;1385:24;3453:12:63;:10;:12::i;:::-;3445:21;;;;;;;;1283:12:92;-1:-1:-1;;;;;450:22:51;;;;442:31;;;;;;1332:9:92;;1318:12;;-1:-1:-1;;;;;1332:9:92;;;;842:22:51;;;;838:41;;1412:9:92;;;-1:-1:-1;;;;;1431:24:92;;;-1:-1:-1;;;;;;1431:24:92;;;;;;1493:45;;1412:9;;;-1:-1:-1;1493:45:92;;;;1412:9;;1443:12;;1493:45;;1441:425:75;1582:10;1566:12;:10;:12::i;:::-;-1:-1:-1;;;;;1566:26:75;;1558:35;;;;;;1676:23;;;;1675:24;1667:33;;;;;;1738:39;1766:10;1738:39;;;;;;;;;;;;;;;1848:10;1835:24;413:35;;;;;;:::o;668:28:92:-;;;-1:-1:-1;;;;;668:28:92;;:::o;524:36:35:-;;;-1:-1:-1;;;;;524:36:35;;:::o;1382:100:63:-;1437:7;1467:8;;;;-1:-1:-1;;;;;1467:8:63;;1382:100::o;555:23::-;;;-1:-1:-1;;;;;555:23:63;;:::o;1060:414:19:-;1284:30;3453:12:63;:10;:12::i;:::-;3445:21;;;;;;;;1165:16:19;-1:-1:-1;;;;;450:22:51;;;;442:31;;;;;;1222:13:19;;1204:16;;-1:-1:-1;;;;;1222:13:19;;;;842:22:51;;;;838:41;;1317:13:19;;;-1:-1:-1;;;;;1340:32:19;;;-1:-1:-1;;;;;;1340:32:19;;;;;;1410:57;;1317:13;;;-1:-1:-1;1410:57:19;;;;1317:13;;1356:16;;1410:57;;1061:399:74;1278:28;3453:12:63;:10;:12::i;:::-;3445:21;;;;;;;;1163:15:74;-1:-1:-1;;;;;450:22:51;;;;442:31;;;;;;1218:12:74;;1201:15;;-1:-1:-1;;;;;1218:12:74;;;;842:22:51;;;;838:41;;1309:12:74;;;-1:-1:-1;;;;;1331:30:74;;;-1:-1:-1;;;;;;1331:30:74;;;;;;1399:54;;1309:12;;;-1:-1:-1;1399:54:74;;;;1309:12;;1346:15;;1399:54;;516:32;;;-1:-1:-1;;;;;516:32:74;;:::o;506:34:19:-;;;-1:-1:-1;;;;;506:34:19;;:::o;1083:314:75:-;1224:10;1208:12;:10;:12::i;:::-;-1:-1:-1;;;;;1208:26:75;;1200:35;;;;;;1282:23;:30;;-1:-1:-1;;1282:30:75;1308:4;1282:30;;;1350:40;;;;;;1379:10;;1350:40;;;;;;;;;;1083:314::o;1629:1442:37:-;1956:24;2065:25;574:13:20;;;;;;;;;-1:-1:-1;;;;;574:13:20;-1:-1:-1;;;;;574:37:20;;:39;;;;;-1:-1:-1;;;574:39:20;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;574:39:20;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;574:39:20;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;574:39:20;;;;;;;;;566:48;;;;;;;;2141:9:92;;;:35;;-1:-1:-1;;;;;2141:35:92;;1787:6:37;;-1:-1:-1;;;;;2141:9:92;;;;:28;;:35;;1787:6:37;;2141:35:92;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2141:35:92;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2141:35:92;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;2141:35:92;;;;;;;;;2133:44;;;;;;;;2141:9;;;:35;;-1:-1:-1;;;;;2141:35:92;;1815:6:37;;-1:-1:-1;;;;;2141:9:92;;;;:28;;:35;;1815:6:37;;2141:35:92;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2141:35:92;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2141:35:92;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;2141:35:92;;;;;;;;;2133:44;;;;;;;;1865:11:37;;;;;:16;1845:11;;;;:16;:36;;1837:45;;;;;;2021:12;;;;;:18;;;:25;;;;;:34;;;1983:12;;;;:18;;;:25;;;:34;;;2132:13;;;;;:19;;;:26;;;:35;;;2093:13;;;;:19;;;;:26;;;:35;;;;1983:72;;;-1:-1:-1;2093:74:37;;-1:-1:-1;1983:72:37;;2231:43;;;2254:20;2231:43;2223:52;;;;;;;;2326:13;;;;;;;;;-1:-1:-1;;;;;2326:13:37;-1:-1:-1;;;;;2326:36:37;;:38;;;;;-1:-1:-1;;;2326:38:37;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2326:38:37;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;2420:14:37;;2458:11;;;;:16;2420:55;;-1:-1:-1;;;;;2420:55:37;;-1:-1:-1;;;;;2420:14:37;;;;-1:-1:-1;2420:37:37;;-1:-1:-1;2420:55:37;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2420:55:37;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;2485:14:37;;2523:11;;;;:16;2485:55;;-1:-1:-1;;;;;2485:55:37;;-1:-1:-1;;;;;2485:14:37;;;;-1:-1:-1;2485:37:37;;-1:-1:-1;2485:55:37;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2485:55:37;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;2584:12:37;;2626:13;;:34;;;-1:-1:-1;;;;;2626:34:37;;;;-1:-1:-1;;;;;2584:12:37;;;;-1:-1:-1;2584:29:37;;-1:-1:-1;2614:10:37;;2626:13;;;;:32;;:34;;;;;;;;;;;;;;;2584:12;2626:13;:34;;;5:2:-1;;;;30:1;27;20:12;5:2;2626:34:37;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2626:34:37;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;2626:34:37;;;;;;;;;2662:1;2584:80;;;;;-1:-1:-1;;;2584:80:37;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2584:80:37;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2584:80:37;;;;2725:19;2721:95;;;2758:14;;2796:12;;;;:19;;;2758:58;;-1:-1:-1;;;;;2758:58:37;;-1:-1:-1;;;;;2758:14:37;;;;:37;;:58;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2758:58:37;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2758:58:37;;;;2721:95;2830:20;2826:97;;;2864:14;;2902:13;;;;:20;;;2864:59;;-1:-1:-1;;;;;2864:59:37;;-1:-1:-1;;;;;2864:14:37;;;;:37;;:59;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2864:59:37;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2864:59:37;;;;2826:97;3008:11;;;;;:16;3026:11;;;;:16;2961:103;;;;;;3008:16;;3044:10;;2961:103;;;;;;;;;;2187:1:92;624::20;1629:1442:37;;;;:::o;1597:368:63:-;1794:19;3453:12;:10;:12::i;:::-;3445:21;;;;;;;;1692:11;-1:-1:-1;;;;;673:22:51;;;;665:31;;;;;;-1:-1:-1;;;;;714:25:51;;734:4;714:25;;706:34;;;;;;1738:8:63;;-1:-1:-1;;;;;1723:23:63;;;1738:8;;;;;1723:23;1719:240;;1816:8;;;-1:-1:-1;;;;;1838:22:63;;;1816:8;1838:22;;;-1:-1:-1;;;;;;1838:22:63;;;;;;1906:42;;1816:8;;;;;;-1:-1:-1;1906:42:63;;;;1816:8;;1849:11;;1906:42;;;;;;;;;;1719:240;3476:1;1597:368;;:::o;2080:::-;2277:19;3611:12;:10;:12::i;:::-;3603:21;;;;;;;;2175:11;-1:-1:-1;;;;;673:22:51;;;;665:31;;;;;;-1:-1:-1;;;;;714:25:51;;734:4;714:25;;706:34;;;;;;2221:8:63;;-1:-1:-1;;;;;2206:23:63;;;2221:8;;2206:23;2202:240;;2299:8;;;-1:-1:-1;;;;;2321:22:63;;;-1:-1:-1;;;;;;2321:22:63;;;;;;2389:42;;2299:8;;;-1:-1:-1;2389:42:63;;;;2299:8;;2332:11;;2389:42;;526:23;;;;;;-1:-1:-1;;;;;526:23:63;;:::o;2577:113::-;2634:4;2675:8;;;;-1:-1:-1;;;;;2675:8:63;2661:10;:22;;2577:113::o;2819:::-;2917:8;;-1:-1:-1;;;;;2917:8:63;2903:10;:22;;2819:113::o;5:118:-1:-;;72:46;110:6;97:20;72:46;;;63:55;57:66;-1:-1;;;57:66;175:780;;308:4;296:17;;292:27;-1:-1;282:2;;333:1;330;323:12;282:2;370:6;357:20;392:103;407:87;487:6;407:87;;;392:103;;;383:112;;512:5;537:6;530:5;523:21;567:4;559:6;555:17;545:27;;589:4;584:3;580:14;573:21;;642:6;689:3;681:4;673:6;669:17;664:3;660:27;657:36;654:2;;;706:1;703;696:12;654:2;731:1;716:233;741:6;738:1;735:13;716:233;;;799:3;821:64;881:3;869:10;821:64;;;809:77;;-1:-1;909:4;900:14;;;;937:4;928:14;;;;;763:1;756:9;716:233;;;720:14;275:680;;;;;;;;963:116;;1038:36;1066:6;1060:13;1038:36;;1086:118;;1153:46;1191:6;1178:20;1153:46;;1211:162;;1300:68;1360:6;1347:20;1300:68;;1889:156;;1975:65;2032:6;2019:20;1975:65;;2214:460;;2326:4;2314:9;2309:3;2305:19;2301:30;2298:2;;;2344:1;2341;2334:12;2298:2;2362:20;2377:4;2362:20;;;2353:29;-1:-1;2430:1;2461:49;2506:3;2486:9;2461:49;;;2437:74;;-1:-1;2570:2;2603:49;2648:3;2624:22;;;2603:49;;;2596:4;2589:5;2585:16;2578:75;2532:132;2292:382;;;;;2731:482;;2856:4;2844:9;2839:3;2835:19;2831:30;2828:2;;;2874:1;2871;2864:12;2828:2;2892:20;2907:4;2892:20;;;2883:29;-1:-1;2965:1;2996:48;3040:3;3020:9;2996:48;;3257:490;;3367:4;3355:9;3350:3;3346:19;3342:30;3339:2;;;3385:1;3382;3375:12;3339:2;3403:20;3418:4;3403:20;;;3394:29;-1:-1;3475:1;3506:48;3550:3;3530:9;3506:48;;;3482:73;;-1:-1;3620:2;3653:72;3721:3;3697:22;;;3653:72;;3808:536;;3937:4;3925:9;3920:3;3916:19;3912:30;3909:2;;;3955:1;3952;3945:12;3909:2;3973:20;3988:4;3973:20;;;3964:29;-1:-1;4047:1;4078:72;4146:3;4126:9;4078:72;;;4054:97;;-1:-1;4217:2;4250:72;4318:3;4294:22;;;4250:72;;4418:575;;4560:4;4548:9;4543:3;4539:19;4535:30;4532:2;;;4578:1;4575;4568:12;4532:2;4596:20;4611:4;4596:20;;;4587:29;-1:-1;4670:1;4701:85;4782:3;4762:9;4701:85;;;4677:110;;-1:-1;4853:2;4886:85;4967:3;4943:22;;;4886:85;;5674:495;;5790:4;5778:9;5773:3;5769:19;5765:30;5762:2;;;5808:1;5805;5798:12;5762:2;5826:20;5841:4;5826:20;;;5817:29;-1:-1;5900:1;5931:49;5976:3;5956:9;5931:49;;;5907:74;;-1:-1;6044:2;6077:70;6143:3;6119:22;;;6077:70;;6209:489;;6317:4;6305:9;6300:3;6296:19;6292:30;6289:2;;;6335:1;6332;6325:12;6289:2;6353:20;6368:4;6353:20;;;6344:29;-1:-1;6423:1;6454:49;6499:3;6479:9;6454:49;;;6430:74;;-1:-1;6570:2;6603:73;6672:3;6648:22;;;6743:598;6856:4;6844:9;6839:3;6835:19;6831:30;6828:2;;;6874:1;6871;6864:12;6828:2;6892:20;6907:4;6892:20;;;6883:29;-1:-1;6959:1;6990:49;7035:3;7015:9;6990:49;;;6966:74;;-1:-1;7098:2;7131:49;7176:3;7152:22;;;7131:49;;;7124:4;7117:5;7113:16;7106:75;7061:131;7239:2;7272:47;7315:3;7306:6;7295:9;7291:22;7272:47;;;7265:4;7258:5;7254:16;7247:73;7202:129;6822:519;;;;;7407:644;;7541:4;7529:9;7524:3;7520:19;7516:30;7513:2;;;7559:1;7556;7549:12;7513:2;7577:20;7592:4;7577:20;;;7568:29;-1:-1;7649:1;7680:70;7746:3;7726:9;7680:70;;;7656:95;;-1:-1;7841:2;7826:18;;7813:32;-1:-1;;;;;7854:30;;7851:2;;;7897:1;7894;7887:12;7851:2;7932:97;8025:3;8016:6;8005:9;8001:22;7932:97;;8623:689;;8737:4;8725:9;8720:3;8716:19;8712:30;8709:2;;;8755:1;8752;8745:12;8709:2;8773:20;8788:4;8773:20;;;8764:29;-1:-1;8845:1;8876:48;8920:3;8900:9;8876:48;;;8852:73;;-1:-1;8988:2;9021:84;9101:3;9077:22;;;9021:84;;;9014:4;9007:5;9003:16;8996:110;8946:171;9172:2;9205:85;9286:3;9277:6;9266:9;9262:22;9205:85;;9357:1444;;9471:5;9459:9;9454:3;9450:19;9446:31;9443:2;;;9490:1;9487;9480:12;9443:2;9508:20;9523:4;9508:20;;;9499:29;-1:-1;9579:1;9610:49;9655:3;9635:9;9610:49;;;9586:74;;-1:-1;9723:2;9756:49;9801:3;9777:22;;;9756:49;;;9749:4;9742:5;9738:16;9731:75;9681:136;9876:2;9909:49;9954:3;9945:6;9934:9;9930:22;9909:49;;;9902:4;9895:5;9891:16;9884:75;9827:143;10029:2;10062:68;10126:3;10117:6;10106:9;10102:22;10062:68;;;10055:4;10048:5;10044:16;10037:94;9980:162;10193:3;10227:74;10297:3;10288:6;10277:9;10273:22;10227:74;;;10220:4;10213:5;10209:16;10202:100;10152:161;10367:3;10401:102;10499:3;10490:6;10479:9;10475:22;10401:102;;;10394:4;10387:5;10383:16;10376:128;10323:192;10593:3;10582:9;10578:19;10565:33;-1:-1;;;;;10610:6;10607:30;10604:2;;;10650:1;10647;10640:12;10604:2;10685:94;10775:3;10766:6;10755:9;10751:22;10685:94;;;10678:4;10671:5;10667:16;10660:120;10525:266;9437:1364;;;;;10841:1986;;10954:5;10942:9;10937:3;10933:19;10929:31;10926:2;;;10973:1;10970;10963:12;10926:2;10991:21;11006:5;10991:21;;;10982:30;-1:-1;11063:1;11094:49;11139:3;11119:9;11094:49;;;11070:74;;-1:-1;11207:2;11240:48;11284:3;11260:22;;;11240:48;;;11233:4;11226:5;11222:16;11215:74;11165:135;11356:2;11389:89;11474:3;11465:6;11454:9;11450:22;11389:89;;;11382:4;11375:5;11371:16;11364:115;11310:180;11540:3;11574:48;11618:3;11609:6;11598:9;11594:22;11574:48;;;11567:4;11560:5;11556:16;11549:74;11500:134;11713:3;11702:9;11698:19;11685:33;-1:-1;;;;;11730:6;11727:30;11724:2;;;11770:1;11767;11760:12;11724:2;11805:74;11875:3;11866:6;11855:9;11851:22;11805:74;;;11798:4;11791:5;11787:16;11780:100;11644:247;11971:3;11960:9;11956:19;11943:33;-1:-1;;;;;11988:6;11985:30;11982:2;;;12028:1;12025;12018:12;11982:2;12063:74;12133:3;12124:6;12113:9;12109:22;12063:74;;;12056:4;12049:5;12045:16;12038:100;11901:248;12204:3;12238:98;12332:3;12323:6;12312:9;12308:22;12238:98;;;12231:4;12224:5;12220:16;12213:124;12159:189;12398:3;12432:68;12496:3;12487:6;12476:9;12472:22;12432:68;;;12425:4;12418:5;12414:16;12407:94;12358:154;12569:3;12604:49;12649:3;12640:6;12629:9;12625:22;12604:49;;;12596:5;12589;12585:17;12578:76;12522:143;12721:3;12756:49;12801:3;12792:6;12781:9;12777:22;12756:49;;;12748:5;12741;12737:17;12730:76;12675:142;10920:1907;;;;;13497:122;;13575:39;13606:6;13600:13;13575:39;;13626:114;;13691:44;13727:6;13714:20;13691:44;;13747:241;;13851:2;13839:9;13830:7;13826:23;13822:32;13819:2;;;13867:1;13864;13857:12;13819:2;13902:1;13919:53;13964:7;13944:9;13919:53;;;13909:63;13813:175;-1:-1;;;;13813:175;13995:257;;14107:2;14095:9;14086:7;14082:23;14078:32;14075:2;;;14123:1;14120;14113:12;14075:2;14158:1;14175:61;14228:7;14208:9;14175:61;;14259:285;;14385:2;14373:9;14364:7;14360:23;14356:32;14353:2;;;14401:1;14398;14391:12;14353:2;14436:1;14453:75;14520:7;14500:9;14453:75;;15429:634;;;15598:2;15586:9;15577:7;15573:23;15569:32;15566:2;;;15614:1;15611;15604:12;15566:2;15649:31;;-1:-1;;;;;15689:30;;15686:2;;;15732:1;15729;15722:12;15686:2;15752:77;15821:7;15812:6;15801:9;15797:22;15752:77;;;15742:87;;15628:207;15894:2;15883:9;15879:18;15866:32;-1:-1;;;;;15910:6;15907:30;15904:2;;;15950:1;15947;15940:12;15904:2;15970:77;16039:7;16030:6;16019:9;16015:22;15970:77;;;15960:87;;15845:208;15560:503;;;;;;16070:263;;16185:2;16173:9;16164:7;16160:23;16156:32;16153:2;;;16201:1;16198;16191:12;16153:2;16236:1;16253:64;16309:7;16289:9;16253:64;;16340:110;16413:31;16438:5;16413:31;;;16408:3;16401:44;16395:55;;;16542:767;;16727:77;16798:5;16727:77;;;16822:6;16817:3;16810:19;16846:4;16841:3;16837:14;16830:21;;16891:79;16964:5;16891:79;;;16991:1;16976:311;17001:6;16998:1;16995:13;16976:311;;;17041:111;17148:3;17139:6;17133:13;17041:111;;;17169:83;17245:6;17169:83;;;17275:4;17266:14;;;;;17159:93;-1:-1;17023:1;17016:9;16976:311;;;-1:-1;17300:3;;16706:603;-1:-1;;;;16706:603;17317:101;17384:28;17406:5;17384:28;;17425:110;17498:31;17523:5;17498:31;;17542:160;17637:59;17690:5;17637:59;;18212:150;18302:54;18350:5;18302:54;;18483:132;18564:45;18603:5;18564:45;;18697:488;18897:22;;18830:4;18821:14;;;18931:61;18825:3;18897:22;18931:61;;;18850:154;19078:4;19071:5;19067:16;19061:23;19096:62;19152:4;19147:3;19143:14;19130:11;19096:62;;;19014:156;18803:382;;;;19289:521;19520:22;;19448:4;19439:14;;;19554:59;19443:3;19520:22;19554:59;;19888:542;20088:22;;20017:4;20008:14;;;20122:59;20012:3;20088:22;20122:59;;;20037:156;20273:4;20266:5;20262:16;20256:23;20291:112;20397:4;20392:3;20388:14;20375:11;20291:112;;20542:635;20782:22;;20709:4;20700:14;;;20816:111;20704:3;20782:22;20816:111;;;20729:210;21020:4;21013:5;21009:16;21003:23;21038:112;21144:4;21139:3;21135:14;21122:11;21038:112;;21315:713;21581:22;;21508:4;21499:14;;;21615:137;21503:3;21581:22;21615:137;;;21528:236;21845:4;21838:5;21834:16;21828:23;21863:138;21995:4;21990:3;21986:14;21973:11;21863:138;;22933:552;23147:22;;23074:4;23065:14;;;23181:61;23069:3;23147:22;23181:61;;;23094:160;23332:4;23325:5;23321:16;23315:23;23350:108;23452:4;23447:3;23443:14;23430:11;23350:108;;23555:541;23749:22;;23680:4;23671:14;;;23783:61;23675:3;23749:22;23783:61;;;23700:156;23937:4;23930:5;23926:16;23920:23;23955:114;24063:4;24058:3;24054:14;24041:11;24377:22;;24311:4;24302:14;;;24411:61;24306:3;24377:22;24411:61;;;24331:153;24557:4;24550:5;24546:16;24540:23;24575:62;24631:4;24626:3;24622:14;24609:11;24575:62;;;24494:155;24722:4;24715:5;24711:16;24705:23;24740:58;24792:4;24787:3;24783:14;24770:11;24740:58;;24947:747;25203:22;;24947:747;;25132:4;25123:14;;;25237:107;25127:3;25203:22;25237:107;;;25152:204;25433:4;25426:5;25422:16;25416:23;25484:3;25478:4;25474:14;25467:4;25462:3;25458:14;25451:38;25504:152;25651:4;25638:11;25504:152;;;25496:160;25105:589;-1:-1;;;;;25105:589;26379:821;26587:22;;26516:4;26507:14;;;26621:59;26511:3;26587:22;26621:59;;;26536:156;26770:4;26763:5;26759:16;26753:23;26788:136;26918:4;26913:3;26909:14;26896:11;26788:136;;;26702:234;27017:4;27010:5;27006:16;27000:23;27035:138;27167:4;27162:3;27158:14;27145:11;27035:138;;27280:1702;27496:22;;27280:1702;;27425:5;27416:15;;;27530:61;27420:3;27496:22;27530:61;;;27446:157;27681:4;27674:5;27670:16;27664:23;27699:62;27755:4;27750:3;27746:14;27733:11;27699:62;;;27613:160;27858:4;27851:5;27847:16;27841:23;27876:62;27932:4;27927:3;27923:14;27910:11;27876:62;;;27783:167;28035:4;28028:5;28024:16;28018:23;28053:79;28126:4;28121:3;28117:14;28104:11;28053:79;;;27960:184;28221:4;28214:5;28210:16;28204:23;28239:116;28349:4;28344:3;28340:14;28327:11;28239:116;;;28154:213;28447:4;28440:5;28436:16;28430:23;28465:173;28631:5;28626:3;28622:15;28609:11;28465:173;;;28377:273;28726:4;28719:5;28715:16;28709:23;28778:3;28772:4;28768:14;28760:5;28755:3;28751:15;28744:39;28798:146;28939:4;28926:11;28798:146;;29052:2309;29262:22;;29052:2309;;29191:5;29182:15;;;29296:61;29186:3;29262:22;29296:61;;;29212:157;29447:4;29440:5;29436:16;29430:23;29465:60;29519:4;29514:3;29510:14;29497:11;29465:60;;;29379:158;29619:4;29612:5;29608:16;29602:23;29637:146;29777:4;29772:3;29768:14;29755:11;29637:146;;;29547:248;29871:4;29864:5;29860:16;29854:23;29889:60;29943:4;29938:3;29934:14;29921:11;29889:60;;;29805:156;30038:4;30031:5;30027:16;30021:23;30089:3;30083:4;30079:14;30072:4;30067:3;30063:14;30056:38;30109:106;30210:4;30197:11;30109:106;;;30101:114;;29971:256;30305:4;30298:5;30294:16;30288:23;30357:3;30351:4;30347:14;30339:5;30334:3;30330:15;30323:39;30377:106;30478:4;30465:11;30377:106;;;30369:114;;30237:258;30576:4;30569:5;30565:16;30559:23;30594:165;30752:5;30747:3;30743:15;30730:11;30594:165;;;30505:266;30847:4;30840:5;30836:16;30830:23;30865:105;30963:5;30958:3;30954:15;30941:11;30865:105;;;30781:201;31065:5;31058;31054:17;31048:24;31084:63;31140:5;31135:3;31131:15;31118:11;31084:63;;;30992:167;31241:5;31234;31230:17;31224:24;31260:63;31316:5;31311:3;31307:15;31294:11;31260:63;;;-1:-1;31352:4;29164:2197;-1:-1;;;29164:2197;32109:104;32178:29;32201:5;32178:29;;32220:193;32328:2;32313:18;;32342:61;32317:9;32376:6;32342:61;;;32299:114;;;;;32420:294;32556:2;32541:18;;32570:61;32545:9;32604:6;32570:61;;;32642:62;32700:2;32689:9;32685:18;32676:6;32642:62;;32721:411;32893:2;32878:18;;32907:61;32882:9;32941:6;32907:61;;;32979:62;33037:2;33026:9;33022:18;33013:6;32979:62;;;33052:70;33118:2;33107:9;33103:18;33094:6;33052:70;;33139:181;33241:2;33226:18;;33255:55;33230:9;33283:6;33255:55;;33327:193;33435:2;33420:18;;33449:61;33424:9;33483:6;33449:61;;33527:395;33691:2;33676:18;;33705:61;33680:9;33739:6;33705:61;;;33777:62;33835:2;33824:9;33820:18;33811:6;33777:62;;;33850;33908:2;33897:9;33893:18;33884:6;33850:62;;33929:237;34059:2;34044:18;;34073:83;34048:9;34129:6;34073:83;;34173:382;34353:2;34338:18;;34367:83;34342:9;34423:6;34367:83;;;34461:84;34541:2;34530:9;34526:18;34517:6;34461:84;;36467:337;36623:2;36637:47;;;36608:18;;36698:96;36608:18;36780:6;36698:96;;36811:256;36873:2;36867:9;36899:17;;;-1:-1;;;;;36959:34;;36995:22;;;36956:62;36953:2;;;37031:1;37028;37021:12;36953:2;37047;37040:22;36851:216;;-1:-1;36851:216;37074:281;;-1:-1;;;;;37248:6;37245:30;37242:2;;;37288:1;37285;37278:12;37242:2;-1:-1;37317:4;37305:17;;;37335:15;;37179:176;37364:144;37496:4;37484:17;;37465:43;37517:130;37630:12;;37614:33;37808:128;-1:-1;;;;;37877:54;;37860:76;37943:92;38016:13;38009:21;;37992:43;38042:79;38111:5;38094:27;38128:136;;38225:1;38215:12;;38205:2;;38231:9;38205:2;-1:-1;38254:5;38199:65;38442:88;38520:4;38509:16;;38492:38;38857:127;;38948:31;38973:5;38948:31;;39394:139;;39491:1;39481:12;;39471:2;;39507:1;39504;39497:12;40383:151;;40479:50;40523:5;40479:50;;40541:123;;40628:31;40653:5;40628:31;",
  "source": "/*\n * Hubii Nahmii\n *\n * Compliant with the Hubii Nahmii specification v0.12.\n *\n * Copyright (C) 2017-2018 Hubii AS\n */\n\npragma solidity ^0.4.25;\npragma experimental ABIEncoderV2;\n\nimport {Ownable} from \"./Ownable.sol\";\nimport {FraudChallengable} from \"./FraudChallengable.sol\";\nimport {ConfigurableOperational} from \"./ConfigurableOperational.sol\";\nimport {ValidatableV2} from \"./ValidatableV2.sol\";\nimport {SecurityBondable} from \"./SecurityBondable.sol\";\nimport {TradeTypesLib} from \"./TradeTypesLib.sol\";\n\n/**\n * @title FraudChallengeByDoubleSpentOrders\n * @notice Where driips are challenged wrt fraud by double spent orders\n */\ncontract FraudChallengeByDoubleSpentOrders is Ownable, FraudChallengable, ConfigurableOperational, ValidatableV2,\nSecurityBondable {\n    //\n    // Events\n    // -----------------------------------------------------------------------------------------------------------------\n    event ChallengeByDoubleSpentOrdersEvent(bytes32 tradeHash1, bytes32 tradeHash2, address challenger);\n\n    //\n    // Constructor\n    // -----------------------------------------------------------------------------------------------------------------\n    constructor(address deployer) Ownable(deployer) public {\n    }\n\n    //\n    // Functions\n    // -----------------------------------------------------------------------------------------------------------------\n    /// @notice Submit two trade candidates in continuous Fraud Challenge (FC) to be tested for\n    /// trade order double spenditure\n    /// @param trade1 First trade with double spent order\n    /// @param trade2 Last trade with double spent order\n    function challenge(\n        TradeTypesLib.Trade trade1,\n        TradeTypesLib.Trade trade2\n    )\n    public\n    onlyOperationalModeNormal\n    onlySealedTrade(trade1)\n    onlySealedTrade(trade2)\n    {\n        require(trade1.seal.hash != trade2.seal.hash);\n\n        // Gauge double expenditure in both sides of the trade\n        bool doubleSpentBuyOrder = trade1.buyer.order.hashes.operator == trade2.buyer.order.hashes.operator;\n        bool doubleSpentSellOrder = trade1.seller.order.hashes.operator == trade2.seller.order.hashes.operator;\n\n        // Require existence of fraud signal\n        require(doubleSpentBuyOrder || doubleSpentSellOrder);\n\n        // Toggle operational mode exit\n        configuration.setOperationalModeExit();\n\n        // Tag trades (hashes) as fraudulent\n        fraudChallenge.addFraudulentTradeHash(trade1.seal.hash);\n        fraudChallenge.addFraudulentTradeHash(trade2.seal.hash);\n\n        // Reward stake fraction\n        securityBond.rewardFractional(msg.sender, configuration.fraudStakeFraction(), 0);\n\n        // Tag wallet(s) as double spender(s)\n        if (doubleSpentBuyOrder)\n            fraudChallenge.addDoubleSpenderWallet(trade2.buyer.wallet);\n        if (doubleSpentSellOrder)\n            fraudChallenge.addDoubleSpenderWallet(trade2.seller.wallet);\n\n        // Emit event\n        emit ChallengeByDoubleSpentOrdersEvent(\n            trade1.seal.hash, trade2.seal.hash, msg.sender\n        );\n    }\n}",
  "sourcePath": "/opt/buildagent/work/855e104608380c36/contracts/FraudChallengeByDoubleSpentOrders.sol",
  "ast": {
    "absolutePath": "/opt/buildagent/work/855e104608380c36/contracts/FraudChallengeByDoubleSpentOrders.sol",
    "exportedSymbols": {
      "FraudChallengeByDoubleSpentOrders": [
        15750
      ]
    },
    "id": 15751,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 15586,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".25"
        ],
        "nodeType": "PragmaDirective",
        "src": "122:24:37"
      },
      {
        "id": 15587,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "147:33:37"
      },
      {
        "absolutePath": "/opt/buildagent/work/855e104608380c36/contracts/Ownable.sol",
        "file": "./Ownable.sol",
        "id": 15589,
        "nodeType": "ImportDirective",
        "scope": 15751,
        "sourceUnit": 25427,
        "src": "182:38:37",
        "symbolAliases": [
          {
            "foreign": 15588,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/opt/buildagent/work/855e104608380c36/contracts/FraudChallengable.sol",
        "file": "./FraudChallengable.sol",
        "id": 15591,
        "nodeType": "ImportDirective",
        "scope": 15751,
        "sourceUnit": 15297,
        "src": "221:58:37",
        "symbolAliases": [
          {
            "foreign": 15590,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/opt/buildagent/work/855e104608380c36/contracts/ConfigurableOperational.sol",
        "file": "./ConfigurableOperational.sol",
        "id": 15593,
        "nodeType": "ImportDirective",
        "scope": 15751,
        "sourceUnit": 5806,
        "src": "280:70:37",
        "symbolAliases": [
          {
            "foreign": 15592,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/opt/buildagent/work/855e104608380c36/contracts/ValidatableV2.sol",
        "file": "./ValidatableV2.sol",
        "id": 15595,
        "nodeType": "ImportDirective",
        "scope": 15751,
        "sourceUnit": 36466,
        "src": "351:50:37",
        "symbolAliases": [
          {
            "foreign": 15594,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/opt/buildagent/work/855e104608380c36/contracts/SecurityBondable.sol",
        "file": "./SecurityBondable.sol",
        "id": 15597,
        "nodeType": "ImportDirective",
        "scope": 15751,
        "sourceUnit": 31548,
        "src": "402:56:37",
        "symbolAliases": [
          {
            "foreign": 15596,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/opt/buildagent/work/855e104608380c36/contracts/TradeTypesLib.sol",
        "file": "./TradeTypesLib.sol",
        "id": 15599,
        "nodeType": "ImportDirective",
        "scope": 15751,
        "sourceUnit": 34565,
        "src": "459:50:37",
        "symbolAliases": [
          {
            "foreign": 15598,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 15600,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 25426,
              "src": "681:7:37",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$25426",
                "typeString": "contract Ownable"
              }
            },
            "id": 15601,
            "nodeType": "InheritanceSpecifier",
            "src": "681:7:37"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 15602,
              "name": "FraudChallengable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 15296,
              "src": "690:17:37",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FraudChallengable_$15296",
                "typeString": "contract FraudChallengable"
              }
            },
            "id": 15603,
            "nodeType": "InheritanceSpecifier",
            "src": "690:17:37"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 15604,
              "name": "ConfigurableOperational",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5805,
              "src": "709:23:37",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ConfigurableOperational_$5805",
                "typeString": "contract ConfigurableOperational"
              }
            },
            "id": 15605,
            "nodeType": "InheritanceSpecifier",
            "src": "709:23:37"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 15606,
              "name": "ValidatableV2",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 36465,
              "src": "734:13:37",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ValidatableV2_$36465",
                "typeString": "contract ValidatableV2"
              }
            },
            "id": 15607,
            "nodeType": "InheritanceSpecifier",
            "src": "734:13:37"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 15608,
              "name": "SecurityBondable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 31547,
              "src": "749:16:37",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SecurityBondable_$31547",
                "typeString": "contract SecurityBondable"
              }
            },
            "id": 15609,
            "nodeType": "InheritanceSpecifier",
            "src": "749:16:37"
          }
        ],
        "contractDependencies": [
          5788,
          5805,
          15296,
          19393,
          25426,
          31547,
          31613,
          36465
        ],
        "contractKind": "contract",
        "documentation": "@title FraudChallengeByDoubleSpentOrders\n@notice Where driips are challenged wrt fraud by double spent orders",
        "fullyImplemented": true,
        "id": 15750,
        "linearizedBaseContracts": [
          15750,
          31547,
          36465,
          5805,
          5788,
          15296,
          25426,
          31613,
          19393
        ],
        "name": "FraudChallengeByDoubleSpentOrders",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": null,
            "id": 15617,
            "name": "ChallengeByDoubleSpentOrdersEvent",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 15616,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15611,
                  "indexed": false,
                  "name": "tradeHash1",
                  "nodeType": "VariableDeclaration",
                  "scope": 15617,
                  "src": "954:18:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 15610,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "954:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15613,
                  "indexed": false,
                  "name": "tradeHash2",
                  "nodeType": "VariableDeclaration",
                  "scope": 15617,
                  "src": "974:18:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 15612,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "974:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15615,
                  "indexed": false,
                  "name": "challenger",
                  "nodeType": "VariableDeclaration",
                  "scope": 15617,
                  "src": "994:18:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15614,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "994:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "953:60:37"
            },
            "src": "914:100:37"
          },
          {
            "body": {
              "id": 15625,
              "nodeType": "Block",
              "src": "1222:7:37",
              "statements": []
            },
            "documentation": null,
            "id": 15626,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 15622,
                    "name": "deployer",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 15619,
                    "src": "1205:8:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 15623,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 15621,
                  "name": "Ownable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 25426,
                  "src": "1197:7:37",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Ownable_$25426_$",
                    "typeString": "type(contract Ownable)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1197:17:37"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15620,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15619,
                  "name": "deployer",
                  "nodeType": "VariableDeclaration",
                  "scope": 15626,
                  "src": "1179:16:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15618,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1179:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1178:18:37"
            },
            "payable": false,
            "returnParameters": {
              "id": 15624,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1222:0:37"
            },
            "scope": 15750,
            "src": "1167:62:37",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 15748,
              "nodeType": "Block",
              "src": "1827:1244:37",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 15648,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 15642,
                              "name": "trade1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15628,
                              "src": "1845:6:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$34547_memory_ptr",
                                "typeString": "struct TradeTypesLib.Trade memory"
                              }
                            },
                            "id": 15643,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "seal",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 34542,
                            "src": "1845:11:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Seal_$19532_memory",
                              "typeString": "struct NahmiiTypesLib.Seal memory"
                            }
                          },
                          "id": 15644,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "hash",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 19529,
                          "src": "1845:16:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 15645,
                              "name": "trade2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15630,
                              "src": "1865:6:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$34547_memory_ptr",
                                "typeString": "struct TradeTypesLib.Trade memory"
                              }
                            },
                            "id": 15646,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "seal",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 34542,
                            "src": "1865:11:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Seal_$19532_memory",
                              "typeString": "struct NahmiiTypesLib.Seal memory"
                            }
                          },
                          "id": 15647,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "hash",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 19529,
                          "src": "1865:16:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "1845:36:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 15641,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        50297,
                        50298
                      ],
                      "referencedDeclaration": 50297,
                      "src": "1837:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 15649,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1837:45:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15650,
                  "nodeType": "ExpressionStatement",
                  "src": "1837:45:37"
                },
                {
                  "assignments": [
                    15652
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 15652,
                      "name": "doubleSpentBuyOrder",
                      "nodeType": "VariableDeclaration",
                      "scope": 15749,
                      "src": "1956:24:37",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 15651,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1956:4:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 15664,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 15663,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 15653,
                              "name": "trade1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15628,
                              "src": "1983:6:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$34547_memory_ptr",
                                "typeString": "struct TradeTypesLib.Trade memory"
                              }
                            },
                            "id": 15654,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "buyer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 34536,
                            "src": "1983:12:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeParty_$34526_memory",
                              "typeString": "struct TradeTypesLib.TradeParty memory"
                            }
                          },
                          "id": 15655,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "order",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 34521,
                          "src": "1983:18:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeOrder_$34511_memory",
                            "typeString": "struct TradeTypesLib.TradeOrder memory"
                          }
                        },
                        "id": 15656,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "hashes",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 34508,
                        "src": "1983:25:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_WalletOperatorHashes_$19520_memory",
                          "typeString": "struct NahmiiTypesLib.WalletOperatorHashes memory"
                        }
                      },
                      "id": 15657,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "operator",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19519,
                      "src": "1983:34:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 15658,
                              "name": "trade2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15630,
                              "src": "2021:6:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$34547_memory_ptr",
                                "typeString": "struct TradeTypesLib.Trade memory"
                              }
                            },
                            "id": 15659,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "buyer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 34536,
                            "src": "2021:12:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeParty_$34526_memory",
                              "typeString": "struct TradeTypesLib.TradeParty memory"
                            }
                          },
                          "id": 15660,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "order",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 34521,
                          "src": "2021:18:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeOrder_$34511_memory",
                            "typeString": "struct TradeTypesLib.TradeOrder memory"
                          }
                        },
                        "id": 15661,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "hashes",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 34508,
                        "src": "2021:25:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_WalletOperatorHashes_$19520_memory",
                          "typeString": "struct NahmiiTypesLib.WalletOperatorHashes memory"
                        }
                      },
                      "id": 15662,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "operator",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19519,
                      "src": "2021:34:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "1983:72:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1956:99:37"
                },
                {
                  "assignments": [
                    15666
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 15666,
                      "name": "doubleSpentSellOrder",
                      "nodeType": "VariableDeclaration",
                      "scope": 15749,
                      "src": "2065:25:37",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 15665,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2065:4:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 15678,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 15677,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 15667,
                              "name": "trade1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15628,
                              "src": "2093:6:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$34547_memory_ptr",
                                "typeString": "struct TradeTypesLib.Trade memory"
                              }
                            },
                            "id": 15668,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "seller",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 34538,
                            "src": "2093:13:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeParty_$34526_memory",
                              "typeString": "struct TradeTypesLib.TradeParty memory"
                            }
                          },
                          "id": 15669,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "order",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 34521,
                          "src": "2093:19:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeOrder_$34511_memory",
                            "typeString": "struct TradeTypesLib.TradeOrder memory"
                          }
                        },
                        "id": 15670,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "hashes",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 34508,
                        "src": "2093:26:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_WalletOperatorHashes_$19520_memory",
                          "typeString": "struct NahmiiTypesLib.WalletOperatorHashes memory"
                        }
                      },
                      "id": 15671,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "operator",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19519,
                      "src": "2093:35:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 15672,
                              "name": "trade2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15630,
                              "src": "2132:6:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$34547_memory_ptr",
                                "typeString": "struct TradeTypesLib.Trade memory"
                              }
                            },
                            "id": 15673,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "seller",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 34538,
                            "src": "2132:13:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeParty_$34526_memory",
                              "typeString": "struct TradeTypesLib.TradeParty memory"
                            }
                          },
                          "id": 15674,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "order",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 34521,
                          "src": "2132:19:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeOrder_$34511_memory",
                            "typeString": "struct TradeTypesLib.TradeOrder memory"
                          }
                        },
                        "id": 15675,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "hashes",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 34508,
                        "src": "2132:26:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_WalletOperatorHashes_$19520_memory",
                          "typeString": "struct NahmiiTypesLib.WalletOperatorHashes memory"
                        }
                      },
                      "id": 15676,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "operator",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19519,
                      "src": "2132:35:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "2093:74:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2065:102:37"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 15682,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 15680,
                          "name": "doubleSpentBuyOrder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15652,
                          "src": "2231:19:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 15681,
                          "name": "doubleSpentSellOrder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15666,
                          "src": "2254:20:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2231:43:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 15679,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        50297,
                        50298
                      ],
                      "referencedDeclaration": 50297,
                      "src": "2223:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 15683,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2223:52:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15684,
                  "nodeType": "ExpressionStatement",
                  "src": "2223:52:37"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 15685,
                        "name": "configuration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5741,
                        "src": "2326:13:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Configuration_$7172",
                          "typeString": "contract Configuration"
                        }
                      },
                      "id": 15687,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setOperationalModeExit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6102,
                      "src": "2326:36:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 15688,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2326:38:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15689,
                  "nodeType": "ExpressionStatement",
                  "src": "2326:38:37"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 15693,
                            "name": "trade1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15628,
                            "src": "2458:6:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$34547_memory_ptr",
                              "typeString": "struct TradeTypesLib.Trade memory"
                            }
                          },
                          "id": 15694,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "seal",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 34542,
                          "src": "2458:11:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Seal_$19532_memory",
                            "typeString": "struct NahmiiTypesLib.Seal memory"
                          }
                        },
                        "id": 15695,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "hash",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 19529,
                        "src": "2458:16:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 15690,
                        "name": "fraudChallenge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15249,
                        "src": "2420:14:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FraudChallenge_$15584",
                          "typeString": "contract FraudChallenge"
                        }
                      },
                      "id": 15692,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addFraudulentTradeHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15531,
                      "src": "2420:37:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 15696,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2420:55:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15697,
                  "nodeType": "ExpressionStatement",
                  "src": "2420:55:37"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 15701,
                            "name": "trade2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15630,
                            "src": "2523:6:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$34547_memory_ptr",
                              "typeString": "struct TradeTypesLib.Trade memory"
                            }
                          },
                          "id": 15702,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "seal",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 34542,
                          "src": "2523:11:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Seal_$19532_memory",
                            "typeString": "struct NahmiiTypesLib.Seal memory"
                          }
                        },
                        "id": 15703,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "hash",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 19529,
                        "src": "2523:16:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 15698,
                        "name": "fraudChallenge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15249,
                        "src": "2485:14:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FraudChallenge_$15584",
                          "typeString": "contract FraudChallenge"
                        }
                      },
                      "id": 15700,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addFraudulentTradeHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15531,
                      "src": "2485:37:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 15704,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2485:55:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15705,
                  "nodeType": "ExpressionStatement",
                  "src": "2485:55:37"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 15709,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50294,
                          "src": "2614:3:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 15710,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2614:10:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 15711,
                            "name": "configuration",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5741,
                            "src": "2626:13:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Configuration_$7172",
                              "typeString": "contract Configuration"
                            }
                          },
                          "id": 15712,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "fraudStakeFraction",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6944,
                          "src": "2626:32:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 15713,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2626:34:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 15714,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2662:1:37",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 15706,
                        "name": "securityBond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31500,
                        "src": "2584:12:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SecurityBond_$31490",
                          "typeString": "contract SecurityBond"
                        }
                      },
                      "id": 15708,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "rewardFractional",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30890,
                      "src": "2584:29:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256) external"
                      }
                    },
                    "id": 15715,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2584:80:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15716,
                  "nodeType": "ExpressionStatement",
                  "src": "2584:80:37"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 15717,
                    "name": "doubleSpentBuyOrder",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 15652,
                    "src": "2725:19:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 15726,
                  "nodeType": "IfStatement",
                  "src": "2721:95:37",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 15721,
                              "name": "trade2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15630,
                              "src": "2796:6:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$34547_memory_ptr",
                                "typeString": "struct TradeTypesLib.Trade memory"
                              }
                            },
                            "id": 15722,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "buyer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 34536,
                            "src": "2796:12:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeParty_$34526_memory",
                              "typeString": "struct TradeTypesLib.TradeParty memory"
                            }
                          },
                          "id": 15723,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "wallet",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 34515,
                          "src": "2796:19:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 15718,
                          "name": "fraudChallenge",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15249,
                          "src": "2758:14:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FraudChallenge_$15584",
                            "typeString": "contract FraudChallenge"
                          }
                        },
                        "id": 15720,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "addDoubleSpenderWallet",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 15427,
                        "src": "2758:37:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                          "typeString": "function (address) external"
                        }
                      },
                      "id": 15724,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2758:58:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 15725,
                    "nodeType": "ExpressionStatement",
                    "src": "2758:58:37"
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 15727,
                    "name": "doubleSpentSellOrder",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 15666,
                    "src": "2830:20:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 15736,
                  "nodeType": "IfStatement",
                  "src": "2826:97:37",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 15731,
                              "name": "trade2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15630,
                              "src": "2902:6:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$34547_memory_ptr",
                                "typeString": "struct TradeTypesLib.Trade memory"
                              }
                            },
                            "id": 15732,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "seller",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 34538,
                            "src": "2902:13:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeParty_$34526_memory",
                              "typeString": "struct TradeTypesLib.TradeParty memory"
                            }
                          },
                          "id": 15733,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "wallet",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 34515,
                          "src": "2902:20:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 15728,
                          "name": "fraudChallenge",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15249,
                          "src": "2864:14:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FraudChallenge_$15584",
                            "typeString": "contract FraudChallenge"
                          }
                        },
                        "id": 15730,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "addDoubleSpenderWallet",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 15427,
                        "src": "2864:37:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                          "typeString": "function (address) external"
                        }
                      },
                      "id": 15734,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2864:59:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 15735,
                    "nodeType": "ExpressionStatement",
                    "src": "2864:59:37"
                  }
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 15738,
                            "name": "trade1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15628,
                            "src": "3008:6:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$34547_memory_ptr",
                              "typeString": "struct TradeTypesLib.Trade memory"
                            }
                          },
                          "id": 15739,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "seal",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 34542,
                          "src": "3008:11:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Seal_$19532_memory",
                            "typeString": "struct NahmiiTypesLib.Seal memory"
                          }
                        },
                        "id": 15740,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "hash",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 19529,
                        "src": "3008:16:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 15741,
                            "name": "trade2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15630,
                            "src": "3026:6:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$34547_memory_ptr",
                              "typeString": "struct TradeTypesLib.Trade memory"
                            }
                          },
                          "id": 15742,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "seal",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 34542,
                          "src": "3026:11:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Seal_$19532_memory",
                            "typeString": "struct NahmiiTypesLib.Seal memory"
                          }
                        },
                        "id": 15743,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "hash",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 19529,
                        "src": "3026:16:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 15744,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50294,
                          "src": "3044:3:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 15745,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3044:10:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 15737,
                      "name": "ChallengeByDoubleSpentOrdersEvent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15617,
                      "src": "2961:33:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,bytes32,address)"
                      }
                    },
                    "id": 15746,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2961:103:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15747,
                  "nodeType": "EmitStatement",
                  "src": "2956:108:37"
                }
              ]
            },
            "documentation": "@notice Submit two trade candidates in continuous Fraud Challenge (FC) to be tested for\n trade order double spenditure\n @param trade1 First trade with double spent order\n @param trade2 Last trade with double spent order",
            "id": 15749,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 15633,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 15632,
                  "name": "onlyOperationalModeNormal",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5804,
                  "src": "1741:25:37",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1741:25:37"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 15635,
                    "name": "trade1",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 15628,
                    "src": "1787:6:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$34547_memory_ptr",
                      "typeString": "struct TradeTypesLib.Trade memory"
                    }
                  }
                ],
                "id": 15636,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 15634,
                  "name": "onlySealedTrade",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 36390,
                  "src": "1771:15:37",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_struct$_Trade_$34547_memory_ptr_$",
                    "typeString": "modifier (struct TradeTypesLib.Trade memory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1771:23:37"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 15638,
                    "name": "trade2",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 15630,
                    "src": "1815:6:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$34547_memory_ptr",
                      "typeString": "struct TradeTypesLib.Trade memory"
                    }
                  }
                ],
                "id": 15639,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 15637,
                  "name": "onlySealedTrade",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 36390,
                  "src": "1799:15:37",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_struct$_Trade_$34547_memory_ptr_$",
                    "typeString": "modifier (struct TradeTypesLib.Trade memory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1799:23:37"
              }
            ],
            "name": "challenge",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15631,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15628,
                  "name": "trade1",
                  "nodeType": "VariableDeclaration",
                  "scope": 15749,
                  "src": "1657:26:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Trade_$34547_memory_ptr",
                    "typeString": "struct TradeTypesLib.Trade"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 15627,
                    "name": "TradeTypesLib.Trade",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 34547,
                    "src": "1657:19:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$34547_storage_ptr",
                      "typeString": "struct TradeTypesLib.Trade"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15630,
                  "name": "trade2",
                  "nodeType": "VariableDeclaration",
                  "scope": 15749,
                  "src": "1693:26:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Trade_$34547_memory_ptr",
                    "typeString": "struct TradeTypesLib.Trade"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 15629,
                    "name": "TradeTypesLib.Trade",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 34547,
                    "src": "1693:19:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$34547_storage_ptr",
                      "typeString": "struct TradeTypesLib.Trade"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1647:78:37"
            },
            "payable": false,
            "returnParameters": {
              "id": 15640,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1827:0:37"
            },
            "scope": 15750,
            "src": "1629:1442:37",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 15751,
        "src": "635:2438:37"
      }
    ],
    "src": "122:2951:37"
  },
  "legacyAST": {
    "absolutePath": "/opt/buildagent/work/855e104608380c36/contracts/FraudChallengeByDoubleSpentOrders.sol",
    "exportedSymbols": {
      "FraudChallengeByDoubleSpentOrders": [
        15750
      ]
    },
    "id": 15751,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 15586,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".25"
        ],
        "nodeType": "PragmaDirective",
        "src": "122:24:37"
      },
      {
        "id": 15587,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "147:33:37"
      },
      {
        "absolutePath": "/opt/buildagent/work/855e104608380c36/contracts/Ownable.sol",
        "file": "./Ownable.sol",
        "id": 15589,
        "nodeType": "ImportDirective",
        "scope": 15751,
        "sourceUnit": 25427,
        "src": "182:38:37",
        "symbolAliases": [
          {
            "foreign": 15588,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/opt/buildagent/work/855e104608380c36/contracts/FraudChallengable.sol",
        "file": "./FraudChallengable.sol",
        "id": 15591,
        "nodeType": "ImportDirective",
        "scope": 15751,
        "sourceUnit": 15297,
        "src": "221:58:37",
        "symbolAliases": [
          {
            "foreign": 15590,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/opt/buildagent/work/855e104608380c36/contracts/ConfigurableOperational.sol",
        "file": "./ConfigurableOperational.sol",
        "id": 15593,
        "nodeType": "ImportDirective",
        "scope": 15751,
        "sourceUnit": 5806,
        "src": "280:70:37",
        "symbolAliases": [
          {
            "foreign": 15592,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/opt/buildagent/work/855e104608380c36/contracts/ValidatableV2.sol",
        "file": "./ValidatableV2.sol",
        "id": 15595,
        "nodeType": "ImportDirective",
        "scope": 15751,
        "sourceUnit": 36466,
        "src": "351:50:37",
        "symbolAliases": [
          {
            "foreign": 15594,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/opt/buildagent/work/855e104608380c36/contracts/SecurityBondable.sol",
        "file": "./SecurityBondable.sol",
        "id": 15597,
        "nodeType": "ImportDirective",
        "scope": 15751,
        "sourceUnit": 31548,
        "src": "402:56:37",
        "symbolAliases": [
          {
            "foreign": 15596,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/opt/buildagent/work/855e104608380c36/contracts/TradeTypesLib.sol",
        "file": "./TradeTypesLib.sol",
        "id": 15599,
        "nodeType": "ImportDirective",
        "scope": 15751,
        "sourceUnit": 34565,
        "src": "459:50:37",
        "symbolAliases": [
          {
            "foreign": 15598,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 15600,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 25426,
              "src": "681:7:37",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$25426",
                "typeString": "contract Ownable"
              }
            },
            "id": 15601,
            "nodeType": "InheritanceSpecifier",
            "src": "681:7:37"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 15602,
              "name": "FraudChallengable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 15296,
              "src": "690:17:37",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FraudChallengable_$15296",
                "typeString": "contract FraudChallengable"
              }
            },
            "id": 15603,
            "nodeType": "InheritanceSpecifier",
            "src": "690:17:37"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 15604,
              "name": "ConfigurableOperational",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5805,
              "src": "709:23:37",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ConfigurableOperational_$5805",
                "typeString": "contract ConfigurableOperational"
              }
            },
            "id": 15605,
            "nodeType": "InheritanceSpecifier",
            "src": "709:23:37"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 15606,
              "name": "ValidatableV2",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 36465,
              "src": "734:13:37",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ValidatableV2_$36465",
                "typeString": "contract ValidatableV2"
              }
            },
            "id": 15607,
            "nodeType": "InheritanceSpecifier",
            "src": "734:13:37"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 15608,
              "name": "SecurityBondable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 31547,
              "src": "749:16:37",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SecurityBondable_$31547",
                "typeString": "contract SecurityBondable"
              }
            },
            "id": 15609,
            "nodeType": "InheritanceSpecifier",
            "src": "749:16:37"
          }
        ],
        "contractDependencies": [
          5788,
          5805,
          15296,
          19393,
          25426,
          31547,
          31613,
          36465
        ],
        "contractKind": "contract",
        "documentation": "@title FraudChallengeByDoubleSpentOrders\n@notice Where driips are challenged wrt fraud by double spent orders",
        "fullyImplemented": true,
        "id": 15750,
        "linearizedBaseContracts": [
          15750,
          31547,
          36465,
          5805,
          5788,
          15296,
          25426,
          31613,
          19393
        ],
        "name": "FraudChallengeByDoubleSpentOrders",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": null,
            "id": 15617,
            "name": "ChallengeByDoubleSpentOrdersEvent",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 15616,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15611,
                  "indexed": false,
                  "name": "tradeHash1",
                  "nodeType": "VariableDeclaration",
                  "scope": 15617,
                  "src": "954:18:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 15610,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "954:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15613,
                  "indexed": false,
                  "name": "tradeHash2",
                  "nodeType": "VariableDeclaration",
                  "scope": 15617,
                  "src": "974:18:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 15612,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "974:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15615,
                  "indexed": false,
                  "name": "challenger",
                  "nodeType": "VariableDeclaration",
                  "scope": 15617,
                  "src": "994:18:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15614,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "994:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "953:60:37"
            },
            "src": "914:100:37"
          },
          {
            "body": {
              "id": 15625,
              "nodeType": "Block",
              "src": "1222:7:37",
              "statements": []
            },
            "documentation": null,
            "id": 15626,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 15622,
                    "name": "deployer",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 15619,
                    "src": "1205:8:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 15623,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 15621,
                  "name": "Ownable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 25426,
                  "src": "1197:7:37",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Ownable_$25426_$",
                    "typeString": "type(contract Ownable)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1197:17:37"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15620,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15619,
                  "name": "deployer",
                  "nodeType": "VariableDeclaration",
                  "scope": 15626,
                  "src": "1179:16:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15618,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1179:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1178:18:37"
            },
            "payable": false,
            "returnParameters": {
              "id": 15624,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1222:0:37"
            },
            "scope": 15750,
            "src": "1167:62:37",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 15748,
              "nodeType": "Block",
              "src": "1827:1244:37",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 15648,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 15642,
                              "name": "trade1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15628,
                              "src": "1845:6:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$34547_memory_ptr",
                                "typeString": "struct TradeTypesLib.Trade memory"
                              }
                            },
                            "id": 15643,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "seal",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 34542,
                            "src": "1845:11:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Seal_$19532_memory",
                              "typeString": "struct NahmiiTypesLib.Seal memory"
                            }
                          },
                          "id": 15644,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "hash",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 19529,
                          "src": "1845:16:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 15645,
                              "name": "trade2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15630,
                              "src": "1865:6:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$34547_memory_ptr",
                                "typeString": "struct TradeTypesLib.Trade memory"
                              }
                            },
                            "id": 15646,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "seal",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 34542,
                            "src": "1865:11:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Seal_$19532_memory",
                              "typeString": "struct NahmiiTypesLib.Seal memory"
                            }
                          },
                          "id": 15647,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "hash",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 19529,
                          "src": "1865:16:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "1845:36:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 15641,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        50297,
                        50298
                      ],
                      "referencedDeclaration": 50297,
                      "src": "1837:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 15649,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1837:45:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15650,
                  "nodeType": "ExpressionStatement",
                  "src": "1837:45:37"
                },
                {
                  "assignments": [
                    15652
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 15652,
                      "name": "doubleSpentBuyOrder",
                      "nodeType": "VariableDeclaration",
                      "scope": 15749,
                      "src": "1956:24:37",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 15651,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1956:4:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 15664,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 15663,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 15653,
                              "name": "trade1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15628,
                              "src": "1983:6:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$34547_memory_ptr",
                                "typeString": "struct TradeTypesLib.Trade memory"
                              }
                            },
                            "id": 15654,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "buyer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 34536,
                            "src": "1983:12:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeParty_$34526_memory",
                              "typeString": "struct TradeTypesLib.TradeParty memory"
                            }
                          },
                          "id": 15655,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "order",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 34521,
                          "src": "1983:18:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeOrder_$34511_memory",
                            "typeString": "struct TradeTypesLib.TradeOrder memory"
                          }
                        },
                        "id": 15656,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "hashes",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 34508,
                        "src": "1983:25:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_WalletOperatorHashes_$19520_memory",
                          "typeString": "struct NahmiiTypesLib.WalletOperatorHashes memory"
                        }
                      },
                      "id": 15657,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "operator",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19519,
                      "src": "1983:34:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 15658,
                              "name": "trade2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15630,
                              "src": "2021:6:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$34547_memory_ptr",
                                "typeString": "struct TradeTypesLib.Trade memory"
                              }
                            },
                            "id": 15659,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "buyer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 34536,
                            "src": "2021:12:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeParty_$34526_memory",
                              "typeString": "struct TradeTypesLib.TradeParty memory"
                            }
                          },
                          "id": 15660,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "order",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 34521,
                          "src": "2021:18:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeOrder_$34511_memory",
                            "typeString": "struct TradeTypesLib.TradeOrder memory"
                          }
                        },
                        "id": 15661,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "hashes",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 34508,
                        "src": "2021:25:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_WalletOperatorHashes_$19520_memory",
                          "typeString": "struct NahmiiTypesLib.WalletOperatorHashes memory"
                        }
                      },
                      "id": 15662,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "operator",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19519,
                      "src": "2021:34:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "1983:72:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1956:99:37"
                },
                {
                  "assignments": [
                    15666
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 15666,
                      "name": "doubleSpentSellOrder",
                      "nodeType": "VariableDeclaration",
                      "scope": 15749,
                      "src": "2065:25:37",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 15665,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2065:4:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 15678,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 15677,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 15667,
                              "name": "trade1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15628,
                              "src": "2093:6:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$34547_memory_ptr",
                                "typeString": "struct TradeTypesLib.Trade memory"
                              }
                            },
                            "id": 15668,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "seller",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 34538,
                            "src": "2093:13:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeParty_$34526_memory",
                              "typeString": "struct TradeTypesLib.TradeParty memory"
                            }
                          },
                          "id": 15669,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "order",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 34521,
                          "src": "2093:19:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeOrder_$34511_memory",
                            "typeString": "struct TradeTypesLib.TradeOrder memory"
                          }
                        },
                        "id": 15670,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "hashes",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 34508,
                        "src": "2093:26:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_WalletOperatorHashes_$19520_memory",
                          "typeString": "struct NahmiiTypesLib.WalletOperatorHashes memory"
                        }
                      },
                      "id": 15671,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "operator",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19519,
                      "src": "2093:35:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 15672,
                              "name": "trade2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15630,
                              "src": "2132:6:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$34547_memory_ptr",
                                "typeString": "struct TradeTypesLib.Trade memory"
                              }
                            },
                            "id": 15673,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "seller",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 34538,
                            "src": "2132:13:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeParty_$34526_memory",
                              "typeString": "struct TradeTypesLib.TradeParty memory"
                            }
                          },
                          "id": 15674,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "order",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 34521,
                          "src": "2132:19:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeOrder_$34511_memory",
                            "typeString": "struct TradeTypesLib.TradeOrder memory"
                          }
                        },
                        "id": 15675,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "hashes",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 34508,
                        "src": "2132:26:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_WalletOperatorHashes_$19520_memory",
                          "typeString": "struct NahmiiTypesLib.WalletOperatorHashes memory"
                        }
                      },
                      "id": 15676,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "operator",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19519,
                      "src": "2132:35:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "2093:74:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2065:102:37"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 15682,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 15680,
                          "name": "doubleSpentBuyOrder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15652,
                          "src": "2231:19:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 15681,
                          "name": "doubleSpentSellOrder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15666,
                          "src": "2254:20:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2231:43:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 15679,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        50297,
                        50298
                      ],
                      "referencedDeclaration": 50297,
                      "src": "2223:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 15683,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2223:52:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15684,
                  "nodeType": "ExpressionStatement",
                  "src": "2223:52:37"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 15685,
                        "name": "configuration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5741,
                        "src": "2326:13:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Configuration_$7172",
                          "typeString": "contract Configuration"
                        }
                      },
                      "id": 15687,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setOperationalModeExit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6102,
                      "src": "2326:36:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 15688,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2326:38:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15689,
                  "nodeType": "ExpressionStatement",
                  "src": "2326:38:37"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 15693,
                            "name": "trade1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15628,
                            "src": "2458:6:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$34547_memory_ptr",
                              "typeString": "struct TradeTypesLib.Trade memory"
                            }
                          },
                          "id": 15694,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "seal",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 34542,
                          "src": "2458:11:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Seal_$19532_memory",
                            "typeString": "struct NahmiiTypesLib.Seal memory"
                          }
                        },
                        "id": 15695,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "hash",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 19529,
                        "src": "2458:16:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 15690,
                        "name": "fraudChallenge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15249,
                        "src": "2420:14:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FraudChallenge_$15584",
                          "typeString": "contract FraudChallenge"
                        }
                      },
                      "id": 15692,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addFraudulentTradeHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15531,
                      "src": "2420:37:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 15696,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2420:55:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15697,
                  "nodeType": "ExpressionStatement",
                  "src": "2420:55:37"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 15701,
                            "name": "trade2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15630,
                            "src": "2523:6:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$34547_memory_ptr",
                              "typeString": "struct TradeTypesLib.Trade memory"
                            }
                          },
                          "id": 15702,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "seal",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 34542,
                          "src": "2523:11:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Seal_$19532_memory",
                            "typeString": "struct NahmiiTypesLib.Seal memory"
                          }
                        },
                        "id": 15703,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "hash",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 19529,
                        "src": "2523:16:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 15698,
                        "name": "fraudChallenge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15249,
                        "src": "2485:14:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FraudChallenge_$15584",
                          "typeString": "contract FraudChallenge"
                        }
                      },
                      "id": 15700,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addFraudulentTradeHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15531,
                      "src": "2485:37:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 15704,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2485:55:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15705,
                  "nodeType": "ExpressionStatement",
                  "src": "2485:55:37"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 15709,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50294,
                          "src": "2614:3:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 15710,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2614:10:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 15711,
                            "name": "configuration",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5741,
                            "src": "2626:13:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Configuration_$7172",
                              "typeString": "contract Configuration"
                            }
                          },
                          "id": 15712,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "fraudStakeFraction",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6944,
                          "src": "2626:32:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 15713,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2626:34:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 15714,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2662:1:37",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 15706,
                        "name": "securityBond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31500,
                        "src": "2584:12:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SecurityBond_$31490",
                          "typeString": "contract SecurityBond"
                        }
                      },
                      "id": 15708,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "rewardFractional",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30890,
                      "src": "2584:29:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256) external"
                      }
                    },
                    "id": 15715,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2584:80:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15716,
                  "nodeType": "ExpressionStatement",
                  "src": "2584:80:37"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 15717,
                    "name": "doubleSpentBuyOrder",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 15652,
                    "src": "2725:19:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 15726,
                  "nodeType": "IfStatement",
                  "src": "2721:95:37",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 15721,
                              "name": "trade2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15630,
                              "src": "2796:6:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$34547_memory_ptr",
                                "typeString": "struct TradeTypesLib.Trade memory"
                              }
                            },
                            "id": 15722,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "buyer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 34536,
                            "src": "2796:12:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeParty_$34526_memory",
                              "typeString": "struct TradeTypesLib.TradeParty memory"
                            }
                          },
                          "id": 15723,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "wallet",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 34515,
                          "src": "2796:19:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 15718,
                          "name": "fraudChallenge",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15249,
                          "src": "2758:14:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FraudChallenge_$15584",
                            "typeString": "contract FraudChallenge"
                          }
                        },
                        "id": 15720,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "addDoubleSpenderWallet",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 15427,
                        "src": "2758:37:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                          "typeString": "function (address) external"
                        }
                      },
                      "id": 15724,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2758:58:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 15725,
                    "nodeType": "ExpressionStatement",
                    "src": "2758:58:37"
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 15727,
                    "name": "doubleSpentSellOrder",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 15666,
                    "src": "2830:20:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 15736,
                  "nodeType": "IfStatement",
                  "src": "2826:97:37",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 15731,
                              "name": "trade2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15630,
                              "src": "2902:6:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$34547_memory_ptr",
                                "typeString": "struct TradeTypesLib.Trade memory"
                              }
                            },
                            "id": 15732,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "seller",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 34538,
                            "src": "2902:13:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeParty_$34526_memory",
                              "typeString": "struct TradeTypesLib.TradeParty memory"
                            }
                          },
                          "id": 15733,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "wallet",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 34515,
                          "src": "2902:20:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 15728,
                          "name": "fraudChallenge",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15249,
                          "src": "2864:14:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FraudChallenge_$15584",
                            "typeString": "contract FraudChallenge"
                          }
                        },
                        "id": 15730,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "addDoubleSpenderWallet",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 15427,
                        "src": "2864:37:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                          "typeString": "function (address) external"
                        }
                      },
                      "id": 15734,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2864:59:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 15735,
                    "nodeType": "ExpressionStatement",
                    "src": "2864:59:37"
                  }
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 15738,
                            "name": "trade1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15628,
                            "src": "3008:6:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$34547_memory_ptr",
                              "typeString": "struct TradeTypesLib.Trade memory"
                            }
                          },
                          "id": 15739,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "seal",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 34542,
                          "src": "3008:11:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Seal_$19532_memory",
                            "typeString": "struct NahmiiTypesLib.Seal memory"
                          }
                        },
                        "id": 15740,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "hash",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 19529,
                        "src": "3008:16:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 15741,
                            "name": "trade2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15630,
                            "src": "3026:6:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$34547_memory_ptr",
                              "typeString": "struct TradeTypesLib.Trade memory"
                            }
                          },
                          "id": 15742,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "seal",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 34542,
                          "src": "3026:11:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Seal_$19532_memory",
                            "typeString": "struct NahmiiTypesLib.Seal memory"
                          }
                        },
                        "id": 15743,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "hash",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 19529,
                        "src": "3026:16:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 15744,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50294,
                          "src": "3044:3:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 15745,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3044:10:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 15737,
                      "name": "ChallengeByDoubleSpentOrdersEvent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15617,
                      "src": "2961:33:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,bytes32,address)"
                      }
                    },
                    "id": 15746,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2961:103:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15747,
                  "nodeType": "EmitStatement",
                  "src": "2956:108:37"
                }
              ]
            },
            "documentation": "@notice Submit two trade candidates in continuous Fraud Challenge (FC) to be tested for\n trade order double spenditure\n @param trade1 First trade with double spent order\n @param trade2 Last trade with double spent order",
            "id": 15749,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 15633,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 15632,
                  "name": "onlyOperationalModeNormal",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5804,
                  "src": "1741:25:37",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1741:25:37"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 15635,
                    "name": "trade1",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 15628,
                    "src": "1787:6:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$34547_memory_ptr",
                      "typeString": "struct TradeTypesLib.Trade memory"
                    }
                  }
                ],
                "id": 15636,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 15634,
                  "name": "onlySealedTrade",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 36390,
                  "src": "1771:15:37",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_struct$_Trade_$34547_memory_ptr_$",
                    "typeString": "modifier (struct TradeTypesLib.Trade memory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1771:23:37"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 15638,
                    "name": "trade2",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 15630,
                    "src": "1815:6:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$34547_memory_ptr",
                      "typeString": "struct TradeTypesLib.Trade memory"
                    }
                  }
                ],
                "id": 15639,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 15637,
                  "name": "onlySealedTrade",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 36390,
                  "src": "1799:15:37",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_struct$_Trade_$34547_memory_ptr_$",
                    "typeString": "modifier (struct TradeTypesLib.Trade memory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1799:23:37"
              }
            ],
            "name": "challenge",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15631,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15628,
                  "name": "trade1",
                  "nodeType": "VariableDeclaration",
                  "scope": 15749,
                  "src": "1657:26:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Trade_$34547_memory_ptr",
                    "typeString": "struct TradeTypesLib.Trade"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 15627,
                    "name": "TradeTypesLib.Trade",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 34547,
                    "src": "1657:19:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$34547_storage_ptr",
                      "typeString": "struct TradeTypesLib.Trade"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15630,
                  "name": "trade2",
                  "nodeType": "VariableDeclaration",
                  "scope": 15749,
                  "src": "1693:26:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Trade_$34547_memory_ptr",
                    "typeString": "struct TradeTypesLib.Trade"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 15629,
                    "name": "TradeTypesLib.Trade",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 34547,
                    "src": "1693:19:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$34547_storage_ptr",
                      "typeString": "struct TradeTypesLib.Trade"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1647:78:37"
            },
            "payable": false,
            "returnParameters": {
              "id": 15640,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1827:0:37"
            },
            "scope": 15750,
            "src": "1629:1442:37",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 15751,
        "src": "635:2438:37"
      }
    ],
    "src": "122:2951:37"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.25+commit.59dbf8f1.Emscripten.clang"
  },
  "networks": {
    "3": {
      "events": {
        "0x062cdd5a38a8c97ea6d34cf2f7ead767cd74a89372d592342cc5a78de2d425db": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "tradeHash1",
              "type": "bytes32"
            },
            {
              "indexed": false,
              "name": "tradeHash2",
              "type": "bytes32"
            },
            {
              "indexed": false,
              "name": "challenger",
              "type": "address"
            }
          ],
          "name": "ChallengeByDoubleSpentOrdersEvent",
          "type": "event"
        },
        "0xc9f3f00c1760fe26985aeacb814a21c56ea289d680562e89b249681b08c30382": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "oldSecurityBond",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "newSecurityBond",
              "type": "address"
            }
          ],
          "name": "SetSecurityBondEvent",
          "type": "event"
        },
        "0x1882af944a16549c3d4f60e3cd26f158b0c7aac3222cf32971fc21375ce05f60": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "oldValidator",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "newValidator",
              "type": "address"
            }
          ],
          "name": "SetValidatorEvent",
          "type": "event"
        },
        "0x634f61bf00e14adedce330c80c2823e16e184f189ebe853e1ddecc4a268477ff": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "oldConfiguration",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "newConfiguration",
              "type": "address"
            }
          ],
          "name": "SetConfigurationEvent",
          "type": "event"
        },
        "0x07998fa7be97abe2427246ae4688298c89d6196bbffdf0997b9495a8d27bc673": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "oldFraudChallenge",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "newFraudChallenge",
              "type": "address"
            }
          ],
          "name": "SetFraudChallengeEvent",
          "type": "event"
        },
        "0x977e5fa58e458501775e0008d275006294c5249e3c08d1d0e3a9f3acad14f6e4": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "oldDeployer",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "newDeployer",
              "type": "address"
            }
          ],
          "name": "SetDeployerEvent",
          "type": "event"
        },
        "0x9f611b789425d0d5b90b920f1b2852907dd865c80074a30b1629aaa041d1812c": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "oldOperator",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "newOperator",
              "type": "address"
            }
          ],
          "name": "SetOperatorEvent",
          "type": "event"
        },
        "0xd5a2a04a775c741c2ca0dc46ea7ce4835190e1aaf1ca018def0e82568ec33616": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "wallet",
              "type": "address"
            }
          ],
          "name": "SelfDestructionDisabledEvent",
          "type": "event"
        },
        "0x787a5d936e74f4b564b9153575886059829c78cd9927b1be5e0d976b317ef736": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "wallet",
              "type": "address"
            }
          ],
          "name": "TriggerSelfDestructionEvent",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xdc3b7072e88052cc413b42b6e5514512b45294b2",
      "transactionHash": "0x031f2664d19d348195a258809e2d8b74f5349a1011f1c872cca8c7df0ff68e02"
    }
  },
  "schemaVersion": "2.0.2",
  "updatedAt": "2019-04-02T08:24:31.984Z"
}