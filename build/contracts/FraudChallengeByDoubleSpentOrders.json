{
  "contractName": "FraudChallengeByDoubleSpentOrders",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "deployer",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "tradeHash1",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "tradeHash2",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "challenger",
          "type": "address"
        }
      ],
      "name": "ChallengeByDoubleSpentOrdersEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "wallet",
          "type": "address"
        }
      ],
      "name": "SelfDestructionDisabledEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract Configuration",
          "name": "oldConfiguration",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract Configuration",
          "name": "newConfiguration",
          "type": "address"
        }
      ],
      "name": "SetConfigurationEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldDeployer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newDeployer",
          "type": "address"
        }
      ],
      "name": "SetDeployerEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract FraudChallenge",
          "name": "oldFraudChallenge",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract FraudChallenge",
          "name": "newFraudChallenge",
          "type": "address"
        }
      ],
      "name": "SetFraudChallengeEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldOperator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newOperator",
          "type": "address"
        }
      ],
      "name": "SetOperatorEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract SecurityBond",
          "name": "oldSecurityBond",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract SecurityBond",
          "name": "newSecurityBond",
          "type": "address"
        }
      ],
      "name": "SetSecurityBondEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract ValidatorV2",
          "name": "oldValidator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract ValidatorV2",
          "name": "newValidator",
          "type": "address"
        }
      ],
      "name": "SetValidatorEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "wallet",
          "type": "address"
        }
      ],
      "name": "TriggerSelfDestructionEvent",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "configuration",
      "outputs": [
        {
          "internalType": "contract Configuration",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "deployer",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "destructor",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "disableSelfDestruction",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "fraudChallenge",
      "outputs": [
        {
          "internalType": "contract FraudChallenge",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "operator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "securityBond",
      "outputs": [
        {
          "internalType": "contract SecurityBond",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "selfDestructionDisabled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "contract Configuration",
          "name": "newConfiguration",
          "type": "address"
        }
      ],
      "name": "setConfiguration",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newDeployer",
          "type": "address"
        }
      ],
      "name": "setDeployer",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "contract FraudChallenge",
          "name": "newFraudChallenge",
          "type": "address"
        }
      ],
      "name": "setFraudChallenge",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOperator",
          "type": "address"
        }
      ],
      "name": "setOperator",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "contract SecurityBond",
          "name": "newSecurityBond",
          "type": "address"
        }
      ],
      "name": "setSecurityBond",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "contract ValidatorV2",
          "name": "newValidator",
          "type": "address"
        }
      ],
      "name": "setValidator",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "triggerSelfDestruction",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "validator",
      "outputs": [
        {
          "internalType": "contract ValidatorV2",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "int256",
              "name": "amount",
              "type": "int256"
            },
            {
              "components": [
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "ct",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct MonetaryTypesLib.Currency",
                  "name": "intended",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "ct",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct MonetaryTypesLib.Currency",
                  "name": "conjugate",
                  "type": "tuple"
                }
              ],
              "internalType": "struct NahmiiTypesLib.IntendedConjugateCurrency",
              "name": "currencies",
              "type": "tuple"
            },
            {
              "internalType": "int256",
              "name": "rate",
              "type": "int256"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "wallet",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "rollingVolume",
                  "type": "uint256"
                },
                {
                  "internalType": "enum TradeTypesLib.LiquidityRole",
                  "name": "liquidityRole",
                  "type": "uint8"
                },
                {
                  "components": [
                    {
                      "internalType": "int256",
                      "name": "amount",
                      "type": "int256"
                    },
                    {
                      "components": [
                        {
                          "internalType": "bytes32",
                          "name": "wallet",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "operator",
                          "type": "bytes32"
                        }
                      ],
                      "internalType": "struct NahmiiTypesLib.WalletOperatorHashes",
                      "name": "hashes",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "int256",
                          "name": "current",
                          "type": "int256"
                        },
                        {
                          "internalType": "int256",
                          "name": "previous",
                          "type": "int256"
                        }
                      ],
                      "internalType": "struct NahmiiTypesLib.CurrentPreviousInt256",
                      "name": "residuals",
                      "type": "tuple"
                    }
                  ],
                  "internalType": "struct TradeTypesLib.TradeOrder",
                  "name": "order",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "components": [
                        {
                          "internalType": "int256",
                          "name": "current",
                          "type": "int256"
                        },
                        {
                          "internalType": "int256",
                          "name": "previous",
                          "type": "int256"
                        }
                      ],
                      "internalType": "struct NahmiiTypesLib.CurrentPreviousInt256",
                      "name": "intended",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "int256",
                          "name": "current",
                          "type": "int256"
                        },
                        {
                          "internalType": "int256",
                          "name": "previous",
                          "type": "int256"
                        }
                      ],
                      "internalType": "struct NahmiiTypesLib.CurrentPreviousInt256",
                      "name": "conjugate",
                      "type": "tuple"
                    }
                  ],
                  "internalType": "struct NahmiiTypesLib.IntendedConjugateCurrentPreviousInt256",
                  "name": "balances",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "components": [
                        {
                          "internalType": "int256",
                          "name": "amount",
                          "type": "int256"
                        },
                        {
                          "components": [
                            {
                              "internalType": "address",
                              "name": "ct",
                              "type": "address"
                            },
                            {
                              "internalType": "uint256",
                              "name": "id",
                              "type": "uint256"
                            }
                          ],
                          "internalType": "struct MonetaryTypesLib.Currency",
                          "name": "currency",
                          "type": "tuple"
                        }
                      ],
                      "internalType": "struct MonetaryTypesLib.Figure",
                      "name": "single",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "originId",
                          "type": "uint256"
                        },
                        {
                          "components": [
                            {
                              "internalType": "int256",
                              "name": "amount",
                              "type": "int256"
                            },
                            {
                              "components": [
                                {
                                  "internalType": "address",
                                  "name": "ct",
                                  "type": "address"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "id",
                                  "type": "uint256"
                                }
                              ],
                              "internalType": "struct MonetaryTypesLib.Currency",
                              "name": "currency",
                              "type": "tuple"
                            }
                          ],
                          "internalType": "struct MonetaryTypesLib.Figure",
                          "name": "figure",
                          "type": "tuple"
                        }
                      ],
                      "internalType": "struct NahmiiTypesLib.OriginFigure[]",
                      "name": "total",
                      "type": "tuple[]"
                    }
                  ],
                  "internalType": "struct NahmiiTypesLib.SingleFigureTotalOriginFigures",
                  "name": "fees",
                  "type": "tuple"
                }
              ],
              "internalType": "struct TradeTypesLib.TradeParty",
              "name": "buyer",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "wallet",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "rollingVolume",
                  "type": "uint256"
                },
                {
                  "internalType": "enum TradeTypesLib.LiquidityRole",
                  "name": "liquidityRole",
                  "type": "uint8"
                },
                {
                  "components": [
                    {
                      "internalType": "int256",
                      "name": "amount",
                      "type": "int256"
                    },
                    {
                      "components": [
                        {
                          "internalType": "bytes32",
                          "name": "wallet",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "operator",
                          "type": "bytes32"
                        }
                      ],
                      "internalType": "struct NahmiiTypesLib.WalletOperatorHashes",
                      "name": "hashes",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "int256",
                          "name": "current",
                          "type": "int256"
                        },
                        {
                          "internalType": "int256",
                          "name": "previous",
                          "type": "int256"
                        }
                      ],
                      "internalType": "struct NahmiiTypesLib.CurrentPreviousInt256",
                      "name": "residuals",
                      "type": "tuple"
                    }
                  ],
                  "internalType": "struct TradeTypesLib.TradeOrder",
                  "name": "order",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "components": [
                        {
                          "internalType": "int256",
                          "name": "current",
                          "type": "int256"
                        },
                        {
                          "internalType": "int256",
                          "name": "previous",
                          "type": "int256"
                        }
                      ],
                      "internalType": "struct NahmiiTypesLib.CurrentPreviousInt256",
                      "name": "intended",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "int256",
                          "name": "current",
                          "type": "int256"
                        },
                        {
                          "internalType": "int256",
                          "name": "previous",
                          "type": "int256"
                        }
                      ],
                      "internalType": "struct NahmiiTypesLib.CurrentPreviousInt256",
                      "name": "conjugate",
                      "type": "tuple"
                    }
                  ],
                  "internalType": "struct NahmiiTypesLib.IntendedConjugateCurrentPreviousInt256",
                  "name": "balances",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "components": [
                        {
                          "internalType": "int256",
                          "name": "amount",
                          "type": "int256"
                        },
                        {
                          "components": [
                            {
                              "internalType": "address",
                              "name": "ct",
                              "type": "address"
                            },
                            {
                              "internalType": "uint256",
                              "name": "id",
                              "type": "uint256"
                            }
                          ],
                          "internalType": "struct MonetaryTypesLib.Currency",
                          "name": "currency",
                          "type": "tuple"
                        }
                      ],
                      "internalType": "struct MonetaryTypesLib.Figure",
                      "name": "single",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "originId",
                          "type": "uint256"
                        },
                        {
                          "components": [
                            {
                              "internalType": "int256",
                              "name": "amount",
                              "type": "int256"
                            },
                            {
                              "components": [
                                {
                                  "internalType": "address",
                                  "name": "ct",
                                  "type": "address"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "id",
                                  "type": "uint256"
                                }
                              ],
                              "internalType": "struct MonetaryTypesLib.Currency",
                              "name": "currency",
                              "type": "tuple"
                            }
                          ],
                          "internalType": "struct MonetaryTypesLib.Figure",
                          "name": "figure",
                          "type": "tuple"
                        }
                      ],
                      "internalType": "struct NahmiiTypesLib.OriginFigure[]",
                      "name": "total",
                      "type": "tuple[]"
                    }
                  ],
                  "internalType": "struct NahmiiTypesLib.SingleFigureTotalOriginFigures",
                  "name": "fees",
                  "type": "tuple"
                }
              ],
              "internalType": "struct TradeTypesLib.TradeParty",
              "name": "seller",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "components": [
                    {
                      "internalType": "int256",
                      "name": "single",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "total",
                      "type": "int256"
                    }
                  ],
                  "internalType": "struct NahmiiTypesLib.SingleTotalInt256",
                  "name": "intended",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "int256",
                      "name": "single",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "total",
                      "type": "int256"
                    }
                  ],
                  "internalType": "struct NahmiiTypesLib.SingleTotalInt256",
                  "name": "conjugate",
                  "type": "tuple"
                }
              ],
              "internalType": "struct NahmiiTypesLib.IntendedConjugateSingleTotalInt256",
              "name": "transfers",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "hash",
                  "type": "bytes32"
                },
                {
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "r",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "s",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint8",
                      "name": "v",
                      "type": "uint8"
                    }
                  ],
                  "internalType": "struct NahmiiTypesLib.Signature",
                  "name": "signature",
                  "type": "tuple"
                }
              ],
              "internalType": "struct NahmiiTypesLib.Seal",
              "name": "seal",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "blockNumber",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "operatorId",
              "type": "uint256"
            }
          ],
          "internalType": "struct TradeTypesLib.Trade",
          "name": "trade1",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "int256",
              "name": "amount",
              "type": "int256"
            },
            {
              "components": [
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "ct",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct MonetaryTypesLib.Currency",
                  "name": "intended",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "ct",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct MonetaryTypesLib.Currency",
                  "name": "conjugate",
                  "type": "tuple"
                }
              ],
              "internalType": "struct NahmiiTypesLib.IntendedConjugateCurrency",
              "name": "currencies",
              "type": "tuple"
            },
            {
              "internalType": "int256",
              "name": "rate",
              "type": "int256"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "wallet",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "rollingVolume",
                  "type": "uint256"
                },
                {
                  "internalType": "enum TradeTypesLib.LiquidityRole",
                  "name": "liquidityRole",
                  "type": "uint8"
                },
                {
                  "components": [
                    {
                      "internalType": "int256",
                      "name": "amount",
                      "type": "int256"
                    },
                    {
                      "components": [
                        {
                          "internalType": "bytes32",
                          "name": "wallet",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "operator",
                          "type": "bytes32"
                        }
                      ],
                      "internalType": "struct NahmiiTypesLib.WalletOperatorHashes",
                      "name": "hashes",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "int256",
                          "name": "current",
                          "type": "int256"
                        },
                        {
                          "internalType": "int256",
                          "name": "previous",
                          "type": "int256"
                        }
                      ],
                      "internalType": "struct NahmiiTypesLib.CurrentPreviousInt256",
                      "name": "residuals",
                      "type": "tuple"
                    }
                  ],
                  "internalType": "struct TradeTypesLib.TradeOrder",
                  "name": "order",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "components": [
                        {
                          "internalType": "int256",
                          "name": "current",
                          "type": "int256"
                        },
                        {
                          "internalType": "int256",
                          "name": "previous",
                          "type": "int256"
                        }
                      ],
                      "internalType": "struct NahmiiTypesLib.CurrentPreviousInt256",
                      "name": "intended",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "int256",
                          "name": "current",
                          "type": "int256"
                        },
                        {
                          "internalType": "int256",
                          "name": "previous",
                          "type": "int256"
                        }
                      ],
                      "internalType": "struct NahmiiTypesLib.CurrentPreviousInt256",
                      "name": "conjugate",
                      "type": "tuple"
                    }
                  ],
                  "internalType": "struct NahmiiTypesLib.IntendedConjugateCurrentPreviousInt256",
                  "name": "balances",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "components": [
                        {
                          "internalType": "int256",
                          "name": "amount",
                          "type": "int256"
                        },
                        {
                          "components": [
                            {
                              "internalType": "address",
                              "name": "ct",
                              "type": "address"
                            },
                            {
                              "internalType": "uint256",
                              "name": "id",
                              "type": "uint256"
                            }
                          ],
                          "internalType": "struct MonetaryTypesLib.Currency",
                          "name": "currency",
                          "type": "tuple"
                        }
                      ],
                      "internalType": "struct MonetaryTypesLib.Figure",
                      "name": "single",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "originId",
                          "type": "uint256"
                        },
                        {
                          "components": [
                            {
                              "internalType": "int256",
                              "name": "amount",
                              "type": "int256"
                            },
                            {
                              "components": [
                                {
                                  "internalType": "address",
                                  "name": "ct",
                                  "type": "address"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "id",
                                  "type": "uint256"
                                }
                              ],
                              "internalType": "struct MonetaryTypesLib.Currency",
                              "name": "currency",
                              "type": "tuple"
                            }
                          ],
                          "internalType": "struct MonetaryTypesLib.Figure",
                          "name": "figure",
                          "type": "tuple"
                        }
                      ],
                      "internalType": "struct NahmiiTypesLib.OriginFigure[]",
                      "name": "total",
                      "type": "tuple[]"
                    }
                  ],
                  "internalType": "struct NahmiiTypesLib.SingleFigureTotalOriginFigures",
                  "name": "fees",
                  "type": "tuple"
                }
              ],
              "internalType": "struct TradeTypesLib.TradeParty",
              "name": "buyer",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "wallet",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "rollingVolume",
                  "type": "uint256"
                },
                {
                  "internalType": "enum TradeTypesLib.LiquidityRole",
                  "name": "liquidityRole",
                  "type": "uint8"
                },
                {
                  "components": [
                    {
                      "internalType": "int256",
                      "name": "amount",
                      "type": "int256"
                    },
                    {
                      "components": [
                        {
                          "internalType": "bytes32",
                          "name": "wallet",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "operator",
                          "type": "bytes32"
                        }
                      ],
                      "internalType": "struct NahmiiTypesLib.WalletOperatorHashes",
                      "name": "hashes",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "int256",
                          "name": "current",
                          "type": "int256"
                        },
                        {
                          "internalType": "int256",
                          "name": "previous",
                          "type": "int256"
                        }
                      ],
                      "internalType": "struct NahmiiTypesLib.CurrentPreviousInt256",
                      "name": "residuals",
                      "type": "tuple"
                    }
                  ],
                  "internalType": "struct TradeTypesLib.TradeOrder",
                  "name": "order",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "components": [
                        {
                          "internalType": "int256",
                          "name": "current",
                          "type": "int256"
                        },
                        {
                          "internalType": "int256",
                          "name": "previous",
                          "type": "int256"
                        }
                      ],
                      "internalType": "struct NahmiiTypesLib.CurrentPreviousInt256",
                      "name": "intended",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "int256",
                          "name": "current",
                          "type": "int256"
                        },
                        {
                          "internalType": "int256",
                          "name": "previous",
                          "type": "int256"
                        }
                      ],
                      "internalType": "struct NahmiiTypesLib.CurrentPreviousInt256",
                      "name": "conjugate",
                      "type": "tuple"
                    }
                  ],
                  "internalType": "struct NahmiiTypesLib.IntendedConjugateCurrentPreviousInt256",
                  "name": "balances",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "components": [
                        {
                          "internalType": "int256",
                          "name": "amount",
                          "type": "int256"
                        },
                        {
                          "components": [
                            {
                              "internalType": "address",
                              "name": "ct",
                              "type": "address"
                            },
                            {
                              "internalType": "uint256",
                              "name": "id",
                              "type": "uint256"
                            }
                          ],
                          "internalType": "struct MonetaryTypesLib.Currency",
                          "name": "currency",
                          "type": "tuple"
                        }
                      ],
                      "internalType": "struct MonetaryTypesLib.Figure",
                      "name": "single",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "originId",
                          "type": "uint256"
                        },
                        {
                          "components": [
                            {
                              "internalType": "int256",
                              "name": "amount",
                              "type": "int256"
                            },
                            {
                              "components": [
                                {
                                  "internalType": "address",
                                  "name": "ct",
                                  "type": "address"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "id",
                                  "type": "uint256"
                                }
                              ],
                              "internalType": "struct MonetaryTypesLib.Currency",
                              "name": "currency",
                              "type": "tuple"
                            }
                          ],
                          "internalType": "struct MonetaryTypesLib.Figure",
                          "name": "figure",
                          "type": "tuple"
                        }
                      ],
                      "internalType": "struct NahmiiTypesLib.OriginFigure[]",
                      "name": "total",
                      "type": "tuple[]"
                    }
                  ],
                  "internalType": "struct NahmiiTypesLib.SingleFigureTotalOriginFigures",
                  "name": "fees",
                  "type": "tuple"
                }
              ],
              "internalType": "struct TradeTypesLib.TradeParty",
              "name": "seller",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "components": [
                    {
                      "internalType": "int256",
                      "name": "single",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "total",
                      "type": "int256"
                    }
                  ],
                  "internalType": "struct NahmiiTypesLib.SingleTotalInt256",
                  "name": "intended",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "int256",
                      "name": "single",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "total",
                      "type": "int256"
                    }
                  ],
                  "internalType": "struct NahmiiTypesLib.SingleTotalInt256",
                  "name": "conjugate",
                  "type": "tuple"
                }
              ],
              "internalType": "struct NahmiiTypesLib.IntendedConjugateSingleTotalInt256",
              "name": "transfers",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "hash",
                  "type": "bytes32"
                },
                {
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "r",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "s",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint8",
                      "name": "v",
                      "type": "uint8"
                    }
                  ],
                  "internalType": "struct NahmiiTypesLib.Signature",
                  "name": "signature",
                  "type": "tuple"
                }
              ],
              "internalType": "struct NahmiiTypesLib.Seal",
              "name": "seal",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "blockNumber",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "operatorId",
              "type": "uint256"
            }
          ],
          "internalType": "struct TradeTypesLib.Trade",
          "name": "trade2",
          "type": "tuple"
        }
      ],
      "name": "challenge",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100db5760003560e01c806301370d06146100e05780631327d3d8146100f55780632738a112146101085780632f013a00146101105780633a5381b51461012e5780633bd7857f146101435780634476d23b1461014b578063570ca73514610160578063627f09c3146101685780636792ce6e1461017b5780636b0570d01461018e5780636c70bee91461019657806370327ea11461019e5780638fdcfa84146101a657806396214735146101b9578063b3ab15fb146101cc578063d5f39488146101df575b600080fd5b6100f36100ee366004611230565b6101e7565b005b6100f3610103366004611230565b610288565b6100f3610319565b61011861037f565b6040516101259190611794565b60405180910390f35b610136610388565b60405161012591906117d8565b610136610397565b6101536103a6565b604051610125919061172e565b6101536103ba565b6100f3610176366004611230565b6103c9565b6100f3610189366004611230565b61045a565b6101366104eb565b6101366104fa565b6100f3610509565b6100f36101b436600461124e565b61056c565b6100f36101c73660046111ec565b610b08565b6100f36101da3660046111ec565b610bc8565b610153610c6b565b6101ef610c7f565b6101f857600080fd5b806001600160a01b03811661020c57600080fd5b60025482906001600160a01b03908116908216811461028257600280546001600160a01b038681166001600160a01b03198316179092556040519116907f07998fa7be97abe2427246ae4688298c89d6196bbffdf0997b9495a8d27bc6739061027890839088906117e6565b60405180910390a1505b50505050565b610290610c7f565b61029957600080fd5b806001600160a01b0381166102ad57600080fd5b60045482906001600160a01b03908116908216811461028257600480546001600160a01b038681166001600160a01b03198316179092556040519116907f1882af944a16549c3d4f60e3cd26f158b0c7aac3222cf32971fc21375ce05f609061027890839088906117e6565b336103226103a6565b6001600160a01b03161461033557600080fd5b60005460ff161561034557600080fd5b7f787a5d936e74f4b564b9153575886059829c78cd9927b1be5e0d976b317ef73633604051610374919061173c565b60405180910390a133ff5b60005460ff1681565b6004546001600160a01b031681565b6002546001600160a01b031681565b60005461010090046001600160a01b031690565b6001546001600160a01b031681565b6103d1610c7f565b6103da57600080fd5b806001600160a01b0381166103ee57600080fd5b60035482906001600160a01b03908116908216811461028257600380546001600160a01b038681166001600160a01b03198316179092556040519116907f634f61bf00e14adedce330c80c2823e16e184f189ebe853e1ddecc4a268477ff9061027890839088906117e6565b610462610c7f565b61046b57600080fd5b806001600160a01b03811661047f57600080fd5b60055482906001600160a01b03908116908216811461028257600580546001600160a01b038681166001600160a01b03198316179092556040519116907fc9f3f00c1760fe26985aeacb814a21c56ea289d680562e89b249681b08c303829061027890839088906117e6565b6005546001600160a01b031681565b6003546001600160a01b031681565b336105126103a6565b6001600160a01b03161461052557600080fd5b6000805460ff191660011790556040517fd5a2a04a775c741c2ca0dc46ea7ce4835190e1aaf1ca018def0e82568ec336169061056290339061173c565b60405180910390a1565b600360009054906101000a90046001600160a01b03166001600160a01b031663f71e860f6040518163ffffffff1660e01b815260040160206040518083038186803b1580156105ba57600080fd5b505afa1580156105ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506105f29190810190611212565b6106175760405162461bcd60e51b815260040161060e90611801565b60405180910390fd5b60048054604051637211c8c760e11b815284926001600160a01b039092169163e423918e9161064891859101611821565b60206040518083038186803b15801561066057600080fd5b505afa158015610674573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506106989190810190611212565b6106b45760405162461bcd60e51b815260040161060e90611811565b60048054604051637211c8c760e11b815284926001600160a01b039092169163e423918e916106e591859101611821565b60206040518083038186803b1580156106fd57600080fd5b505afa158015610711573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506107359190810190611212565b6107515760405162461bcd60e51b815260040161060e90611811565b60e080840151519085015151141561076857600080fd5b60008360800151608001516020015160200151856080015160800151602001516020015114905060008460a001516080015160200151602001518660a0015160800151602001516020015114905081806107bf5750805b6107c857600080fd5b600360009054906101000a90046001600160a01b03166001600160a01b031663f8e6e8886040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561081857600080fd5b505af115801561082c573d6000803e3d6000fd5b505060025460e0890151516040516375d8655b60e01b81526001600160a01b0390921693506375d8655b9250610864916004016117a2565b600060405180830381600087803b15801561087e57600080fd5b505af1158015610892573d6000803e3d6000fd5b505060025460e0880151516040516375d8655b60e01b81526001600160a01b0390921693506375d8655b92506108ca916004016117a2565b600060405180830381600087803b1580156108e457600080fd5b505af11580156108f8573d6000803e3d6000fd5b505060055460035460408051639699f33760e01b815290516001600160a01b03938416955063760b82929450339390921691639699f33791600480820192602092909190829003018186803b15801561095057600080fd5b505afa158015610964573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061098891908101906112b5565b60006040518463ffffffff1660e01b81526004016109a89392919061174a565b600060405180830381600087803b1580156109c257600080fd5b505af11580156109d6573d6000803e3d6000fd5b505050508115610a4a57600254608086015160200151604051632531d11d60e11b81526001600160a01b0390921691634a63a23a91610a179160040161172e565b600060405180830381600087803b158015610a3157600080fd5b505af1158015610a45573d6000803e3d6000fd5b505050505b8015610aba5760025460a086015160200151604051632531d11d60e11b81526001600160a01b0390921691634a63a23a91610a879160040161172e565b600060405180830381600087803b158015610aa157600080fd5b505af1158015610ab5573d6000803e3d6000fd5b505050505b60e0808701515190860151516040517f062cdd5a38a8c97ea6d34cf2f7ead767cd74a89372d592342cc5a78de2d425db92610af892909133906117b0565b60405180910390a1505050505050565b610b10610c7f565b610b1957600080fd5b806001600160a01b038116610b2d57600080fd5b6001600160a01b038116301415610b4357600080fd5b6000546001600160a01b038381166101009092041614610bc457600080546001600160a01b03848116610100908102610100600160a81b03198416179093556040519290910416907f977e5fa58e458501775e0008d275006294c5249e3c08d1d0e3a9f3acad14f6e490610bba9083908690611772565b60405180910390a1505b5050565b610bd0610c95565b610bd957600080fd5b806001600160a01b038116610bed57600080fd5b6001600160a01b038116301415610c0357600080fd5b6001546001600160a01b03838116911614610bc457600180546001600160a01b038481166001600160a01b03198316179092556040519116907f9f611b789425d0d5b90b920f1b2852907dd865c80074a30b1629aaa041d1812c90610bba9083908690611772565b60005461010090046001600160a01b031681565b60005461010090046001600160a01b0316331490565b6001546001600160a01b0316331490565b8035610cb1816118f8565b92915050565b600082601f830112610cc857600080fd5b8135610cdb610cd682611858565b611832565b91508181835260208401935060208101905083856080840282011115610d0057600080fd5b60005b83811015610d2e5781610d168882610e86565b84525060209092019160809190910190600101610d03565b5050505092915050565b8051610cb18161190c565b8035610cb181611915565b8035610cb18161191e565b8035610cb181611927565b600060408284031215610d7657600080fd5b610d806040611832565b90506000610d8e8484610ca6565b8252506020610d9f84848301610d43565b60208301525092915050565b600060408284031215610dbd57600080fd5b610dc76040611832565b90506000610d8e8484610d43565b600060608284031215610de757600080fd5b610df16040611832565b90506000610dff8484610d43565b8252506020610d9f84848301610d64565b600060808284031215610e2257600080fd5b610e2c6040611832565b90506000610e3a8484610d64565b8252506040610d9f84848301610d64565b600060808284031215610e5d57600080fd5b610e676040611832565b90506000610e758484610dab565b8252506040610d9f84848301610dab565b600060808284031215610e9857600080fd5b610ea26040611832565b90506000610eb08484610d43565b8252506020610d9f84848301610dd5565b600060808284031215610ed357600080fd5b610edd6040611832565b90506000610eeb8484610d43565b8252506020610d9f84848301600060608284031215610f0957600080fd5b610f136060611832565b90506000610f218484610d43565b8252506020610f3284848301610d43565b6020830152506040610f46848285016111e1565b60408301525092915050565b600060808284031215610f6457600080fd5b610f6e6040611832565b90506000610f7c8484610dd5565b82525060608201356001600160401b03811115610f9857600080fd5b610d9f84828501610cb7565b600060a08284031215610fb657600080fd5b610fc06060611832565b90506000610fce8484610d43565b8252506020610fdf84848301610dab565b6020830152506060610f4684828501610dab565b60006101c0828403121561100657600080fd5b61101060e0611832565b9050600061101e8484610d43565b825250602061102f84848301610ca6565b602083015250604061104384828501610d43565b604083015250606061105784828501610d59565b606083015250608061106b84828501610fa4565b60808301525061012061108084828501610e4b565b60a0830152506101a08201356001600160401b038111156110a057600080fd5b6110ac84828501610f52565b60c08301525092915050565b600061026082840312156110cb57600080fd5b6110d6610140611832565b905060006110e48484610d43565b82525060206110f584848301610d43565b602083015250604061110984828501610e10565b60408301525060c061111d84828501610d43565b60608301525060e08201356001600160401b0381111561113c57600080fd5b61114884828501610ff3565b6080830152506101008201356001600160401b0381111561116857600080fd5b61117484828501610ff3565b60a08301525061012061118984828501610e4b565b60c0830152506101a061119e84828501610ec1565b60e0830152506102206111b384828501610d43565b610100830152506102406111c984828501610d43565b6101208301525092915050565b8051610cb181611915565b8035610cb181611934565b6000602082840312156111fe57600080fd5b600061120a8484610ca6565b949350505050565b60006020828403121561122457600080fd5b600061120a8484610d38565b60006020828403121561124257600080fd5b600061120a8484610d4e565b6000806040838503121561126157600080fd5b82356001600160401b0381111561127757600080fd5b611283858286016110b8565b92505060208301356001600160401b0381111561129f57600080fd5b6112ab858286016110b8565b9150509250929050565b6000602082840312156112c757600080fd5b600061120a84846111d6565b60006112df83836114d4565b505060800190565b6112f0816118ca565b82525050565b6112f08161188b565b600061130a8261187e565b6113148185611882565b935061131f83611878565b8060005b8381101561134d57815161133788826112d3565b975061134283611878565b925050600101611323565b509495945050505050565b6112f081611896565b6112f08161189b565b6112f08161189e565b6112f0816118d5565b6112f0816118e0565b6000611392603f83611882565b7f4f7065726174696f6e616c206d6f6465206973206e6f74206e6f726d616c205b81527f436f6e666967757261626c654f7065726174696f6e616c2e736f6c3a32325d00602082015260400192915050565b60006113f1602d83611882565b7f5472616465207365616c206e6f742067656e75696e65205b56616c696461746181526c626c6556322e736f6c3a37305d60981b602082015260400192915050565b8051604083019061144484826112f6565b5060208201516102826020850182611361565b805160408301906114448482611361565b805160608301906114798482611361565b5060208201516102826020850182611433565b8051608083019061149d8482611433565b5060208201516102826040850182611433565b805160808301906114c18482611457565b5060208201516102826040850182611457565b805160808301906114e58482611361565b5060208201516102826020850182611468565b805160808301906115098482611361565b5060208201516102826020850182805160608301906115288482611361565b50602082015161153b6020850182611361565b5060408201516102826040850182611725565b805160009060808401906115628582611468565b506020830151848203606086015261157a82826112ff565b95945050505050565b805160a08301906115948482611361565b5060208201516115a76020850182611457565b5060408201516102826060850182611457565b80516000906101c08401906115cf8582611361565b5060208301516115e260208601826112f6565b5060408301516115f56040860182611361565b5060608301516116086060860182611373565b50608083015161161b6080860182611583565b5060a083015161162f6101208601826114b0565b5060c08301518482036101a086015261157a828261154e565b805160009061026084019061165d8582611361565b5060208301516116706020860182611361565b506040830151611683604086018261148c565b50606083015161169660c0860182611361565b50608083015184820360e08601526116ae82826115ba565b91505060a08301518482036101008601526116c982826115ba565b91505060c08301516116df6101208601826114b0565b5060e08301516116f36101a08601826114f8565b50610100830151611708610220860182611361565b5061012083015161171d610240860182611361565b509392505050565b6112f0816118c4565b60208101610cb182846112f6565b60208101610cb182846112e7565b6060810161175882866112e7565b6117656020830185611361565b61120a604083018461137c565b6040810161178082856112f6565b61178d60208301846112f6565b9392505050565b60208101610cb18284611358565b60208101610cb18284611361565b606081016117be8286611361565b6117cb6020830185611361565b61120a60408301846112e7565b60208101610cb1828461136a565b604081016117f4828561136a565b61178d602083018461136a565b60208082528101610cb181611385565b60208082528101610cb1816113e4565b6020808252810161178d8184611648565b6040518181016001600160401b038111828210171561185057600080fd5b604052919050565b60006001600160401b0382111561186e57600080fd5b5060209081020190565b60200190565b5190565b90815260200190565b6000610cb1826118b8565b151590565b90565b6000610cb18261188b565b806118b3816118eb565b919050565b6001600160a01b031690565b60ff1690565b6000610cb18261189e565b6000610cb1826118a9565b6000610cb18261189b565b600281106118f557fe5b50565b6119018161188b565b81146118f557600080fd5b61190181611896565b6119018161189b565b6119018161189e565b600281106118f557600080fd5b611901816118c456fea365627a7a723158204384af0ac444b64d090968c0f48a7473cc76f3cfaa2bebd95010fd6123f5eb0b6c6578706572696d656e74616cf564736f6c634300050c0040",
  "sourceMap": "643:2452:39:-;;;1175:62;8:9:-1;5:2;;;30:1;27;20:12;5:2;1175:62:39;;;;;;;;;;;;;;;;;;;;;1213:8;;-1:-1:-1;;;;;681:22:51;;673:31;;;;;;-1:-1:-1;;;;;722:25:51;;742:4;722:25;;714:34;;;;;;-1:-1:-1;1105:8:65;:20;;-1:-1:-1;;;;;;1105:20:65;;-1:-1:-1;;;;;1105:20:65;;;;;;;;;;-1:-1:-1;1135:20:65;;-1:-1:-1;;;;;;1135:20:65;;;;;;-1:-1:-1;643:2452:39;;5:134:-1;83:13;;101:33;83:13;101:33;;;68:71;;;;;146:263;;261:2;249:9;240:7;236:23;232:32;229:2;;;277:1;274;267:12;229:2;312:1;329:64;385:7;365:9;329:64;;;319:74;223:186;-1:-1;;;;223:186;416:91;;-1:-1;;;;;576:54;;478:24;559:76;642:117;711:24;729:5;711:24;;;704:5;701:35;691:2;;750:1;747;740:12;691:2;685:74;;;643:2452:39;;;;;;",
  "deployedSourceMap": "643:2452:39:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;643:2452:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1097:457:37;;;;;;;;;:::i;:::-;;1196:384:98;;;;;;;;;:::i;1449:425:80:-;;;:::i;421:35::-;;;:::i;:::-;;;;;;;;;;;;;;;;676:28:98;;;:::i;:::-;;;;;;;;532:36:37;;;:::i;1390:100:65:-;;;:::i;:::-;;;;;;;;563:23;;;:::i;1068:441:19:-;;;;;;;;;:::i;1069:426:79:-;;;;;;;;;:::i;524:32::-;;;:::i;514:34:19:-;;;:::i;1091:314:80:-;;;:::i;1637:1456:39:-;;;;;;;;;:::i;1605:368:65:-;;;;;;;;;:::i;2088:::-;;;;;;;;;:::i;534:23::-;;;:::i;1097:457:37:-;3461:12:65;:10;:12::i;:::-;3453:21;;;;;;1213:17:37;-1:-1:-1;;;;;458:22:51;;450:31;;;;;;1290:14:37;;1262:17;;-1:-1:-1;;;;;1290:14:37;;;;850:22:51;;;;846:41;;1391:14:37;;;-1:-1:-1;;;;;1415:34:37;;;-1:-1:-1;;;;;;1415:34:37;;;;;;1487:60;;1391:14;;;1487:60;;;;1391:14;;1432:17;;1487:60;;;;;;;;;;886:1:51;846:41;491:1;;3484::65;1097:457:37;:::o;1196:384:98:-;3461:12:65;:10;:12::i;:::-;3453:21;;;;;;1299:12:98;-1:-1:-1;;;;;458:22:51;;450:31;;;;;;1366:9:98;;1343:12;;-1:-1:-1;;;;;1366:9:98;;;;850:22:51;;;;846:41;;1447:9:98;;;-1:-1:-1;;;;;1466:24:98;;;-1:-1:-1;;;;;;1466:24:98;;;;;;1528:45;;1447:9;;;1528:45;;;;1447:9;;1478:12;;1528:45;;1449:425:80;1590:10;1574:12;:10;:12::i;:::-;-1:-1:-1;;;;;1574:26:80;;1566:35;;;;;;1684:23;;;;1683:24;1675:33;;;;;;1746:39;1774:10;1746:39;;;;;;;;;;;;;;;1856:10;1843:24;421:35;;;;;;:::o;676:28:98:-;;;-1:-1:-1;;;;;676:28:98;;:::o;532:36:37:-;;;-1:-1:-1;;;;;532:36:37;;:::o;1390:100:65:-;1445:7;1475:8;;;;-1:-1:-1;;;;;1475:8:65;;1390:100::o;563:23::-;;;-1:-1:-1;;;;;563:23:65;;:::o;1068:441:19:-;3461:12:65;:10;:12::i;:::-;3453:21;;;;;;1181:16:19;-1:-1:-1;;;;;458:22:51;;450:31;;;;;;1256:13:19;;1229:16;;-1:-1:-1;;;;;1256:13:19;;;;850:22:51;;;;846:41;;1352:13:19;;;-1:-1:-1;;;;;1375:32:19;;;-1:-1:-1;;;;;;1375:32:19;;;;;;1445:57;;1352:13;;;1445:57;;;;1352:13;;1391:16;;1445:57;;1069:426:79;3461:12:65;:10;:12::i;:::-;3453:21;;;;;;1179:15:79;-1:-1:-1;;;;;458:22:51;;450:31;;;;;;1252:12:79;;1226:15;;-1:-1:-1;;;;;1252:12:79;;;;850:22:51;;;;846:41;;1344:12:79;;;-1:-1:-1;;;;;1366:30:79;;;-1:-1:-1;;;;;;1366:30:79;;;;;;1434:54;;1344:12;;;1434:54;;;;1344:12;;1381:15;;1434:54;;524:32;;;-1:-1:-1;;;;;524:32:79;;:::o;514:34:19:-;;;-1:-1:-1;;;;;514:34:19;;:::o;1091:314:80:-;1232:10;1216:12;:10;:12::i;:::-;-1:-1:-1;;;;;1216:26:80;;1208:35;;;;;;1290:23;:30;;-1:-1:-1;;1290:30:80;1316:4;1290:30;;;1358:40;;;;;;1387:10;;1358:40;;;;;;;;;;1091:314::o;1637:1456:39:-;582:13:20;;;;;;;;;-1:-1:-1;;;;;582:13:20;-1:-1:-1;;;;;582:37:20;;:39;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;582:39:20;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;582:39:20;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;582:39:20;;;;;;;;;574:115;;;;-1:-1:-1;;;574:115:20;;;;;;;;;;;;;;;;;2366:9:98;;;:35;;-1:-1:-1;;;2366:35:98;;1809:6:39;;-1:-1:-1;;;;;2366:9:98;;;;:28;;:35;;1809:6:39;;2366:35:98;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2366:35:98;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2366:35:98;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;2366:35:98;;;;;;;;;2358:93;;;;-1:-1:-1;;;2358:93:98;;;;;;;;;2366:9;;;:35;;-1:-1:-1;;;2366:35:98;;1837:6:39;;-1:-1:-1;;;;;2366:9:98;;;;:28;;:35;;1837:6:39;;2366:35:98;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2366:35:98;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2366:35:98;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;2366:35:98;;;;;;;;;2358:93;;;;-1:-1:-1;;;2358:93:98;;;;;;;;;1887:11:39;;;;;:16;1867:11;;;;:16;:36;;1859:45;;;;;;1978:24;2043:6;:12;;;:18;;;:25;;;:34;;;2005:6;:12;;;:18;;;:25;;;:34;;;:72;1978:99;;2087:25;2154:6;:13;;;:19;;;:26;;;:35;;;2115:6;:13;;;:19;;;:26;;;:35;;;:74;2087:102;;2253:19;:43;;;;2276:20;2253:43;2245:52;;;;;;2348:13;;;;;;;;;-1:-1:-1;;;;;2348:13:39;-1:-1:-1;;;;;2348:36:39;;:38;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2348:38:39;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;2442:14:39;;2480:11;;;;:16;2442:55;;-1:-1:-1;;;2442:55:39;;-1:-1:-1;;;;;2442:14:39;;;;-1:-1:-1;2442:37:39;;-1:-1:-1;2442:55:39;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2442:55:39;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;2507:14:39;;2545:11;;;;:16;2507:55;;-1:-1:-1;;;2507:55:39;;-1:-1:-1;;;;;2507:14:39;;;;-1:-1:-1;2507:37:39;;-1:-1:-1;2507:55:39;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2507:55:39;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;2606:12:39;;2648:13;;:34;;;-1:-1:-1;;;2648:34:39;;;;-1:-1:-1;;;;;2606:12:39;;;;-1:-1:-1;2606:29:39;;-1:-1:-1;2636:10:39;;2648:13;;;;:32;;:34;;;;;;;;;;;;;;;:13;:34;;;5:2:-1;;;;30:1;27;20:12;5:2;2648:34:39;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2648:34:39;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;2648:34:39;;;;;;;;;2684:1;2606:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2606:80:39;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2606:80:39;;;;2747:19;2743:95;;;2780:14;;2818:12;;;;:19;;;2780:58;;-1:-1:-1;;;2780:58:39;;-1:-1:-1;;;;;2780:14:39;;;;:37;;:58;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2780:58:39;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2780:58:39;;;;2743:95;2852:20;2848:97;;;2886:14;;2924:13;;;;:20;;;2886:59;;-1:-1:-1;;;2886:59:39;;-1:-1:-1;;;;;2886:14:39;;;;:37;;:59;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2886:59:39;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2886:59:39;;;;2848:97;3030:11;;;;;:16;3048:11;;;;:16;2983:103;;;;;;3030:16;;3066:10;;2983:103;;;;;;;;;;2461:1:98;;;699::20;1637:1456:39;;:::o;1605:368:65:-;3461:12;:10;:12::i;:::-;3453:21;;;;;;1700:11;-1:-1:-1;;;;;681:22:51;;673:31;;;;;;-1:-1:-1;;;;;722:25:51;;742:4;722:25;;714:34;;;;;;1746:8:65;;-1:-1:-1;;;;;1731:23:65;;;1746:8;;;;;1731:23;1727:240;;1802:19;1824:8;;-1:-1:-1;;;;;1846:22:65;;;1824:8;1846:22;;;-1:-1:-1;;;;;;1846:22:65;;;;;;1914:42;;1824:8;;;;;;1914:42;;;;1824:8;;1857:11;;1914:42;;;;;;;;;;1727:240;;3484:1;1605:368;:::o;2088:::-;3619:12;:10;:12::i;:::-;3611:21;;;;;;2183:11;-1:-1:-1;;;;;681:22:51;;673:31;;;;;;-1:-1:-1;;;;;722:25:51;;742:4;722:25;;714:34;;;;;;2229:8:65;;-1:-1:-1;;;;;2214:23:65;;;2229:8;;2214:23;2210:240;;2307:8;;;-1:-1:-1;;;;;2329:22:65;;;-1:-1:-1;;;;;;2329:22:65;;;;;;2397:42;;2307:8;;;2397:42;;;;2307:8;;2340:11;;2397:42;;534:23;;;;;;-1:-1:-1;;;;;534:23:65;;:::o;2585:113::-;2642:4;2683:8;;;;-1:-1:-1;;;;;2683:8:65;2669:10;:22;;2585:113::o;2827:::-;2925:8;;-1:-1:-1;;;;;2925:8:65;2911:10;:22;;2827:113::o;5:130:-1:-;72:20;;97:33;72:20;97:33;;;57:78;;;;;187:780;;327:3;320:4;312:6;308:17;304:27;294:2;;345:1;342;335:12;294:2;382:6;369:20;404:103;419:87;499:6;419:87;;;404:103;;;395:112;;524:5;549:6;542:5;535:21;579:4;571:6;567:17;557:27;;601:4;596:3;592:14;585:21;;654:6;701:3;693:4;685:6;681:17;676:3;672:27;669:36;666:2;;;718:1;715;708:12;666:2;743:1;728:233;753:6;750:1;747:13;728:233;;;811:3;833:64;893:3;881:10;833:64;;;821:77;;-1:-1;921:4;912:14;;;;949:4;940:14;;;;;775:1;768:9;728:233;;;732:14;287:680;;;;;;;;975:128;1050:13;;1068:30;1050:13;1068:30;;1110:130;1177:20;;1202:33;1177:20;1202:33;;1247:174;1336:20;;1361:55;1336:20;1361:55;;1973:168;2059:20;;2084:52;2059:20;2084:52;;2322:460;;2434:4;2422:9;2417:3;2413:19;2409:30;2406:2;;;2452:1;2449;2442:12;2406:2;2470:20;2485:4;2470:20;;;2461:29;-1:-1;2538:1;2569:49;2614:3;2594:9;2569:49;;;2545:74;;-1:-1;2678:2;2711:49;2756:3;2732:22;;;2711:49;;;2704:4;2697:5;2693:16;2686:75;2640:132;2400:382;;;;;2839:482;;2964:4;2952:9;2947:3;2943:19;2939:30;2936:2;;;2982:1;2979;2972:12;2936:2;3000:20;3015:4;3000:20;;;2991:29;-1:-1;3073:1;3104:48;3148:3;3128:9;3104:48;;3365:490;;3475:4;3463:9;3458:3;3454:19;3450:30;3447:2;;;3493:1;3490;3483:12;3447:2;3511:20;3526:4;3511:20;;;3502:29;-1:-1;3583:1;3614:48;3658:3;3638:9;3614:48;;;3590:73;;-1:-1;3728:2;3761:72;3829:3;3805:22;;;3761:72;;3916:536;;4045:4;4033:9;4028:3;4024:19;4020:30;4017:2;;;4063:1;4060;4053:12;4017:2;4081:20;4096:4;4081:20;;;4072:29;-1:-1;4155:1;4186:72;4254:3;4234:9;4186:72;;;4162:97;;-1:-1;4325:2;4358:72;4426:3;4402:22;;;4358:72;;4526:575;;4668:4;4656:9;4651:3;4647:19;4643:30;4640:2;;;4686:1;4683;4676:12;4640:2;4704:20;4719:4;4704:20;;;4695:29;-1:-1;4778:1;4809:85;4890:3;4870:9;4809:85;;;4785:110;;-1:-1;4961:2;4994:85;5075:3;5051:22;;;4994:85;;5782:495;;5898:4;5886:9;5881:3;5877:19;5873:30;5870:2;;;5916:1;5913;5906:12;5870:2;5934:20;5949:4;5934:20;;;5925:29;-1:-1;6008:1;6039:49;6084:3;6064:9;6039:49;;;6015:74;;-1:-1;6152:2;6185:70;6251:3;6227:22;;;6185:70;;6317:489;;6425:4;6413:9;6408:3;6404:19;6400:30;6397:2;;;6443:1;6440;6433:12;6397:2;6461:20;6476:4;6461:20;;;6452:29;-1:-1;6531:1;6562:49;6607:3;6587:9;6562:49;;;6538:74;;-1:-1;6678:2;6711:73;6780:3;6756:22;;;6851:598;6964:4;6952:9;6947:3;6943:19;6939:30;6936:2;;;6982:1;6979;6972:12;6936:2;7000:20;7015:4;7000:20;;;6991:29;-1:-1;7067:1;7098:49;7143:3;7123:9;7098:49;;;7074:74;;-1:-1;7206:2;7239:49;7284:3;7260:22;;;7239:49;;;7232:4;7225:5;7221:16;7214:75;7169:131;7347:2;7380:47;7423:3;7414:6;7403:9;7399:22;7380:47;;;7373:4;7366:5;7362:16;7355:73;7310:129;6930:519;;;;;7515:644;;7649:4;7637:9;7632:3;7628:19;7624:30;7621:2;;;7667:1;7664;7657:12;7621:2;7685:20;7700:4;7685:20;;;7676:29;-1:-1;7757:1;7788:70;7854:3;7834:9;7788:70;;;7764:95;;-1:-1;7949:2;7934:18;;7921:32;-1:-1;;;;;7962:30;;7959:2;;;8005:1;8002;7995:12;7959:2;8040:97;8133:3;8124:6;8113:9;8109:22;8040:97;;8731:689;;8845:4;8833:9;8828:3;8824:19;8820:30;8817:2;;;8863:1;8860;8853:12;8817:2;8881:20;8896:4;8881:20;;;8872:29;-1:-1;8953:1;8984:48;9028:3;9008:9;8984:48;;;8960:73;;-1:-1;9096:2;9129:84;9209:3;9185:22;;;9129:84;;;9122:4;9115:5;9111:16;9104:110;9054:171;9280:2;9313:85;9394:3;9385:6;9374:9;9370:22;9313:85;;9465:1444;;9579:5;9567:9;9562:3;9558:19;9554:31;9551:2;;;9598:1;9595;9588:12;9551:2;9616:20;9631:4;9616:20;;;9607:29;-1:-1;9687:1;9718:49;9763:3;9743:9;9718:49;;;9694:74;;-1:-1;9831:2;9864:49;9909:3;9885:22;;;9864:49;;;9857:4;9850:5;9846:16;9839:75;9789:136;9984:2;10017:49;10062:3;10053:6;10042:9;10038:22;10017:49;;;10010:4;10003:5;9999:16;9992:75;9935:143;10137:2;10170:68;10234:3;10225:6;10214:9;10210:22;10170:68;;;10163:4;10156:5;10152:16;10145:94;10088:162;10301:3;10335:74;10405:3;10396:6;10385:9;10381:22;10335:74;;;10328:4;10321:5;10317:16;10310:100;10260:161;10475:3;10509:102;10607:3;10598:6;10587:9;10583:22;10509:102;;;10502:4;10495:5;10491:16;10484:128;10431:192;10701:3;10690:9;10686:19;10673:33;-1:-1;;;;;10718:6;10715:30;10712:2;;;10758:1;10755;10748:12;10712:2;10793:94;10883:3;10874:6;10863:9;10859:22;10793:94;;;10786:4;10779:5;10775:16;10768:120;10633:266;9545:1364;;;;;10949:1986;;11062:5;11050:9;11045:3;11041:19;11037:31;11034:2;;;11081:1;11078;11071:12;11034:2;11099:21;11114:5;11099:21;;;11090:30;-1:-1;11171:1;11202:49;11247:3;11227:9;11202:49;;;11178:74;;-1:-1;11315:2;11348:48;11392:3;11368:22;;;11348:48;;;11341:4;11334:5;11330:16;11323:74;11273:135;11464:2;11497:89;11582:3;11573:6;11562:9;11558:22;11497:89;;;11490:4;11483:5;11479:16;11472:115;11418:180;11648:3;11682:48;11726:3;11717:6;11706:9;11702:22;11682:48;;;11675:4;11668:5;11664:16;11657:74;11608:134;11821:3;11810:9;11806:19;11793:33;-1:-1;;;;;11838:6;11835:30;11832:2;;;11878:1;11875;11868:12;11832:2;11913:74;11983:3;11974:6;11963:9;11959:22;11913:74;;;11906:4;11899:5;11895:16;11888:100;11752:247;12079:3;12068:9;12064:19;12051:33;-1:-1;;;;;12096:6;12093:30;12090:2;;;12136:1;12133;12126:12;12090:2;12171:74;12241:3;12232:6;12221:9;12217:22;12171:74;;;12164:4;12157:5;12153:16;12146:100;12009:248;12312:3;12346:98;12440:3;12431:6;12420:9;12416:22;12346:98;;;12339:4;12332:5;12328:16;12321:124;12267:189;12506:3;12540:68;12604:3;12595:6;12584:9;12580:22;12540:68;;;12533:4;12526:5;12522:16;12515:94;12466:154;12677:3;12712:49;12757:3;12748:6;12737:9;12733:22;12712:49;;;12704:5;12697;12693:17;12686:76;12630:143;12829:3;12864:49;12909:3;12900:6;12889:9;12885:22;12864:49;;;12856:5;12849;12845:17;12838:76;12783:142;11028:1907;;;;;13617:134;13695:13;;13713:33;13695:13;13713:33;;13758:126;13823:20;;13848:31;13823:20;13848:31;;13891:241;;13995:2;13983:9;13974:7;13970:23;13966:32;13963:2;;;14011:1;14008;14001:12;13963:2;14046:1;14063:53;14108:7;14088:9;14063:53;;;14053:63;13957:175;-1:-1;;;;13957:175;14139:257;;14251:2;14239:9;14230:7;14226:23;14222:32;14219:2;;;14267:1;14264;14257:12;14219:2;14302:1;14319:61;14372:7;14352:9;14319:61;;14403:285;;14529:2;14517:9;14508:7;14504:23;14500:32;14497:2;;;14545:1;14542;14535:12;14497:2;14580:1;14597:75;14664:7;14644:9;14597:75;;15573:634;;;15742:2;15730:9;15721:7;15717:23;15713:32;15710:2;;;15758:1;15755;15748:12;15710:2;15793:31;;-1:-1;;;;;15833:30;;15830:2;;;15876:1;15873;15866:12;15830:2;15896:77;15965:7;15956:6;15945:9;15941:22;15896:77;;;15886:87;;15772:207;16038:2;16027:9;16023:18;16010:32;-1:-1;;;;;16054:6;16051:30;16048:2;;;16094:1;16091;16084:12;16048:2;16114:77;16183:7;16174:6;16163:9;16159:22;16114:77;;;16104:87;;15989:208;15704:503;;;;;;16214:263;;16329:2;16317:9;16308:7;16304:23;16300:32;16297:2;;;16345:1;16342;16335:12;16297:2;16380:1;16397:64;16453:7;16433:9;16397:64;;16485:285;;16626:104;16726:3;16718:6;16626:104;;;-1:-1;;16759:4;16750:14;;16619:151;16778:142;16869:45;16908:5;16869:45;;;16864:3;16857:58;16851:69;;;16927:103;17000:24;17018:5;17000:24;;17242:870;;17427:77;17498:5;17427:77;;;17517:103;17613:6;17608:3;17517:103;;;17510:110;;17641:79;17714:5;17641:79;;;17740:7;17768:1;17753:337;17778:6;17775:1;17772:13;17753:337;;;17845:6;17839:13;17866:117;17979:3;17964:13;17866:117;;;17859:124;;18000:83;18076:6;18000:83;;;17990:93;-1:-1;;17800:1;17793:9;17753:337;;;-1:-1;18103:3;;17406:706;-1:-1;;;;;17406:706;18120:104;18197:21;18212:5;18197:21;;18231:103;18304:24;18322:5;18304:24;;18461:170;18566:59;18619:5;18566:59;;19187:150;19277:54;19325:5;19277:54;;19451:142;19542:45;19581:5;19542:45;;19601:465;;19761:67;19825:2;19820:3;19761:67;;;19861:66;19841:87;;19962:66;19957:2;19948:12;;19941:88;20057:2;20048:12;;19747:319;-1:-1;;19747:319;20075:465;;20235:67;20299:2;20294:3;20235:67;;;20335:66;20315:87;;-1:-1;;;20431:2;20422:12;;20415:88;20531:2;20522:12;;20221:319;-1:-1;;20221:319;20623:460;20820:22;;20756:4;20747:14;;;20848:62;20751:3;20820:22;20848:62;;;20776:140;20987:4;20980:5;20976:16;20970:23;20999:63;21056:4;21051:3;21047:14;21033:12;20999:63;;21187:493;21415:22;;21346:4;21337:14;;;21443:60;21341:3;21415:22;21443:60;;21758:514;21955:22;;21887:4;21878:14;;;21983:60;21882:3;21955:22;21983:60;;;21907:142;22126:4;22119:5;22115:16;22109:23;22138:113;22245:4;22240:3;22236:14;22222:12;22138:113;;22384:607;22621:22;;22551:4;22542:14;;;22649:112;22546:3;22621:22;22649:112;;;22571:196;22845:4;22838:5;22834:16;22828:23;22857:113;22964:4;22959:3;22955:14;22941:12;22857:113;;23129:685;23392:22;;23322:4;23313:14;;;23420:138;23317:3;23392:22;23420:138;;;23342:222;23642:4;23635:5;23631:16;23625:23;23654:139;23787:4;23782:3;23778:14;23764:12;23654:139;;24691:524;24902:22;;24832:4;24823:14;;;24930:62;24827:3;24902:22;24930:62;;;24852:146;25073:4;25066:5;25062:16;25056:23;25085:109;25188:4;25183:3;25179:14;25165:12;25085:109;;25285:513;25476:22;;25410:4;25401:14;;;25504:62;25405:3;25476:22;25504:62;;;25430:142;25650:4;25643:5;25639:16;25633:23;25662:115;25771:4;25766:3;25762:14;25748:12;26076:22;;26013:4;26004:14;;;26104:62;26008:3;26076:22;26104:62;;;26033:139;26242:4;26235:5;26231:16;26225:23;26254:63;26311:4;26306:3;26302:14;26288:12;26254:63;;;26182:141;26393:4;26386:5;26382:16;26376:23;26405:59;26458:4;26453:3;26449:14;26435:12;26405:59;;26607:732;26860:22;;26607:732;;26792:4;26783:14;;;26888:108;26787:3;26860:22;26888:108;;;26812:190;27076:4;27069:5;27065:16;27059:23;27128:3;27122:4;27118:14;27111:4;27106:3;27102:14;27095:38;27148:153;27296:4;27282:12;27148:153;;;27140:161;26765:574;-1:-1;;;;;26765:574;27996:779;28201:22;;28133:4;28124:14;;;28229:60;28128:3;28201:22;28229:60;;;28153:142;28370:4;28363:5;28359:16;28353:23;28382:137;28513:4;28508:3;28504:14;28490:12;28382:137;;;28305:220;28603:4;28596:5;28592:16;28586:23;28615:139;28748:4;28743:3;28739:14;28725:12;28615:139;;28855:1617;29068:22;;28855:1617;;29000:5;28991:15;;;29096:62;28995:3;29068:22;29096:62;;;29021:143;29239:4;29232:5;29228:16;29222:23;29251:63;29308:4;29303:3;29299:14;29285:12;29251:63;;;29174:146;29402:4;29395:5;29391:16;29385:23;29414:63;29471:4;29466:3;29462:14;29448:12;29414:63;;;29330:153;29565:4;29558:5;29554:16;29548:23;29577:80;29651:4;29646:3;29642:14;29628:12;29577:80;;;29493:170;29737:4;29730:5;29726:16;29720:23;29749:117;29860:4;29855:3;29851:14;29837:12;29749:117;;;29673:199;29949:4;29942:5;29938:16;29932:23;29961:174;30128:5;30123:3;30119:15;30105:12;29961:174;;;29882:259;30214:4;30207:5;30203:16;30197:23;30267:3;30261:4;30257:14;30249:5;30244:3;30240:15;30233:39;30287:147;30429:4;30415:12;30287:147;;30542:2205;30759:22;;30542:2205;;30691:5;30682:15;;;30787:62;30686:3;30759:22;30787:62;;;30712:143;30930:4;30923:5;30919:16;30913:23;30942:61;30997:4;30992:3;30988:14;30974:12;30942:61;;;30865:144;31088:4;31081:5;31077:16;31071:23;31100:147;31241:4;31236:3;31232:14;31218:12;31100:147;;;31019:234;31326:4;31319:5;31315:16;31309:23;31338:61;31393:4;31388:3;31384:14;31370:12;31338:61;;;31263:142;31479:4;31472:5;31468:16;31462:23;31531:3;31525:4;31521:14;31514:4;31509:3;31505:14;31498:38;31551:107;31653:4;31639:12;31551:107;;;31543:115;;31415:255;31745:4;31738:5;31734:16;31728:23;31798:3;31792:4;31788:14;31780:5;31775:3;31771:15;31764:39;31818:107;31920:4;31906:12;31818:107;;;31810:115;;31680:257;32015:4;32008:5;32004:16;31998:23;32027:166;32186:5;32181:3;32177:15;32163:12;32027:166;;;31947:252;32272:4;32265:5;32261:16;32255:23;32284:106;32383:5;32378:3;32374:15;32360:12;32284:106;;;32209:187;32476:5;32469;32465:17;32459:24;32489:64;32546:5;32541:3;32537:15;32523:12;32489:64;;;32406:153;32638:5;32631;32627:17;32621:24;32651:64;32708:5;32703:3;32699:15;32685:12;32651:64;;;-1:-1;32738:4;30664:2083;-1:-1;;;30664:2083;33580:97;33649:22;33665:5;33649:22;;33684:213;33802:2;33787:18;;33816:71;33791:9;33860:6;33816:71;;33904:229;34030:2;34015:18;;34044:79;34019:9;34096:6;34044:79;;34140:467;34330:2;34315:18;;34344:79;34319:9;34396:6;34344:79;;;34434:72;34502:2;34491:9;34487:18;34478:6;34434:72;;;34517:80;34593:2;34582:9;34578:18;34569:6;34517:80;;34614:324;34760:2;34745:18;;34774:71;34749:9;34818:6;34774:71;;;34856:72;34924:2;34913:9;34909:18;34900:6;34856:72;;;34731:207;;;;;;34945:201;35057:2;35042:18;;35071:65;35046:9;35109:6;35071:65;;35153:213;35271:2;35256:18;;35285:71;35260:9;35329:6;35285:71;;35373:451;35555:2;35540:18;;35569:71;35544:9;35613:6;35569:71;;;35651:72;35719:2;35708:9;35704:18;35695:6;35651:72;;;35734:80;35810:2;35799:9;35795:18;35786:6;35734:80;;35831:257;35971:2;35956:18;;35985:93;35960:9;36051:6;35985:93;;36095:412;36285:2;36270:18;;36299:93;36274:9;36365:6;36299:93;;;36403:94;36493:2;36482:9;36478:18;36469:6;36403:94;;38617:407;38808:2;38822:47;;;38793:18;;38883:131;38793:18;38883:131;;39031:407;39222:2;39236:47;;;39207:18;;39297:131;39207:18;39297:131;;39445:357;39611:2;39625:47;;;39596:18;;39686:106;39596:18;39778:6;39686:106;;39809:256;39871:2;39865:9;39897:17;;;-1:-1;;;;;39957:34;;39993:22;;;39954:62;39951:2;;;40029:1;40026;40019:12;39951:2;40045;40038:22;39849:216;;-1:-1;39849:216;40072:327;;-1:-1;;;;;40246:6;40243:30;40240:2;;;40286:1;40283;40276:12;40240:2;-1:-1;40321:4;40309:17;;;40374:15;;40177:222;40406:174;40553:4;40544:14;;40501:79;40587:160;40713:12;;40684:63;40893:195;41028:19;;;41077:4;41068:14;;41021:67;41268:91;;41330:24;41348:5;41330:24;;41472:85;41538:13;41531:21;;41514:43;41564:72;41626:5;41609:27;41643:113;;41727:24;41745:5;41727:24;;42132:144;42213:5;42219:52;42213:5;42219:52;;;42196:80;;;;42361:121;-1:-1;;;;;42423:54;;42406:76;42568:81;42639:4;42628:16;;42611:38;42656:129;;42743:37;42774:5;42743:37;;44039:144;;44135:43;44172:5;44135:43;;44190:116;;44277:24;44295:5;44277:24;;44556:110;44644:1;44637:5;44634:12;44624:2;;44650:9;44624:2;44618:48;;44673:117;44742:24;44760:5;44742:24;;;44735:5;44732:35;44722:2;;44781:1;44778;44771:12;44797:111;44863:21;44878:5;44863:21;;44915:117;44984:24;45002:5;44984:24;;45039:161;45130:46;45170:5;45130:46;;45713:113;45801:1;45794:5;45791:12;45781:2;;45817:1;45814;45807:12;46079:113;46146:22;46162:5;46146:22;",
  "source": "/*\n * Hubii Nahmii\n *\n * Compliant with the Hubii Nahmii specification v0.12.\n *\n * Copyright (C) 2017-2018 Hubii AS\n */\n\npragma solidity >=0.4.25 <0.6.0;\npragma experimental ABIEncoderV2;\n\nimport {Ownable} from \"./Ownable.sol\";\nimport {FraudChallengable} from \"./FraudChallengable.sol\";\nimport {ConfigurableOperational} from \"./ConfigurableOperational.sol\";\nimport {ValidatableV2} from \"./ValidatableV2.sol\";\nimport {SecurityBondable} from \"./SecurityBondable.sol\";\nimport {TradeTypesLib} from \"./TradeTypesLib.sol\";\n\n/**\n * @title FraudChallengeByDoubleSpentOrders\n * @notice Where driips are challenged wrt fraud by double spent orders\n */\ncontract FraudChallengeByDoubleSpentOrders is Ownable, FraudChallengable, ConfigurableOperational, ValidatableV2,\nSecurityBondable {\n    //\n    // Events\n    // -----------------------------------------------------------------------------------------------------------------\n    event ChallengeByDoubleSpentOrdersEvent(bytes32 tradeHash1, bytes32 tradeHash2, address challenger);\n\n    //\n    // Constructor\n    // -----------------------------------------------------------------------------------------------------------------\n    constructor(address deployer) Ownable(deployer) public {\n    }\n\n    //\n    // Functions\n    // -----------------------------------------------------------------------------------------------------------------\n    /// @notice Submit two trade candidates in continuous Fraud Challenge (FC) to be tested for\n    /// trade order double spenditure\n    /// @param trade1 First trade with double spent order\n    /// @param trade2 Last trade with double spent order\n    function challenge(\n        TradeTypesLib.Trade memory trade1,\n        TradeTypesLib.Trade memory trade2\n    )\n    public\n    onlyOperationalModeNormal\n    onlySealedTrade(trade1)\n    onlySealedTrade(trade2)\n    {\n        require(trade1.seal.hash != trade2.seal.hash);\n\n        // Gauge double expenditure in both sides of the trade\n        bool doubleSpentBuyOrder = trade1.buyer.order.hashes.operator == trade2.buyer.order.hashes.operator;\n        bool doubleSpentSellOrder = trade1.seller.order.hashes.operator == trade2.seller.order.hashes.operator;\n\n        // Require existence of fraud signal\n        require(doubleSpentBuyOrder || doubleSpentSellOrder);\n\n        // Toggle operational mode exit\n        configuration.setOperationalModeExit();\n\n        // Tag trades (hashes) as fraudulent\n        fraudChallenge.addFraudulentTradeHash(trade1.seal.hash);\n        fraudChallenge.addFraudulentTradeHash(trade2.seal.hash);\n\n        // Reward stake fraction\n        securityBond.rewardFractional(msg.sender, configuration.fraudStakeFraction(), 0);\n\n        // Tag wallet(s) as double spender(s)\n        if (doubleSpentBuyOrder)\n            fraudChallenge.addDoubleSpenderWallet(trade2.buyer.wallet);\n        if (doubleSpentSellOrder)\n            fraudChallenge.addDoubleSpenderWallet(trade2.seller.wallet);\n\n        // Emit event\n        emit ChallengeByDoubleSpentOrdersEvent(\n            trade1.seal.hash, trade2.seal.hash, msg.sender\n        );\n    }\n}",
  "sourcePath": "/opt/buildagent/work/855e104608380c36/contracts/FraudChallengeByDoubleSpentOrders.sol",
  "ast": {
    "absolutePath": "/opt/buildagent/work/855e104608380c36/contracts/FraudChallengeByDoubleSpentOrders.sol",
    "exportedSymbols": {
      "FraudChallengeByDoubleSpentOrders": [
        19462
      ]
    },
    "id": 19463,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 19298,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".25",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "122:32:39"
      },
      {
        "id": 19299,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "155:33:39"
      },
      {
        "absolutePath": "/opt/buildagent/work/855e104608380c36/contracts/Ownable.sol",
        "file": "./Ownable.sol",
        "id": 19301,
        "nodeType": "ImportDirective",
        "scope": 19463,
        "sourceUnit": 30686,
        "src": "190:38:39",
        "symbolAliases": [
          {
            "foreign": 19300,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/opt/buildagent/work/855e104608380c36/contracts/FraudChallengable.sol",
        "file": "./FraudChallengable.sol",
        "id": 19303,
        "nodeType": "ImportDirective",
        "scope": 19463,
        "sourceUnit": 19009,
        "src": "229:58:39",
        "symbolAliases": [
          {
            "foreign": 19302,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/opt/buildagent/work/855e104608380c36/contracts/ConfigurableOperational.sol",
        "file": "./ConfigurableOperational.sol",
        "id": 19305,
        "nodeType": "ImportDirective",
        "scope": 19463,
        "sourceUnit": 5969,
        "src": "288:70:39",
        "symbolAliases": [
          {
            "foreign": 19304,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/opt/buildagent/work/855e104608380c36/contracts/ValidatableV2.sol",
        "file": "./ValidatableV2.sol",
        "id": 19307,
        "nodeType": "ImportDirective",
        "scope": 19463,
        "sourceUnit": 42423,
        "src": "359:50:39",
        "symbolAliases": [
          {
            "foreign": 19306,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/opt/buildagent/work/855e104608380c36/contracts/SecurityBondable.sol",
        "file": "./SecurityBondable.sol",
        "id": 19309,
        "nodeType": "ImportDirective",
        "scope": 19463,
        "sourceUnit": 37078,
        "src": "410:56:39",
        "symbolAliases": [
          {
            "foreign": 19308,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/opt/buildagent/work/855e104608380c36/contracts/TradeTypesLib.sol",
        "file": "./TradeTypesLib.sol",
        "id": 19311,
        "nodeType": "ImportDirective",
        "scope": 19463,
        "sourceUnit": 40380,
        "src": "467:50:39",
        "symbolAliases": [
          {
            "foreign": 19310,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 19312,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 30685,
              "src": "689:7:39",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$30685",
                "typeString": "contract Ownable"
              }
            },
            "id": 19313,
            "nodeType": "InheritanceSpecifier",
            "src": "689:7:39"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 19314,
              "name": "FraudChallengable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 19008,
              "src": "698:17:39",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FraudChallengable_$19008",
                "typeString": "contract FraudChallengable"
              }
            },
            "id": 19315,
            "nodeType": "InheritanceSpecifier",
            "src": "698:17:39"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 19316,
              "name": "ConfigurableOperational",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5968,
              "src": "717:23:39",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ConfigurableOperational_$5968",
                "typeString": "contract ConfigurableOperational"
              }
            },
            "id": 19317,
            "nodeType": "InheritanceSpecifier",
            "src": "717:23:39"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 19318,
              "name": "ValidatableV2",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 42422,
              "src": "742:13:39",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ValidatableV2_$42422",
                "typeString": "contract ValidatableV2"
              }
            },
            "id": 19319,
            "nodeType": "InheritanceSpecifier",
            "src": "742:13:39"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 19320,
              "name": "SecurityBondable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 37077,
              "src": "757:16:39",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SecurityBondable_$37077",
                "typeString": "contract SecurityBondable"
              }
            },
            "id": 19321,
            "nodeType": "InheritanceSpecifier",
            "src": "757:16:39"
          }
        ],
        "contractDependencies": [
          5950,
          5968,
          19008,
          23037,
          30685,
          37077,
          37143,
          42422
        ],
        "contractKind": "contract",
        "documentation": "@title FraudChallengeByDoubleSpentOrders\n@notice Where driips are challenged wrt fraud by double spent orders",
        "fullyImplemented": true,
        "id": 19462,
        "linearizedBaseContracts": [
          19462,
          37077,
          42422,
          5968,
          5950,
          19008,
          30685,
          37143,
          23037
        ],
        "name": "FraudChallengeByDoubleSpentOrders",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": null,
            "id": 19329,
            "name": "ChallengeByDoubleSpentOrdersEvent",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 19328,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19323,
                  "indexed": false,
                  "name": "tradeHash1",
                  "nodeType": "VariableDeclaration",
                  "scope": 19329,
                  "src": "962:18:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 19322,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "962:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19325,
                  "indexed": false,
                  "name": "tradeHash2",
                  "nodeType": "VariableDeclaration",
                  "scope": 19329,
                  "src": "982:18:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 19324,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "982:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19327,
                  "indexed": false,
                  "name": "challenger",
                  "nodeType": "VariableDeclaration",
                  "scope": 19329,
                  "src": "1002:18:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19326,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1002:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "961:60:39"
            },
            "src": "922:100:39"
          },
          {
            "body": {
              "id": 19337,
              "nodeType": "Block",
              "src": "1230:7:39",
              "statements": []
            },
            "documentation": null,
            "id": 19338,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 19334,
                    "name": "deployer",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 19331,
                    "src": "1213:8:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 19335,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 19333,
                  "name": "Ownable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 30685,
                  "src": "1205:7:39",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Ownable_$30685_$",
                    "typeString": "type(contract Ownable)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1205:17:39"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19332,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19331,
                  "name": "deployer",
                  "nodeType": "VariableDeclaration",
                  "scope": 19338,
                  "src": "1187:16:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19330,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1187:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1186:18:39"
            },
            "returnParameters": {
              "id": 19336,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1230:0:39"
            },
            "scope": 19462,
            "src": "1175:62:39",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 19460,
              "nodeType": "Block",
              "src": "1849:1244:39",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 19360,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 19354,
                              "name": "trade1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 19340,
                              "src": "1867:6:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                                "typeString": "struct TradeTypesLib.Trade memory"
                              }
                            },
                            "id": 19355,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "seal",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 40357,
                            "src": "1867:11:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Seal_$23176_memory",
                              "typeString": "struct NahmiiTypesLib.Seal memory"
                            }
                          },
                          "id": 19356,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "hash",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 23173,
                          "src": "1867:16:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 19357,
                              "name": "trade2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 19342,
                              "src": "1887:6:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                                "typeString": "struct TradeTypesLib.Trade memory"
                              }
                            },
                            "id": 19358,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "seal",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 40357,
                            "src": "1887:11:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Seal_$23176_memory",
                              "typeString": "struct NahmiiTypesLib.Seal memory"
                            }
                          },
                          "id": 19359,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "hash",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 23173,
                          "src": "1887:16:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "1867:36:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 19353,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        57372,
                        57373
                      ],
                      "referencedDeclaration": 57372,
                      "src": "1859:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 19361,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1859:45:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19362,
                  "nodeType": "ExpressionStatement",
                  "src": "1859:45:39"
                },
                {
                  "assignments": [
                    19364
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 19364,
                      "name": "doubleSpentBuyOrder",
                      "nodeType": "VariableDeclaration",
                      "scope": 19460,
                      "src": "1978:24:39",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 19363,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1978:4:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 19376,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 19375,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 19365,
                              "name": "trade1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 19340,
                              "src": "2005:6:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                                "typeString": "struct TradeTypesLib.Trade memory"
                              }
                            },
                            "id": 19366,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "buyer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 40351,
                            "src": "2005:12:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeParty_$40341_memory",
                              "typeString": "struct TradeTypesLib.TradeParty memory"
                            }
                          },
                          "id": 19367,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "order",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 40336,
                          "src": "2005:18:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeOrder_$40326_memory",
                            "typeString": "struct TradeTypesLib.TradeOrder memory"
                          }
                        },
                        "id": 19368,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "hashes",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 40323,
                        "src": "2005:25:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_WalletOperatorHashes_$23164_memory",
                          "typeString": "struct NahmiiTypesLib.WalletOperatorHashes memory"
                        }
                      },
                      "id": 19369,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "operator",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23163,
                      "src": "2005:34:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 19370,
                              "name": "trade2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 19342,
                              "src": "2043:6:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                                "typeString": "struct TradeTypesLib.Trade memory"
                              }
                            },
                            "id": 19371,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "buyer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 40351,
                            "src": "2043:12:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeParty_$40341_memory",
                              "typeString": "struct TradeTypesLib.TradeParty memory"
                            }
                          },
                          "id": 19372,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "order",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 40336,
                          "src": "2043:18:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeOrder_$40326_memory",
                            "typeString": "struct TradeTypesLib.TradeOrder memory"
                          }
                        },
                        "id": 19373,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "hashes",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 40323,
                        "src": "2043:25:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_WalletOperatorHashes_$23164_memory",
                          "typeString": "struct NahmiiTypesLib.WalletOperatorHashes memory"
                        }
                      },
                      "id": 19374,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "operator",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23163,
                      "src": "2043:34:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "2005:72:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1978:99:39"
                },
                {
                  "assignments": [
                    19378
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 19378,
                      "name": "doubleSpentSellOrder",
                      "nodeType": "VariableDeclaration",
                      "scope": 19460,
                      "src": "2087:25:39",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 19377,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2087:4:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 19390,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 19389,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 19379,
                              "name": "trade1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 19340,
                              "src": "2115:6:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                                "typeString": "struct TradeTypesLib.Trade memory"
                              }
                            },
                            "id": 19380,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "seller",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 40353,
                            "src": "2115:13:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeParty_$40341_memory",
                              "typeString": "struct TradeTypesLib.TradeParty memory"
                            }
                          },
                          "id": 19381,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "order",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 40336,
                          "src": "2115:19:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeOrder_$40326_memory",
                            "typeString": "struct TradeTypesLib.TradeOrder memory"
                          }
                        },
                        "id": 19382,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "hashes",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 40323,
                        "src": "2115:26:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_WalletOperatorHashes_$23164_memory",
                          "typeString": "struct NahmiiTypesLib.WalletOperatorHashes memory"
                        }
                      },
                      "id": 19383,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "operator",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23163,
                      "src": "2115:35:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 19384,
                              "name": "trade2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 19342,
                              "src": "2154:6:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                                "typeString": "struct TradeTypesLib.Trade memory"
                              }
                            },
                            "id": 19385,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "seller",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 40353,
                            "src": "2154:13:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeParty_$40341_memory",
                              "typeString": "struct TradeTypesLib.TradeParty memory"
                            }
                          },
                          "id": 19386,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "order",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 40336,
                          "src": "2154:19:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeOrder_$40326_memory",
                            "typeString": "struct TradeTypesLib.TradeOrder memory"
                          }
                        },
                        "id": 19387,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "hashes",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 40323,
                        "src": "2154:26:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_WalletOperatorHashes_$23164_memory",
                          "typeString": "struct NahmiiTypesLib.WalletOperatorHashes memory"
                        }
                      },
                      "id": 19388,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "operator",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23163,
                      "src": "2154:35:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "2115:74:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2087:102:39"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 19394,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 19392,
                          "name": "doubleSpentBuyOrder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19364,
                          "src": "2253:19:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 19393,
                          "name": "doubleSpentSellOrder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19378,
                          "src": "2276:20:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2253:43:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 19391,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        57372,
                        57373
                      ],
                      "referencedDeclaration": 57372,
                      "src": "2245:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 19395,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2245:52:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19396,
                  "nodeType": "ExpressionStatement",
                  "src": "2245:52:39"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 19397,
                        "name": "configuration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5894,
                        "src": "2348:13:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Configuration_$7342",
                          "typeString": "contract Configuration"
                        }
                      },
                      "id": 19399,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setOperationalModeExit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6265,
                      "src": "2348:36:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 19400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2348:38:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19401,
                  "nodeType": "ExpressionStatement",
                  "src": "2348:38:39"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 19405,
                            "name": "trade1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19340,
                            "src": "2480:6:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                              "typeString": "struct TradeTypesLib.Trade memory"
                            }
                          },
                          "id": 19406,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "seal",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 40357,
                          "src": "2480:11:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Seal_$23176_memory",
                            "typeString": "struct NahmiiTypesLib.Seal memory"
                          }
                        },
                        "id": 19407,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "hash",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 23173,
                        "src": "2480:16:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 19402,
                        "name": "fraudChallenge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18952,
                        "src": "2442:14:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FraudChallenge_$19296",
                          "typeString": "contract FraudChallenge"
                        }
                      },
                      "id": 19404,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addFraudulentTradeHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19243,
                      "src": "2442:37:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 19408,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2442:55:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19409,
                  "nodeType": "ExpressionStatement",
                  "src": "2442:55:39"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 19413,
                            "name": "trade2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19342,
                            "src": "2545:6:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                              "typeString": "struct TradeTypesLib.Trade memory"
                            }
                          },
                          "id": 19414,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "seal",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 40357,
                          "src": "2545:11:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Seal_$23176_memory",
                            "typeString": "struct NahmiiTypesLib.Seal memory"
                          }
                        },
                        "id": 19415,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "hash",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 23173,
                        "src": "2545:16:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 19410,
                        "name": "fraudChallenge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18952,
                        "src": "2507:14:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FraudChallenge_$19296",
                          "typeString": "contract FraudChallenge"
                        }
                      },
                      "id": 19412,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addFraudulentTradeHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19243,
                      "src": "2507:37:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 19416,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2507:55:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19417,
                  "nodeType": "ExpressionStatement",
                  "src": "2507:55:39"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 19421,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 57369,
                          "src": "2636:3:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 19422,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2636:10:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 19423,
                            "name": "configuration",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5894,
                            "src": "2648:13:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Configuration_$7342",
                              "typeString": "contract Configuration"
                            }
                          },
                          "id": 19424,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "fraudStakeFraction",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7107,
                          "src": "2648:32:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 19425,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2648:34:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 19426,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2684:1:39",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 19418,
                        "name": "securityBond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37021,
                        "src": "2606:12:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SecurityBond_$37011",
                          "typeString": "contract SecurityBond"
                        }
                      },
                      "id": 19420,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "rewardFractional",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36388,
                      "src": "2606:29:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256) external"
                      }
                    },
                    "id": 19427,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2606:80:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19428,
                  "nodeType": "ExpressionStatement",
                  "src": "2606:80:39"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 19429,
                    "name": "doubleSpentBuyOrder",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 19364,
                    "src": "2747:19:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 19438,
                  "nodeType": "IfStatement",
                  "src": "2743:95:39",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 19433,
                              "name": "trade2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 19342,
                              "src": "2818:6:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                                "typeString": "struct TradeTypesLib.Trade memory"
                              }
                            },
                            "id": 19434,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "buyer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 40351,
                            "src": "2818:12:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeParty_$40341_memory",
                              "typeString": "struct TradeTypesLib.TradeParty memory"
                            }
                          },
                          "id": 19435,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "wallet",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 40330,
                          "src": "2818:19:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 19430,
                          "name": "fraudChallenge",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18952,
                          "src": "2780:14:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FraudChallenge_$19296",
                            "typeString": "contract FraudChallenge"
                          }
                        },
                        "id": 19432,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "addDoubleSpenderWallet",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 19139,
                        "src": "2780:37:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                          "typeString": "function (address) external"
                        }
                      },
                      "id": 19436,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2780:58:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 19437,
                    "nodeType": "ExpressionStatement",
                    "src": "2780:58:39"
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 19439,
                    "name": "doubleSpentSellOrder",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 19378,
                    "src": "2852:20:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 19448,
                  "nodeType": "IfStatement",
                  "src": "2848:97:39",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 19443,
                              "name": "trade2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 19342,
                              "src": "2924:6:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                                "typeString": "struct TradeTypesLib.Trade memory"
                              }
                            },
                            "id": 19444,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "seller",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 40353,
                            "src": "2924:13:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeParty_$40341_memory",
                              "typeString": "struct TradeTypesLib.TradeParty memory"
                            }
                          },
                          "id": 19445,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "wallet",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 40330,
                          "src": "2924:20:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 19440,
                          "name": "fraudChallenge",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18952,
                          "src": "2886:14:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FraudChallenge_$19296",
                            "typeString": "contract FraudChallenge"
                          }
                        },
                        "id": 19442,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "addDoubleSpenderWallet",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 19139,
                        "src": "2886:37:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                          "typeString": "function (address) external"
                        }
                      },
                      "id": 19446,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2886:59:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 19447,
                    "nodeType": "ExpressionStatement",
                    "src": "2886:59:39"
                  }
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 19450,
                            "name": "trade1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19340,
                            "src": "3030:6:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                              "typeString": "struct TradeTypesLib.Trade memory"
                            }
                          },
                          "id": 19451,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "seal",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 40357,
                          "src": "3030:11:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Seal_$23176_memory",
                            "typeString": "struct NahmiiTypesLib.Seal memory"
                          }
                        },
                        "id": 19452,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "hash",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 23173,
                        "src": "3030:16:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 19453,
                            "name": "trade2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19342,
                            "src": "3048:6:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                              "typeString": "struct TradeTypesLib.Trade memory"
                            }
                          },
                          "id": 19454,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "seal",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 40357,
                          "src": "3048:11:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Seal_$23176_memory",
                            "typeString": "struct NahmiiTypesLib.Seal memory"
                          }
                        },
                        "id": 19455,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "hash",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 23173,
                        "src": "3048:16:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 19456,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 57369,
                          "src": "3066:3:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 19457,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3066:10:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 19449,
                      "name": "ChallengeByDoubleSpentOrdersEvent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19329,
                      "src": "2983:33:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,bytes32,address)"
                      }
                    },
                    "id": 19458,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2983:103:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19459,
                  "nodeType": "EmitStatement",
                  "src": "2978:108:39"
                }
              ]
            },
            "documentation": "@notice Submit two trade candidates in continuous Fraud Challenge (FC) to be tested for\n trade order double spenditure\n @param trade1 First trade with double spent order\n @param trade2 Last trade with double spent order",
            "id": 19461,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 19345,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 19344,
                  "name": "onlyOperationalModeNormal",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5967,
                  "src": "1763:25:39",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1763:25:39"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 19347,
                    "name": "trade1",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 19340,
                    "src": "1809:6:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                      "typeString": "struct TradeTypesLib.Trade memory"
                    }
                  }
                ],
                "id": 19348,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 19346,
                  "name": "onlySealedTrade",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 42342,
                  "src": "1793:15:39",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_struct$_Trade_$40362_memory_ptr_$",
                    "typeString": "modifier (struct TradeTypesLib.Trade memory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1793:23:39"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 19350,
                    "name": "trade2",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 19342,
                    "src": "1837:6:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                      "typeString": "struct TradeTypesLib.Trade memory"
                    }
                  }
                ],
                "id": 19351,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 19349,
                  "name": "onlySealedTrade",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 42342,
                  "src": "1821:15:39",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_struct$_Trade_$40362_memory_ptr_$",
                    "typeString": "modifier (struct TradeTypesLib.Trade memory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1821:23:39"
              }
            ],
            "name": "challenge",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19343,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19340,
                  "name": "trade1",
                  "nodeType": "VariableDeclaration",
                  "scope": 19461,
                  "src": "1665:33:39",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                    "typeString": "struct TradeTypesLib.Trade"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 19339,
                    "name": "TradeTypesLib.Trade",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 40362,
                    "src": "1665:19:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$40362_storage_ptr",
                      "typeString": "struct TradeTypesLib.Trade"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19342,
                  "name": "trade2",
                  "nodeType": "VariableDeclaration",
                  "scope": 19461,
                  "src": "1708:33:39",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                    "typeString": "struct TradeTypesLib.Trade"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 19341,
                    "name": "TradeTypesLib.Trade",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 40362,
                    "src": "1708:19:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$40362_storage_ptr",
                      "typeString": "struct TradeTypesLib.Trade"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1655:92:39"
            },
            "returnParameters": {
              "id": 19352,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1849:0:39"
            },
            "scope": 19462,
            "src": "1637:1456:39",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 19463,
        "src": "643:2452:39"
      }
    ],
    "src": "122:2973:39"
  },
  "legacyAST": {
    "absolutePath": "/opt/buildagent/work/855e104608380c36/contracts/FraudChallengeByDoubleSpentOrders.sol",
    "exportedSymbols": {
      "FraudChallengeByDoubleSpentOrders": [
        19462
      ]
    },
    "id": 19463,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 19298,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".25",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "122:32:39"
      },
      {
        "id": 19299,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "155:33:39"
      },
      {
        "absolutePath": "/opt/buildagent/work/855e104608380c36/contracts/Ownable.sol",
        "file": "./Ownable.sol",
        "id": 19301,
        "nodeType": "ImportDirective",
        "scope": 19463,
        "sourceUnit": 30686,
        "src": "190:38:39",
        "symbolAliases": [
          {
            "foreign": 19300,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/opt/buildagent/work/855e104608380c36/contracts/FraudChallengable.sol",
        "file": "./FraudChallengable.sol",
        "id": 19303,
        "nodeType": "ImportDirective",
        "scope": 19463,
        "sourceUnit": 19009,
        "src": "229:58:39",
        "symbolAliases": [
          {
            "foreign": 19302,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/opt/buildagent/work/855e104608380c36/contracts/ConfigurableOperational.sol",
        "file": "./ConfigurableOperational.sol",
        "id": 19305,
        "nodeType": "ImportDirective",
        "scope": 19463,
        "sourceUnit": 5969,
        "src": "288:70:39",
        "symbolAliases": [
          {
            "foreign": 19304,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/opt/buildagent/work/855e104608380c36/contracts/ValidatableV2.sol",
        "file": "./ValidatableV2.sol",
        "id": 19307,
        "nodeType": "ImportDirective",
        "scope": 19463,
        "sourceUnit": 42423,
        "src": "359:50:39",
        "symbolAliases": [
          {
            "foreign": 19306,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/opt/buildagent/work/855e104608380c36/contracts/SecurityBondable.sol",
        "file": "./SecurityBondable.sol",
        "id": 19309,
        "nodeType": "ImportDirective",
        "scope": 19463,
        "sourceUnit": 37078,
        "src": "410:56:39",
        "symbolAliases": [
          {
            "foreign": 19308,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/opt/buildagent/work/855e104608380c36/contracts/TradeTypesLib.sol",
        "file": "./TradeTypesLib.sol",
        "id": 19311,
        "nodeType": "ImportDirective",
        "scope": 19463,
        "sourceUnit": 40380,
        "src": "467:50:39",
        "symbolAliases": [
          {
            "foreign": 19310,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 19312,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 30685,
              "src": "689:7:39",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$30685",
                "typeString": "contract Ownable"
              }
            },
            "id": 19313,
            "nodeType": "InheritanceSpecifier",
            "src": "689:7:39"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 19314,
              "name": "FraudChallengable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 19008,
              "src": "698:17:39",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FraudChallengable_$19008",
                "typeString": "contract FraudChallengable"
              }
            },
            "id": 19315,
            "nodeType": "InheritanceSpecifier",
            "src": "698:17:39"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 19316,
              "name": "ConfigurableOperational",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5968,
              "src": "717:23:39",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ConfigurableOperational_$5968",
                "typeString": "contract ConfigurableOperational"
              }
            },
            "id": 19317,
            "nodeType": "InheritanceSpecifier",
            "src": "717:23:39"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 19318,
              "name": "ValidatableV2",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 42422,
              "src": "742:13:39",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ValidatableV2_$42422",
                "typeString": "contract ValidatableV2"
              }
            },
            "id": 19319,
            "nodeType": "InheritanceSpecifier",
            "src": "742:13:39"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 19320,
              "name": "SecurityBondable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 37077,
              "src": "757:16:39",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SecurityBondable_$37077",
                "typeString": "contract SecurityBondable"
              }
            },
            "id": 19321,
            "nodeType": "InheritanceSpecifier",
            "src": "757:16:39"
          }
        ],
        "contractDependencies": [
          5950,
          5968,
          19008,
          23037,
          30685,
          37077,
          37143,
          42422
        ],
        "contractKind": "contract",
        "documentation": "@title FraudChallengeByDoubleSpentOrders\n@notice Where driips are challenged wrt fraud by double spent orders",
        "fullyImplemented": true,
        "id": 19462,
        "linearizedBaseContracts": [
          19462,
          37077,
          42422,
          5968,
          5950,
          19008,
          30685,
          37143,
          23037
        ],
        "name": "FraudChallengeByDoubleSpentOrders",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": null,
            "id": 19329,
            "name": "ChallengeByDoubleSpentOrdersEvent",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 19328,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19323,
                  "indexed": false,
                  "name": "tradeHash1",
                  "nodeType": "VariableDeclaration",
                  "scope": 19329,
                  "src": "962:18:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 19322,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "962:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19325,
                  "indexed": false,
                  "name": "tradeHash2",
                  "nodeType": "VariableDeclaration",
                  "scope": 19329,
                  "src": "982:18:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 19324,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "982:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19327,
                  "indexed": false,
                  "name": "challenger",
                  "nodeType": "VariableDeclaration",
                  "scope": 19329,
                  "src": "1002:18:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19326,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1002:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "961:60:39"
            },
            "src": "922:100:39"
          },
          {
            "body": {
              "id": 19337,
              "nodeType": "Block",
              "src": "1230:7:39",
              "statements": []
            },
            "documentation": null,
            "id": 19338,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 19334,
                    "name": "deployer",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 19331,
                    "src": "1213:8:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 19335,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 19333,
                  "name": "Ownable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 30685,
                  "src": "1205:7:39",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Ownable_$30685_$",
                    "typeString": "type(contract Ownable)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1205:17:39"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19332,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19331,
                  "name": "deployer",
                  "nodeType": "VariableDeclaration",
                  "scope": 19338,
                  "src": "1187:16:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19330,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1187:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1186:18:39"
            },
            "returnParameters": {
              "id": 19336,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1230:0:39"
            },
            "scope": 19462,
            "src": "1175:62:39",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 19460,
              "nodeType": "Block",
              "src": "1849:1244:39",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 19360,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 19354,
                              "name": "trade1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 19340,
                              "src": "1867:6:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                                "typeString": "struct TradeTypesLib.Trade memory"
                              }
                            },
                            "id": 19355,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "seal",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 40357,
                            "src": "1867:11:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Seal_$23176_memory",
                              "typeString": "struct NahmiiTypesLib.Seal memory"
                            }
                          },
                          "id": 19356,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "hash",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 23173,
                          "src": "1867:16:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 19357,
                              "name": "trade2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 19342,
                              "src": "1887:6:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                                "typeString": "struct TradeTypesLib.Trade memory"
                              }
                            },
                            "id": 19358,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "seal",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 40357,
                            "src": "1887:11:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Seal_$23176_memory",
                              "typeString": "struct NahmiiTypesLib.Seal memory"
                            }
                          },
                          "id": 19359,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "hash",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 23173,
                          "src": "1887:16:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "1867:36:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 19353,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        57372,
                        57373
                      ],
                      "referencedDeclaration": 57372,
                      "src": "1859:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 19361,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1859:45:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19362,
                  "nodeType": "ExpressionStatement",
                  "src": "1859:45:39"
                },
                {
                  "assignments": [
                    19364
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 19364,
                      "name": "doubleSpentBuyOrder",
                      "nodeType": "VariableDeclaration",
                      "scope": 19460,
                      "src": "1978:24:39",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 19363,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1978:4:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 19376,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 19375,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 19365,
                              "name": "trade1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 19340,
                              "src": "2005:6:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                                "typeString": "struct TradeTypesLib.Trade memory"
                              }
                            },
                            "id": 19366,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "buyer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 40351,
                            "src": "2005:12:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeParty_$40341_memory",
                              "typeString": "struct TradeTypesLib.TradeParty memory"
                            }
                          },
                          "id": 19367,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "order",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 40336,
                          "src": "2005:18:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeOrder_$40326_memory",
                            "typeString": "struct TradeTypesLib.TradeOrder memory"
                          }
                        },
                        "id": 19368,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "hashes",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 40323,
                        "src": "2005:25:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_WalletOperatorHashes_$23164_memory",
                          "typeString": "struct NahmiiTypesLib.WalletOperatorHashes memory"
                        }
                      },
                      "id": 19369,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "operator",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23163,
                      "src": "2005:34:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 19370,
                              "name": "trade2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 19342,
                              "src": "2043:6:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                                "typeString": "struct TradeTypesLib.Trade memory"
                              }
                            },
                            "id": 19371,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "buyer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 40351,
                            "src": "2043:12:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeParty_$40341_memory",
                              "typeString": "struct TradeTypesLib.TradeParty memory"
                            }
                          },
                          "id": 19372,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "order",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 40336,
                          "src": "2043:18:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeOrder_$40326_memory",
                            "typeString": "struct TradeTypesLib.TradeOrder memory"
                          }
                        },
                        "id": 19373,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "hashes",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 40323,
                        "src": "2043:25:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_WalletOperatorHashes_$23164_memory",
                          "typeString": "struct NahmiiTypesLib.WalletOperatorHashes memory"
                        }
                      },
                      "id": 19374,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "operator",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23163,
                      "src": "2043:34:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "2005:72:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1978:99:39"
                },
                {
                  "assignments": [
                    19378
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 19378,
                      "name": "doubleSpentSellOrder",
                      "nodeType": "VariableDeclaration",
                      "scope": 19460,
                      "src": "2087:25:39",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 19377,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2087:4:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 19390,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 19389,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 19379,
                              "name": "trade1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 19340,
                              "src": "2115:6:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                                "typeString": "struct TradeTypesLib.Trade memory"
                              }
                            },
                            "id": 19380,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "seller",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 40353,
                            "src": "2115:13:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeParty_$40341_memory",
                              "typeString": "struct TradeTypesLib.TradeParty memory"
                            }
                          },
                          "id": 19381,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "order",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 40336,
                          "src": "2115:19:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeOrder_$40326_memory",
                            "typeString": "struct TradeTypesLib.TradeOrder memory"
                          }
                        },
                        "id": 19382,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "hashes",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 40323,
                        "src": "2115:26:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_WalletOperatorHashes_$23164_memory",
                          "typeString": "struct NahmiiTypesLib.WalletOperatorHashes memory"
                        }
                      },
                      "id": 19383,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "operator",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23163,
                      "src": "2115:35:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 19384,
                              "name": "trade2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 19342,
                              "src": "2154:6:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                                "typeString": "struct TradeTypesLib.Trade memory"
                              }
                            },
                            "id": 19385,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "seller",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 40353,
                            "src": "2154:13:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeParty_$40341_memory",
                              "typeString": "struct TradeTypesLib.TradeParty memory"
                            }
                          },
                          "id": 19386,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "order",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 40336,
                          "src": "2154:19:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeOrder_$40326_memory",
                            "typeString": "struct TradeTypesLib.TradeOrder memory"
                          }
                        },
                        "id": 19387,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "hashes",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 40323,
                        "src": "2154:26:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_WalletOperatorHashes_$23164_memory",
                          "typeString": "struct NahmiiTypesLib.WalletOperatorHashes memory"
                        }
                      },
                      "id": 19388,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "operator",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23163,
                      "src": "2154:35:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "2115:74:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2087:102:39"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 19394,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 19392,
                          "name": "doubleSpentBuyOrder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19364,
                          "src": "2253:19:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 19393,
                          "name": "doubleSpentSellOrder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19378,
                          "src": "2276:20:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2253:43:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 19391,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        57372,
                        57373
                      ],
                      "referencedDeclaration": 57372,
                      "src": "2245:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 19395,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2245:52:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19396,
                  "nodeType": "ExpressionStatement",
                  "src": "2245:52:39"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 19397,
                        "name": "configuration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5894,
                        "src": "2348:13:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Configuration_$7342",
                          "typeString": "contract Configuration"
                        }
                      },
                      "id": 19399,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setOperationalModeExit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6265,
                      "src": "2348:36:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 19400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2348:38:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19401,
                  "nodeType": "ExpressionStatement",
                  "src": "2348:38:39"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 19405,
                            "name": "trade1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19340,
                            "src": "2480:6:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                              "typeString": "struct TradeTypesLib.Trade memory"
                            }
                          },
                          "id": 19406,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "seal",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 40357,
                          "src": "2480:11:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Seal_$23176_memory",
                            "typeString": "struct NahmiiTypesLib.Seal memory"
                          }
                        },
                        "id": 19407,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "hash",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 23173,
                        "src": "2480:16:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 19402,
                        "name": "fraudChallenge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18952,
                        "src": "2442:14:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FraudChallenge_$19296",
                          "typeString": "contract FraudChallenge"
                        }
                      },
                      "id": 19404,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addFraudulentTradeHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19243,
                      "src": "2442:37:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 19408,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2442:55:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19409,
                  "nodeType": "ExpressionStatement",
                  "src": "2442:55:39"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 19413,
                            "name": "trade2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19342,
                            "src": "2545:6:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                              "typeString": "struct TradeTypesLib.Trade memory"
                            }
                          },
                          "id": 19414,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "seal",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 40357,
                          "src": "2545:11:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Seal_$23176_memory",
                            "typeString": "struct NahmiiTypesLib.Seal memory"
                          }
                        },
                        "id": 19415,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "hash",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 23173,
                        "src": "2545:16:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 19410,
                        "name": "fraudChallenge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18952,
                        "src": "2507:14:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FraudChallenge_$19296",
                          "typeString": "contract FraudChallenge"
                        }
                      },
                      "id": 19412,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addFraudulentTradeHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19243,
                      "src": "2507:37:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 19416,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2507:55:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19417,
                  "nodeType": "ExpressionStatement",
                  "src": "2507:55:39"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 19421,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 57369,
                          "src": "2636:3:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 19422,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2636:10:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 19423,
                            "name": "configuration",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5894,
                            "src": "2648:13:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Configuration_$7342",
                              "typeString": "contract Configuration"
                            }
                          },
                          "id": 19424,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "fraudStakeFraction",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7107,
                          "src": "2648:32:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 19425,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2648:34:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 19426,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2684:1:39",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 19418,
                        "name": "securityBond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37021,
                        "src": "2606:12:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SecurityBond_$37011",
                          "typeString": "contract SecurityBond"
                        }
                      },
                      "id": 19420,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "rewardFractional",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36388,
                      "src": "2606:29:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256) external"
                      }
                    },
                    "id": 19427,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2606:80:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19428,
                  "nodeType": "ExpressionStatement",
                  "src": "2606:80:39"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 19429,
                    "name": "doubleSpentBuyOrder",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 19364,
                    "src": "2747:19:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 19438,
                  "nodeType": "IfStatement",
                  "src": "2743:95:39",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 19433,
                              "name": "trade2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 19342,
                              "src": "2818:6:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                                "typeString": "struct TradeTypesLib.Trade memory"
                              }
                            },
                            "id": 19434,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "buyer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 40351,
                            "src": "2818:12:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeParty_$40341_memory",
                              "typeString": "struct TradeTypesLib.TradeParty memory"
                            }
                          },
                          "id": 19435,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "wallet",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 40330,
                          "src": "2818:19:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 19430,
                          "name": "fraudChallenge",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18952,
                          "src": "2780:14:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FraudChallenge_$19296",
                            "typeString": "contract FraudChallenge"
                          }
                        },
                        "id": 19432,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "addDoubleSpenderWallet",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 19139,
                        "src": "2780:37:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                          "typeString": "function (address) external"
                        }
                      },
                      "id": 19436,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2780:58:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 19437,
                    "nodeType": "ExpressionStatement",
                    "src": "2780:58:39"
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 19439,
                    "name": "doubleSpentSellOrder",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 19378,
                    "src": "2852:20:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 19448,
                  "nodeType": "IfStatement",
                  "src": "2848:97:39",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 19443,
                              "name": "trade2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 19342,
                              "src": "2924:6:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                                "typeString": "struct TradeTypesLib.Trade memory"
                              }
                            },
                            "id": 19444,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "seller",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 40353,
                            "src": "2924:13:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeParty_$40341_memory",
                              "typeString": "struct TradeTypesLib.TradeParty memory"
                            }
                          },
                          "id": 19445,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "wallet",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 40330,
                          "src": "2924:20:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 19440,
                          "name": "fraudChallenge",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18952,
                          "src": "2886:14:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FraudChallenge_$19296",
                            "typeString": "contract FraudChallenge"
                          }
                        },
                        "id": 19442,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "addDoubleSpenderWallet",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 19139,
                        "src": "2886:37:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                          "typeString": "function (address) external"
                        }
                      },
                      "id": 19446,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2886:59:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 19447,
                    "nodeType": "ExpressionStatement",
                    "src": "2886:59:39"
                  }
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 19450,
                            "name": "trade1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19340,
                            "src": "3030:6:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                              "typeString": "struct TradeTypesLib.Trade memory"
                            }
                          },
                          "id": 19451,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "seal",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 40357,
                          "src": "3030:11:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Seal_$23176_memory",
                            "typeString": "struct NahmiiTypesLib.Seal memory"
                          }
                        },
                        "id": 19452,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "hash",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 23173,
                        "src": "3030:16:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 19453,
                            "name": "trade2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19342,
                            "src": "3048:6:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                              "typeString": "struct TradeTypesLib.Trade memory"
                            }
                          },
                          "id": 19454,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "seal",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 40357,
                          "src": "3048:11:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Seal_$23176_memory",
                            "typeString": "struct NahmiiTypesLib.Seal memory"
                          }
                        },
                        "id": 19455,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "hash",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 23173,
                        "src": "3048:16:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 19456,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 57369,
                          "src": "3066:3:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 19457,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3066:10:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 19449,
                      "name": "ChallengeByDoubleSpentOrdersEvent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19329,
                      "src": "2983:33:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,bytes32,address)"
                      }
                    },
                    "id": 19458,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2983:103:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19459,
                  "nodeType": "EmitStatement",
                  "src": "2978:108:39"
                }
              ]
            },
            "documentation": "@notice Submit two trade candidates in continuous Fraud Challenge (FC) to be tested for\n trade order double spenditure\n @param trade1 First trade with double spent order\n @param trade2 Last trade with double spent order",
            "id": 19461,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 19345,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 19344,
                  "name": "onlyOperationalModeNormal",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5967,
                  "src": "1763:25:39",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1763:25:39"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 19347,
                    "name": "trade1",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 19340,
                    "src": "1809:6:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                      "typeString": "struct TradeTypesLib.Trade memory"
                    }
                  }
                ],
                "id": 19348,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 19346,
                  "name": "onlySealedTrade",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 42342,
                  "src": "1793:15:39",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_struct$_Trade_$40362_memory_ptr_$",
                    "typeString": "modifier (struct TradeTypesLib.Trade memory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1793:23:39"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 19350,
                    "name": "trade2",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 19342,
                    "src": "1837:6:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                      "typeString": "struct TradeTypesLib.Trade memory"
                    }
                  }
                ],
                "id": 19351,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 19349,
                  "name": "onlySealedTrade",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 42342,
                  "src": "1821:15:39",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_struct$_Trade_$40362_memory_ptr_$",
                    "typeString": "modifier (struct TradeTypesLib.Trade memory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1821:23:39"
              }
            ],
            "name": "challenge",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19343,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19340,
                  "name": "trade1",
                  "nodeType": "VariableDeclaration",
                  "scope": 19461,
                  "src": "1665:33:39",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                    "typeString": "struct TradeTypesLib.Trade"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 19339,
                    "name": "TradeTypesLib.Trade",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 40362,
                    "src": "1665:19:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$40362_storage_ptr",
                      "typeString": "struct TradeTypesLib.Trade"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19342,
                  "name": "trade2",
                  "nodeType": "VariableDeclaration",
                  "scope": 19461,
                  "src": "1708:33:39",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                    "typeString": "struct TradeTypesLib.Trade"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 19341,
                    "name": "TradeTypesLib.Trade",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 40362,
                    "src": "1708:19:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$40362_storage_ptr",
                      "typeString": "struct TradeTypesLib.Trade"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1655:92:39"
            },
            "returnParameters": {
              "id": 19352,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1849:0:39"
            },
            "scope": 19462,
            "src": "1637:1456:39",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 19463,
        "src": "643:2452:39"
      }
    ],
    "src": "122:2973:39"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.12+commit.7709ece9.Emscripten.clang"
  },
  "networks": {
    "3": {
      "events": {
        "0x062cdd5a38a8c97ea6d34cf2f7ead767cd74a89372d592342cc5a78de2d425db": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "bytes32",
              "name": "tradeHash1",
              "type": "bytes32"
            },
            {
              "indexed": false,
              "internalType": "bytes32",
              "name": "tradeHash2",
              "type": "bytes32"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "challenger",
              "type": "address"
            }
          ],
          "name": "ChallengeByDoubleSpentOrdersEvent",
          "type": "event"
        },
        "0xd5a2a04a775c741c2ca0dc46ea7ce4835190e1aaf1ca018def0e82568ec33616": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "wallet",
              "type": "address"
            }
          ],
          "name": "SelfDestructionDisabledEvent",
          "type": "event"
        },
        "0x634f61bf00e14adedce330c80c2823e16e184f189ebe853e1ddecc4a268477ff": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "contract Configuration",
              "name": "oldConfiguration",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "contract Configuration",
              "name": "newConfiguration",
              "type": "address"
            }
          ],
          "name": "SetConfigurationEvent",
          "type": "event"
        },
        "0x977e5fa58e458501775e0008d275006294c5249e3c08d1d0e3a9f3acad14f6e4": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "oldDeployer",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "newDeployer",
              "type": "address"
            }
          ],
          "name": "SetDeployerEvent",
          "type": "event"
        },
        "0x07998fa7be97abe2427246ae4688298c89d6196bbffdf0997b9495a8d27bc673": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "contract FraudChallenge",
              "name": "oldFraudChallenge",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "contract FraudChallenge",
              "name": "newFraudChallenge",
              "type": "address"
            }
          ],
          "name": "SetFraudChallengeEvent",
          "type": "event"
        },
        "0x9f611b789425d0d5b90b920f1b2852907dd865c80074a30b1629aaa041d1812c": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "oldOperator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "newOperator",
              "type": "address"
            }
          ],
          "name": "SetOperatorEvent",
          "type": "event"
        },
        "0xc9f3f00c1760fe26985aeacb814a21c56ea289d680562e89b249681b08c30382": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "contract SecurityBond",
              "name": "oldSecurityBond",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "contract SecurityBond",
              "name": "newSecurityBond",
              "type": "address"
            }
          ],
          "name": "SetSecurityBondEvent",
          "type": "event"
        },
        "0x1882af944a16549c3d4f60e3cd26f158b0c7aac3222cf32971fc21375ce05f60": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "contract ValidatorV2",
              "name": "oldValidator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "contract ValidatorV2",
              "name": "newValidator",
              "type": "address"
            }
          ],
          "name": "SetValidatorEvent",
          "type": "event"
        },
        "0x787a5d936e74f4b564b9153575886059829c78cd9927b1be5e0d976b317ef736": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "wallet",
              "type": "address"
            }
          ],
          "name": "TriggerSelfDestructionEvent",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x2e82fa203032f905caf28d7293f5e74932e8885a",
      "transactionHash": "0x1552642e573a80c43e21a6725334fe0ae09f30eea913d6310a3a47952d7657b7"
    }
  },
  "schemaVersion": "2.0.3",
  "updatedAt": "2019-10-23T00:21:40.763Z"
}