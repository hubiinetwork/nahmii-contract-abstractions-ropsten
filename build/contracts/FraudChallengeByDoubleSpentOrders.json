{
  "contractName": "FraudChallengeByDoubleSpentOrders",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "newFraudChallenge",
          "type": "address"
        }
      ],
      "name": "setFraudChallenge",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newValidator",
          "type": "address"
        }
      ],
      "name": "setValidator",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "triggerSelfDestruction",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "selfDestructionDisabled",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "validator",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "fraudChallenge",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "destructor",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "operator",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newConfiguration",
          "type": "address"
        }
      ],
      "name": "setConfiguration",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newSecurityBond",
          "type": "address"
        }
      ],
      "name": "setSecurityBond",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "securityBond",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "configuration",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "disableSelfDestruction",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newDeployer",
          "type": "address"
        }
      ],
      "name": "setDeployer",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOperator",
          "type": "address"
        }
      ],
      "name": "setOperator",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "deployer",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "deployer",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "tradeHash1",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "tradeHash2",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "challenger",
          "type": "address"
        }
      ],
      "name": "ChallengeByDoubleSpentOrdersEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "oldSecurityBond",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "newSecurityBond",
          "type": "address"
        }
      ],
      "name": "SetSecurityBondEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "oldValidator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "newValidator",
          "type": "address"
        }
      ],
      "name": "SetValidatorEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "oldConfiguration",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "newConfiguration",
          "type": "address"
        }
      ],
      "name": "SetConfigurationEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "oldFraudChallenge",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "newFraudChallenge",
          "type": "address"
        }
      ],
      "name": "SetFraudChallengeEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "oldDeployer",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "newDeployer",
          "type": "address"
        }
      ],
      "name": "SetDeployerEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "oldOperator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "newOperator",
          "type": "address"
        }
      ],
      "name": "SetOperatorEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "wallet",
          "type": "address"
        }
      ],
      "name": "SelfDestructionDisabledEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "wallet",
          "type": "address"
        }
      ],
      "name": "TriggerSelfDestructionEvent",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "components": [
            {
              "name": "nonce",
              "type": "uint256"
            },
            {
              "name": "amount",
              "type": "int256"
            },
            {
              "components": [
                {
                  "components": [
                    {
                      "name": "ct",
                      "type": "address"
                    },
                    {
                      "name": "id",
                      "type": "uint256"
                    }
                  ],
                  "name": "intended",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "name": "ct",
                      "type": "address"
                    },
                    {
                      "name": "id",
                      "type": "uint256"
                    }
                  ],
                  "name": "conjugate",
                  "type": "tuple"
                }
              ],
              "name": "currencies",
              "type": "tuple"
            },
            {
              "name": "rate",
              "type": "int256"
            },
            {
              "components": [
                {
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "name": "wallet",
                  "type": "address"
                },
                {
                  "name": "rollingVolume",
                  "type": "uint256"
                },
                {
                  "name": "liquidityRole",
                  "type": "uint8"
                },
                {
                  "components": [
                    {
                      "name": "amount",
                      "type": "int256"
                    },
                    {
                      "components": [
                        {
                          "name": "wallet",
                          "type": "bytes32"
                        },
                        {
                          "name": "operator",
                          "type": "bytes32"
                        }
                      ],
                      "name": "hashes",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "name": "current",
                          "type": "int256"
                        },
                        {
                          "name": "previous",
                          "type": "int256"
                        }
                      ],
                      "name": "residuals",
                      "type": "tuple"
                    }
                  ],
                  "name": "order",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "components": [
                        {
                          "name": "current",
                          "type": "int256"
                        },
                        {
                          "name": "previous",
                          "type": "int256"
                        }
                      ],
                      "name": "intended",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "name": "current",
                          "type": "int256"
                        },
                        {
                          "name": "previous",
                          "type": "int256"
                        }
                      ],
                      "name": "conjugate",
                      "type": "tuple"
                    }
                  ],
                  "name": "balances",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "components": [
                        {
                          "name": "amount",
                          "type": "int256"
                        },
                        {
                          "components": [
                            {
                              "name": "ct",
                              "type": "address"
                            },
                            {
                              "name": "id",
                              "type": "uint256"
                            }
                          ],
                          "name": "currency",
                          "type": "tuple"
                        }
                      ],
                      "name": "single",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "name": "originId",
                          "type": "uint256"
                        },
                        {
                          "components": [
                            {
                              "name": "amount",
                              "type": "int256"
                            },
                            {
                              "components": [
                                {
                                  "name": "ct",
                                  "type": "address"
                                },
                                {
                                  "name": "id",
                                  "type": "uint256"
                                }
                              ],
                              "name": "currency",
                              "type": "tuple"
                            }
                          ],
                          "name": "figure",
                          "type": "tuple"
                        }
                      ],
                      "name": "total",
                      "type": "tuple[]"
                    }
                  ],
                  "name": "fees",
                  "type": "tuple"
                }
              ],
              "name": "buyer",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "name": "wallet",
                  "type": "address"
                },
                {
                  "name": "rollingVolume",
                  "type": "uint256"
                },
                {
                  "name": "liquidityRole",
                  "type": "uint8"
                },
                {
                  "components": [
                    {
                      "name": "amount",
                      "type": "int256"
                    },
                    {
                      "components": [
                        {
                          "name": "wallet",
                          "type": "bytes32"
                        },
                        {
                          "name": "operator",
                          "type": "bytes32"
                        }
                      ],
                      "name": "hashes",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "name": "current",
                          "type": "int256"
                        },
                        {
                          "name": "previous",
                          "type": "int256"
                        }
                      ],
                      "name": "residuals",
                      "type": "tuple"
                    }
                  ],
                  "name": "order",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "components": [
                        {
                          "name": "current",
                          "type": "int256"
                        },
                        {
                          "name": "previous",
                          "type": "int256"
                        }
                      ],
                      "name": "intended",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "name": "current",
                          "type": "int256"
                        },
                        {
                          "name": "previous",
                          "type": "int256"
                        }
                      ],
                      "name": "conjugate",
                      "type": "tuple"
                    }
                  ],
                  "name": "balances",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "components": [
                        {
                          "name": "amount",
                          "type": "int256"
                        },
                        {
                          "components": [
                            {
                              "name": "ct",
                              "type": "address"
                            },
                            {
                              "name": "id",
                              "type": "uint256"
                            }
                          ],
                          "name": "currency",
                          "type": "tuple"
                        }
                      ],
                      "name": "single",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "name": "originId",
                          "type": "uint256"
                        },
                        {
                          "components": [
                            {
                              "name": "amount",
                              "type": "int256"
                            },
                            {
                              "components": [
                                {
                                  "name": "ct",
                                  "type": "address"
                                },
                                {
                                  "name": "id",
                                  "type": "uint256"
                                }
                              ],
                              "name": "currency",
                              "type": "tuple"
                            }
                          ],
                          "name": "figure",
                          "type": "tuple"
                        }
                      ],
                      "name": "total",
                      "type": "tuple[]"
                    }
                  ],
                  "name": "fees",
                  "type": "tuple"
                }
              ],
              "name": "seller",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "components": [
                    {
                      "name": "single",
                      "type": "int256"
                    },
                    {
                      "name": "total",
                      "type": "int256"
                    }
                  ],
                  "name": "intended",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "name": "single",
                      "type": "int256"
                    },
                    {
                      "name": "total",
                      "type": "int256"
                    }
                  ],
                  "name": "conjugate",
                  "type": "tuple"
                }
              ],
              "name": "transfers",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "name": "hash",
                  "type": "bytes32"
                },
                {
                  "components": [
                    {
                      "name": "r",
                      "type": "bytes32"
                    },
                    {
                      "name": "s",
                      "type": "bytes32"
                    },
                    {
                      "name": "v",
                      "type": "uint8"
                    }
                  ],
                  "name": "signature",
                  "type": "tuple"
                }
              ],
              "name": "seal",
              "type": "tuple"
            },
            {
              "name": "blockNumber",
              "type": "uint256"
            },
            {
              "name": "operatorId",
              "type": "uint256"
            }
          ],
          "name": "trade1",
          "type": "tuple"
        },
        {
          "components": [
            {
              "name": "nonce",
              "type": "uint256"
            },
            {
              "name": "amount",
              "type": "int256"
            },
            {
              "components": [
                {
                  "components": [
                    {
                      "name": "ct",
                      "type": "address"
                    },
                    {
                      "name": "id",
                      "type": "uint256"
                    }
                  ],
                  "name": "intended",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "name": "ct",
                      "type": "address"
                    },
                    {
                      "name": "id",
                      "type": "uint256"
                    }
                  ],
                  "name": "conjugate",
                  "type": "tuple"
                }
              ],
              "name": "currencies",
              "type": "tuple"
            },
            {
              "name": "rate",
              "type": "int256"
            },
            {
              "components": [
                {
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "name": "wallet",
                  "type": "address"
                },
                {
                  "name": "rollingVolume",
                  "type": "uint256"
                },
                {
                  "name": "liquidityRole",
                  "type": "uint8"
                },
                {
                  "components": [
                    {
                      "name": "amount",
                      "type": "int256"
                    },
                    {
                      "components": [
                        {
                          "name": "wallet",
                          "type": "bytes32"
                        },
                        {
                          "name": "operator",
                          "type": "bytes32"
                        }
                      ],
                      "name": "hashes",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "name": "current",
                          "type": "int256"
                        },
                        {
                          "name": "previous",
                          "type": "int256"
                        }
                      ],
                      "name": "residuals",
                      "type": "tuple"
                    }
                  ],
                  "name": "order",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "components": [
                        {
                          "name": "current",
                          "type": "int256"
                        },
                        {
                          "name": "previous",
                          "type": "int256"
                        }
                      ],
                      "name": "intended",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "name": "current",
                          "type": "int256"
                        },
                        {
                          "name": "previous",
                          "type": "int256"
                        }
                      ],
                      "name": "conjugate",
                      "type": "tuple"
                    }
                  ],
                  "name": "balances",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "components": [
                        {
                          "name": "amount",
                          "type": "int256"
                        },
                        {
                          "components": [
                            {
                              "name": "ct",
                              "type": "address"
                            },
                            {
                              "name": "id",
                              "type": "uint256"
                            }
                          ],
                          "name": "currency",
                          "type": "tuple"
                        }
                      ],
                      "name": "single",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "name": "originId",
                          "type": "uint256"
                        },
                        {
                          "components": [
                            {
                              "name": "amount",
                              "type": "int256"
                            },
                            {
                              "components": [
                                {
                                  "name": "ct",
                                  "type": "address"
                                },
                                {
                                  "name": "id",
                                  "type": "uint256"
                                }
                              ],
                              "name": "currency",
                              "type": "tuple"
                            }
                          ],
                          "name": "figure",
                          "type": "tuple"
                        }
                      ],
                      "name": "total",
                      "type": "tuple[]"
                    }
                  ],
                  "name": "fees",
                  "type": "tuple"
                }
              ],
              "name": "buyer",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "name": "wallet",
                  "type": "address"
                },
                {
                  "name": "rollingVolume",
                  "type": "uint256"
                },
                {
                  "name": "liquidityRole",
                  "type": "uint8"
                },
                {
                  "components": [
                    {
                      "name": "amount",
                      "type": "int256"
                    },
                    {
                      "components": [
                        {
                          "name": "wallet",
                          "type": "bytes32"
                        },
                        {
                          "name": "operator",
                          "type": "bytes32"
                        }
                      ],
                      "name": "hashes",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "name": "current",
                          "type": "int256"
                        },
                        {
                          "name": "previous",
                          "type": "int256"
                        }
                      ],
                      "name": "residuals",
                      "type": "tuple"
                    }
                  ],
                  "name": "order",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "components": [
                        {
                          "name": "current",
                          "type": "int256"
                        },
                        {
                          "name": "previous",
                          "type": "int256"
                        }
                      ],
                      "name": "intended",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "name": "current",
                          "type": "int256"
                        },
                        {
                          "name": "previous",
                          "type": "int256"
                        }
                      ],
                      "name": "conjugate",
                      "type": "tuple"
                    }
                  ],
                  "name": "balances",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "components": [
                        {
                          "name": "amount",
                          "type": "int256"
                        },
                        {
                          "components": [
                            {
                              "name": "ct",
                              "type": "address"
                            },
                            {
                              "name": "id",
                              "type": "uint256"
                            }
                          ],
                          "name": "currency",
                          "type": "tuple"
                        }
                      ],
                      "name": "single",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "name": "originId",
                          "type": "uint256"
                        },
                        {
                          "components": [
                            {
                              "name": "amount",
                              "type": "int256"
                            },
                            {
                              "components": [
                                {
                                  "name": "ct",
                                  "type": "address"
                                },
                                {
                                  "name": "id",
                                  "type": "uint256"
                                }
                              ],
                              "name": "currency",
                              "type": "tuple"
                            }
                          ],
                          "name": "figure",
                          "type": "tuple"
                        }
                      ],
                      "name": "total",
                      "type": "tuple[]"
                    }
                  ],
                  "name": "fees",
                  "type": "tuple"
                }
              ],
              "name": "seller",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "components": [
                    {
                      "name": "single",
                      "type": "int256"
                    },
                    {
                      "name": "total",
                      "type": "int256"
                    }
                  ],
                  "name": "intended",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "name": "single",
                      "type": "int256"
                    },
                    {
                      "name": "total",
                      "type": "int256"
                    }
                  ],
                  "name": "conjugate",
                  "type": "tuple"
                }
              ],
              "name": "transfers",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "name": "hash",
                  "type": "bytes32"
                },
                {
                  "components": [
                    {
                      "name": "r",
                      "type": "bytes32"
                    },
                    {
                      "name": "s",
                      "type": "bytes32"
                    },
                    {
                      "name": "v",
                      "type": "uint8"
                    }
                  ],
                  "name": "signature",
                  "type": "tuple"
                }
              ],
              "name": "seal",
              "type": "tuple"
            },
            {
              "name": "blockNumber",
              "type": "uint256"
            },
            {
              "name": "operatorId",
              "type": "uint256"
            }
          ],
          "name": "trade2",
          "type": "tuple"
        }
      ],
      "name": "challenge",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "",
  "deployedBytecode": "0x6080604052600436106100d75763ffffffff60e060020a60003504166301370d0681146100dc5780631327d3d8146100fe5780632738a1121461011e5780632f013a00146101335780633a5381b51461015e5780633bd7857f146101805780634476d23b14610195578063570ca735146101b7578063627f09c3146101cc5780636792ce6e146101ec5780636b0570d01461020c5780636c70bee91461022157806370327ea1146102365780638fdcfa841461024b578063962147351461026b578063b3ab15fb1461028b578063d5f39488146102ab575b600080fd5b3480156100e857600080fd5b506100fc6100f7366004611320565b6102c0565b005b34801561010a57600080fd5b506100fc610119366004611320565b610368565b34801561012a57600080fd5b506100fc610400565b34801561013f57600080fd5b50610148610466565b60405161015591906117ae565b60405180910390f35b34801561016a57600080fd5b5061017361046f565b60405161015591906117f2565b34801561018c57600080fd5b5061017361047e565b3480156101a157600080fd5b506101aa61048d565b6040516101559190611757565b3480156101c357600080fd5b506101aa6104a1565b3480156101d857600080fd5b506100fc6101e7366004611320565b6104b0565b3480156101f857600080fd5b506100fc610207366004611320565b610548565b34801561021857600080fd5b506101736105e0565b34801561022d57600080fd5b506101736105ef565b34801561024257600080fd5b506100fc6105fe565b34801561025757600080fd5b506100fc61026636600461133e565b610661565b34801561027757600080fd5b506100fc6102863660046112dc565b610be2565b34801561029757600080fd5b506100fc6102a63660046112dc565b610ca9565b3480156102b757600080fd5b506101aa610d53565b60006102ca610d67565b15156102d557600080fd5b81600160a060020a03811615156102eb57600080fd5b6002548390600160a060020a0390811690821681146103615760028054600160a060020a03878116600160a060020a0319831617909255604051911694507f07998fa7be97abe2427246ae4688298c89d6196bbffdf0997b9495a8d27bc673906103589086908890611800565b60405180910390a15b5050505050565b6000610372610d67565b151561037d57600080fd5b81600160a060020a038116151561039357600080fd5b6004548390600160a060020a0390811690821681146103615760048054600160a060020a03878116600160a060020a0319831617909255604051911694507f1882af944a16549c3d4f60e3cd26f158b0c7aac3222cf32971fc21375ce05f60906103589086908890611800565b3361040961048d565b600160a060020a03161461041c57600080fd5b60005460ff161561042c57600080fd5b7f787a5d936e74f4b564b9153575886059829c78cd9927b1be5e0d976b317ef7363360405161045b9190611757565b60405180910390a133ff5b60005460ff1681565b600454600160a060020a031681565b600254600160a060020a031681565b6000546101009004600160a060020a031690565b600154600160a060020a031681565b60006104ba610d67565b15156104c557600080fd5b81600160a060020a03811615156104db57600080fd5b6003548390600160a060020a0390811690821681146103615760038054600160a060020a03878116600160a060020a0319831617909255604051911694507f634f61bf00e14adedce330c80c2823e16e184f189ebe853e1ddecc4a268477ff906103589086908890611800565b6000610552610d67565b151561055d57600080fd5b81600160a060020a038116151561057357600080fd5b6005548390600160a060020a0390811690821681146103615760058054600160a060020a03878116600160a060020a0319831617909255604051911694507fc9f3f00c1760fe26985aeacb814a21c56ea289d680562e89b249681b08c30382906103589086908890611800565b600554600160a060020a031681565b600354600160a060020a031681565b3361060761048d565b600160a060020a03161461061a57600080fd5b6000805460ff191660011790556040517fd5a2a04a775c741c2ca0dc46ea7ce4835190e1aaf1ca018def0e82568ec3361690610657903390611757565b60405180910390a1565b600080600360009054906101000a9004600160a060020a0316600160a060020a031663f71e860f6040518163ffffffff1660e060020a028152600401602060405180830381600087803b1580156106b757600080fd5b505af11580156106cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506106ef9190810190611302565b15156106fa57600080fd5b6004805460405160e160020a637211c8c70281528692600160a060020a039092169163e423918e9161072e9185910161181b565b602060405180830381600087803b15801561074857600080fd5b505af115801561075c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506107809190810190611302565b151561078b57600080fd5b6004805460405160e160020a637211c8c70281528692600160a060020a039092169163e423918e916107bf9185910161181b565b602060405180830381600087803b1580156107d957600080fd5b505af11580156107ed573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506108119190810190611302565b151561081c57600080fd5b60e080860151519087015151141561083357600080fd5b6080808601518101516020908101518101518883015183015182015182015160a0808a0151850151840151840151908b015190940151830151909201519114955014925083806108805750825b151561088b57600080fd5b600360009054906101000a9004600160a060020a0316600160a060020a031663f8e6e8886040518163ffffffff1660e060020a028152600401600060405180830381600087803b1580156108de57600080fd5b505af11580156108f2573d6000803e3d6000fd5b505060025460e08901515160405160e060020a6375d8655b028152600160a060020a0390921693506375d8655b925061092d916004016117bc565b600060405180830381600087803b15801561094757600080fd5b505af115801561095b573d6000803e3d6000fd5b505060025460e08801515160405160e060020a6375d8655b028152600160a060020a0390921693506375d8655b9250610996916004016117bc565b600060405180830381600087803b1580156109b057600080fd5b505af11580156109c4573d6000803e3d6000fd5b50506005546003546040805160e060020a639699f3370281529051600160a060020a03938416955063760b82929450339390921691639699f337916004808201926020929091908290030181600087803b158015610a2157600080fd5b505af1158015610a35573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610a5991908101906113a5565b60006040518463ffffffff1660e060020a028152600401610a7c93929190611786565b600060405180830381600087803b158015610a9657600080fd5b505af1158015610aaa573d6000803e3d6000fd5b505050508315610b215760025460808601516020015160405160e160020a632531d11d028152600160a060020a0390921691634a63a23a91610aee91600401611757565b600060405180830381600087803b158015610b0857600080fd5b505af1158015610b1c573d6000803e3d6000fd5b505050505b8215610b945760025460a08601516020015160405160e160020a632531d11d028152600160a060020a0390921691634a63a23a91610b6191600401611757565b600060405180830381600087803b158015610b7b57600080fd5b505af1158015610b8f573d6000803e3d6000fd5b505050505b60e0808701515190860151516040517f062cdd5a38a8c97ea6d34cf2f7ead767cd74a89372d592342cc5a78de2d425db92610bd292909133906117ca565b60405180910390a1505050505050565b6000610bec610d67565b1515610bf757600080fd5b81600160a060020a0381161515610c0d57600080fd5b600160a060020a038116301415610c2357600080fd5b600054600160a060020a038481166101009092041614610ca45760008054600160a060020a0385811661010090810261010060a860020a0319841617909355604051929091041692507f977e5fa58e458501775e0008d275006294c5249e3c08d1d0e3a9f3acad14f6e490610c9b908490869061176b565b60405180910390a15b505050565b6000610cb3610d7d565b1515610cbe57600080fd5b81600160a060020a0381161515610cd457600080fd5b600160a060020a038116301415610cea57600080fd5b600154600160a060020a03848116911614610ca45760018054600160a060020a03858116600160a060020a0319831617909255604051911692507f9f611b789425d0d5b90b920f1b2852907dd865c80074a30b1629aaa041d1812c90610c9b908490869061176b565b6000546101009004600160a060020a031681565b6000546101009004600160a060020a0316331490565b600154600160a060020a0316331490565b6000610d9a823561187c565b9392505050565b6000601f82018313610db257600080fd5b8135610dc5610dc082611852565b61182c565b91508181835260208401935060208101905083856080840282011115610dea57600080fd5b60005b83811015610e185781610e008882610f74565b84525060209092019160809190910190600101610ded565b5050505092915050565b6000610d9a8251611888565b6000610d9a823561188d565b6000610d9a82356118a6565b6000610d9a82356118b1565b600060408284031215610e6457600080fd5b610e6e604061182c565b90506000610e7c8484610d8e565b8252506020610e8d84848301610e2e565b60208301525092915050565b600060408284031215610eab57600080fd5b610eb5604061182c565b90506000610e7c8484610e2e565b600060608284031215610ed557600080fd5b610edf604061182c565b90506000610eed8484610e2e565b8252506020610e8d84848301610e52565b600060808284031215610f1057600080fd5b610f1a604061182c565b90506000610f288484610e52565b8252506040610e8d84848301610e52565b600060808284031215610f4b57600080fd5b610f55604061182c565b90506000610f638484610e99565b8252506040610e8d84848301610e99565b600060808284031215610f8657600080fd5b610f90604061182c565b90506000610f9e8484610e2e565b8252506020610e8d84848301610ec3565b600060808284031215610fc157600080fd5b610fcb604061182c565b90506000610fd98484610e2e565b8252506020610e8d84848301600060608284031215610ff757600080fd5b611001606061182c565b9050600061100f8484610e2e565b825250602061102084848301610e2e565b6020830152506040611034848285016112d0565b60408301525092915050565b60006080828403121561105257600080fd5b61105c604061182c565b9050600061106a8484610ec3565b82525060608201356001604060020a0381111561108657600080fd5b610e8d84828501610da1565b600060a082840312156110a457600080fd5b6110ae606061182c565b905060006110bc8484610e2e565b82525060206110cd84848301610e99565b602083015250606061103484828501610e99565b60006101c082840312156110f457600080fd5b6110fe60e061182c565b9050600061110c8484610e2e565b825250602061111d84848301610d8e565b602083015250604061113184828501610e2e565b604083015250606061114584828501610e46565b606083015250608061115984828501611092565b60808301525061012061116e84828501610f39565b60a0830152506101a08201356001604060020a0381111561118e57600080fd5b61119a84828501611040565b60c08301525092915050565b600061026082840312156111b957600080fd5b6111c461014061182c565b905060006111d28484610e2e565b82525060206111e384848301610e2e565b60208301525060406111f784828501610efe565b60408301525060c061120b84828501610e2e565b60608301525060e08201356001604060020a0381111561122a57600080fd5b611236848285016110e1565b6080830152506101008201356001604060020a0381111561125657600080fd5b611262848285016110e1565b60a08301525061012061127784828501610f39565b60c0830152506101a061128c84828501610faf565b60e0830152506102206112a184828501610e2e565b610100830152506102406112b784828501610e2e565b6101208301525092915050565b6000610d9a825161188d565b6000610d9a82356118a0565b6000602082840312156112ee57600080fd5b60006112fa8484610d8e565b949350505050565b60006020828403121561131457600080fd5b60006112fa8484610e22565b60006020828403121561133257600080fd5b60006112fa8484610e3a565b6000806040838503121561135157600080fd5b82356001604060020a0381111561136757600080fd5b611373858286016111a6565b92505060208301356001604060020a0381111561138f57600080fd5b61139b858286016111a6565b9150509250929050565b6000602082840312156113b757600080fd5b60006112fa84846112c4565b6113cc8161187c565b82525050565b60006113dd82611878565b8084526020840193506113ef83611872565b60005b8281101561141f576114058683516114fd565b61140e82611872565b6080969096019591506001016113f2565b5093949350505050565b6113cc81611888565b6113cc8161188d565b6113cc816118a6565b6113cc816118c0565b6113cc816118cb565b8051604083019061146784826113c3565b50602082015161147a6020850182611432565b50505050565b805160408301906114678482611432565b805160608301906114a28482611432565b50602082015161147a6020850182611456565b805160808301906114c68482611456565b50602082015161147a6040850182611456565b805160808301906114ea8482611480565b50602082015161147a6040850182611480565b8051608083019061150e8482611432565b50602082015161147a6020850182611491565b805160808301906115328482611432565b50602082015161147a6020850182805160608301906115518482611432565b5060208201516115646020850182611432565b50604082015161147a604085018261174e565b8051600090608084019061158b8582611491565b50602083015184820360608601526115a382826113d2565b95945050505050565b805160a08301906115bd8482611432565b5060208201516115d06020850182611480565b50604082015161147a6060850182611480565b80516000906101c08401906115f88582611432565b50602083015161160b60208601826113c3565b50604083015161161e6040860182611432565b5060608301516116316060860182611444565b50608083015161164460808601826115ac565b5060a08301516116586101208601826114d9565b5060c08301518482036101a08601526115a38282611577565b80516000906102608401906116868582611432565b5060208301516116996020860182611432565b5060408301516116ac60408601826114b5565b5060608301516116bf60c0860182611432565b50608083015184820360e08601526116d782826115e3565b91505060a08301518482036101008601526116f282826115e3565b91505060c08301516117086101208601826114d9565b5060e083015161171c6101a0860182611521565b50610100830151611731610220860182611432565b50610120830151611746610240860182611432565b509392505050565b6113cc816118a0565b6020810161176582846113c3565b92915050565b6040810161177982856113c3565b610d9a60208301846113c3565b6060810161179482866113c3565b6117a16020830185611432565b6112fa604083018461144d565b602081016117658284611429565b602081016117658284611432565b606081016117d88286611432565b6117e56020830185611432565b6112fa60408301846113c3565b60208101611765828461143b565b6040810161180e828561143b565b610d9a602083018461143b565b60208082528101610d9a8184611671565b6040518181016001604060020a038111828210171561184a57600080fd5b604052919050565b60006001604060020a0382111561186857600080fd5b5060209081020190565b60200190565b5190565b600160a060020a031690565b151590565b90565b60006002821061189c57fe5b5090565b60ff1690565b60006117658261187c565b60006002821061189c57600080fd5b600061176582611890565b60006117658261188d5600a265627a7a72305820e1850260d50fb89ea2763d6dec2f330235c9acd63283c442eb5752108cebb4166c6578706572696d656e74616cf50037",
  "sourceMap": "605:2424:30:-;;;1121:62;8:9:-1;5:2;;;30:1;27;20:12;5:2;1121:62:30;;;;;;;;;;;;;;;;;;;;;;1159:8;;-1:-1:-1;;;;;673:22:46;;;;665:31;;;;;;-1:-1:-1;;;;;714:25:46;;734:4;714:25;;706:34;;;;;;-1:-1:-1;1097:8:54;:20;;-1:-1:-1;;;;;;1097:20:54;;-1:-1:-1;;;;;1097:20:54;;;;;;;;;;-1:-1:-1;1127:20:54;;-1:-1:-1;;;;;;1127:20:54;;;;;;-1:-1:-1;605:2424:30;;5:122:-1;;83:39;114:6;108:13;83:39;;;74:48;68:59;-1:-1;;;68:59;134:263;;249:2;237:9;228:7;224:23;220:32;217:2;;;265:1;262;255:12;217:2;300:1;317:64;373:7;353:9;317:64;;;307:74;211:186;-1:-1;;;;211:186;404:128;-1:-1;;;;;473:54;;456:76;;605:2424:30;;;;;;",
  "deployedSourceMap": "605:2424:30:-;;;;;;;;;-1:-1:-1;;;605:2424:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1089:430:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1089:430:28;;;;;;;;;;;1063:353:76;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1063:353:76;;;;;;;;;1441:425:63;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1441:425:63;;;;413:35;;8:9:-1;5:2;;;30:1;27;20:12;5:2;413:35:63;;;;;;;;;;;;;;;;;;;;549:26:76;;8:9:-1;5:2;;;30:1;27;20:12;5:2;549:26:76;;;;;;;;;;;;524:36:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;524:36:28;;;;1382:100:54;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1382:100:54;;;;;;;;;;;;555:23;;8:9:-1;5:2;;;30:1;27;20:12;5:2;555:23:54;;;;1060:414:19;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1060:414:19;;;;;;;;;1061:399:62;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1061:399:62;;;;;;;;;516:32;;8:9:-1;5:2;;;30:1;27;20:12;5:2;516:32:62;;;;506:34:19;;8:9:-1;5:2;;;30:1;27;20:12;5:2;506:34:19;;;;1083:314:63;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1083:314:63;;;;1583:1444:30;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1583:1444:30;;;;;;;;;1597:368:54;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1597:368:54;;;;;;;;;2080;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2080:368:54;;;;;;;;;526:23;;8:9:-1;5:2;;;30:1;27;20:12;5:2;526:23:54;;;;1089:430:28;1321:32;3453:12:54;:10;:12::i;:::-;3445:21;;;;;;;;1197:17:28;-1:-1:-1;;;;;450:22:46;;;;442:31;;;;;;1256:14:28;;1237:17;;-1:-1:-1;;;;;1256:14:28;;;;842:22:46;;;;838:41;;1356:14:28;;;-1:-1:-1;;;;;1380:34:28;;;-1:-1:-1;;;;;;1380:34:28;;;;;;1452:60;;1356:14;;;-1:-1:-1;1452:60:28;;;;1356:14;;1397:17;;1452:60;;;;;;;;;;838:41:46;483:1;;3476::54;1089:430:28;;:::o;1063:353:76:-;1258:22;3453:12:54;:10;:12::i;:::-;3445:21;;;;;;;;1156:12:76;-1:-1:-1;;;;;450:22:46;;;;442:31;;;;;;1205:9:76;;1191:12;;-1:-1:-1;;;;;1205:9:76;;;;842:22:46;;;;838:41;;1283:9:76;;;-1:-1:-1;;;;;1302:24:76;;;-1:-1:-1;;;;;;1302:24:76;;;;;;1364:45;;1283:9;;;-1:-1:-1;1364:45:76;;;;1283:9;;1314:12;;1364:45;;1441:425:63;1582:10;1566:12;:10;:12::i;:::-;-1:-1:-1;;;;;1566:26:63;;1558:35;;;;;;1676:23;;;;1675:24;1667:33;;;;;;1738:39;1766:10;1738:39;;;;;;;;;;;;;;;1848:10;1835:24;413:35;;;;;;:::o;549:26:76:-;;;-1:-1:-1;;;;;549:26:76;;:::o;524:36:28:-;;;-1:-1:-1;;;;;524:36:28;;:::o;1382:100:54:-;1437:7;1467:8;;;;-1:-1:-1;;;;;1467:8:54;;1382:100::o;555:23::-;;;-1:-1:-1;;;;;555:23:54;;:::o;1060:414:19:-;1284:30;3453:12:54;:10;:12::i;:::-;3445:21;;;;;;;;1165:16:19;-1:-1:-1;;;;;450:22:46;;;;442:31;;;;;;1222:13:19;;1204:16;;-1:-1:-1;;;;;1222:13:19;;;;842:22:46;;;;838:41;;1317:13:19;;;-1:-1:-1;;;;;1340:32:19;;;-1:-1:-1;;;;;;1340:32:19;;;;;;1410:57;;1317:13;;;-1:-1:-1;1410:57:19;;;;1317:13;;1356:16;;1410:57;;1061:399:62;1278:28;3453:12:54;:10;:12::i;:::-;3445:21;;;;;;;;1163:15:62;-1:-1:-1;;;;;450:22:46;;;;442:31;;;;;;1218:12:62;;1201:15;;-1:-1:-1;;;;;1218:12:62;;;;842:22:46;;;;838:41;;1309:12:62;;;-1:-1:-1;;;;;1331:30:62;;;-1:-1:-1;;;;;;1331:30:62;;;;;;1399:54;;1309:12;;;-1:-1:-1;1399:54:62;;;;1309:12;;1346:15;;1399:54;;516:32;;;-1:-1:-1;;;;;516:32:62;;:::o;506:34:19:-;;;-1:-1:-1;;;;;506:34:19;;:::o;1083:314:63:-;1224:10;1208:12;:10;:12::i;:::-;-1:-1:-1;;;;;1208:26:63;;1200:35;;;;;;1282:23;:30;;-1:-1:-1;;1282:30:63;1308:4;1282:30;;;1350:40;;;;;;1379:10;;1350:40;;;;;;;;;;1083:314::o;1583:1444:30:-;1912:24;2021:25;519:13:14;;;;;;;;;-1:-1:-1;;;;;519:13:14;-1:-1:-1;;;;;519:37:14;;:39;;;;;-1:-1:-1;;;519:39:14;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;519:39:14;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;519:39:14;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;519:39:14;;;;;;;;;511:48;;;;;;;;2015:9:76;;;:35;;-1:-1:-1;;;;;2015:35:76;;1743:6:30;;-1:-1:-1;;;;;2015:9:76;;;;:28;;:35;;1743:6:30;;2015:35:76;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2015:35:76;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2015:35:76;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;2015:35:76;;;;;;;;;2007:44;;;;;;;;2015:9;;;:35;;-1:-1:-1;;;;;2015:35:76;;1771:6:30;;-1:-1:-1;;;;;2015:9:76;;;;:28;;:35;;1771:6:30;;2015:35:76;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2015:35:76;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2015:35:76;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;2015:35:76;;;;;;;;;2007:44;;;;;;;;1821:11:30;;;;;:16;1801:11;;;;:16;:36;;1793:45;;;;;;1977:12;;;;;:18;;;:25;;;;;:34;;;1939:12;;;;:18;;;:25;;;:34;;;2088:13;;;;;:19;;;:26;;;:35;;;2049:13;;;;:19;;;;:26;;;:35;;;;1939:72;;;-1:-1:-1;2049:74:30;;-1:-1:-1;1939:72:30;;2187:43;;;2210:20;2187:43;2179:52;;;;;;;;2282:13;;;;;;;;;-1:-1:-1;;;;;2282:13:30;-1:-1:-1;;;;;2282:36:30;;:38;;;;;-1:-1:-1;;;2282:38:30;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2282:38:30;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;2376:14:30;;2414:11;;;;:16;2376:55;;-1:-1:-1;;;;;2376:55:30;;-1:-1:-1;;;;;2376:14:30;;;;-1:-1:-1;2376:37:30;;-1:-1:-1;2376:55:30;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2376:55:30;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;2441:14:30;;2479:11;;;;:16;2441:55;;-1:-1:-1;;;;;2441:55:30;;-1:-1:-1;;;;;2441:14:30;;;;-1:-1:-1;2441:37:30;;-1:-1:-1;2441:55:30;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2441:55:30;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;2540:12:30;;2582:13;;:34;;;-1:-1:-1;;;;;2582:34:30;;;;-1:-1:-1;;;;;2540:12:30;;;;-1:-1:-1;2540:29:30;;-1:-1:-1;2570:10:30;;2582:13;;;;:32;;:34;;;;;;;;;;;;;;;2540:12;2582:13;:34;;;5:2:-1;;;;30:1;27;20:12;5:2;2582:34:30;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2582:34:30;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;2582:34:30;;;;;;;;;2618:1;2540:80;;;;;-1:-1:-1;;;2540:80:30;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2540:80:30;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2540:80:30;;;;2681:19;2677:95;;;2714:14;;2752:12;;;;:19;;;2714:58;;-1:-1:-1;;;;;2714:58:30;;-1:-1:-1;;;;;2714:14:30;;;;:37;;:58;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2714:58:30;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2714:58:30;;;;2677:95;2786:20;2782:97;;;2820:14;;2858:13;;;;:20;;;2820:59;;-1:-1:-1;;;;;2820:59:30;;-1:-1:-1;;;;;2820:14:30;;;;:37;;:59;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2820:59:30;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2820:59:30;;;;2782:97;2964:11;;;;;:16;2982:11;;;;:16;2917:103;;;;;;2964:16;;3000:10;;2917:103;;;;;;;;;;2061:1:76;569::14;1583:1444:30;;;;:::o;1597:368:54:-;1794:19;3453:12;:10;:12::i;:::-;3445:21;;;;;;;;1692:11;-1:-1:-1;;;;;673:22:46;;;;665:31;;;;;;-1:-1:-1;;;;;714:25:46;;734:4;714:25;;706:34;;;;;;1738:8:54;;-1:-1:-1;;;;;1723:23:54;;;1738:8;;;;;1723:23;1719:240;;1816:8;;;-1:-1:-1;;;;;1838:22:54;;;1816:8;1838:22;;;-1:-1:-1;;;;;;1838:22:54;;;;;;1906:42;;1816:8;;;;;;-1:-1:-1;1906:42:54;;;;1816:8;;1849:11;;1906:42;;;;;;;;;;1719:240;3476:1;1597:368;;:::o;2080:::-;2277:19;3611:12;:10;:12::i;:::-;3603:21;;;;;;;;2175:11;-1:-1:-1;;;;;673:22:46;;;;665:31;;;;;;-1:-1:-1;;;;;714:25:46;;734:4;714:25;;706:34;;;;;;2221:8:54;;-1:-1:-1;;;;;2206:23:54;;;2221:8;;2206:23;2202:240;;2299:8;;;-1:-1:-1;;;;;2321:22:54;;;-1:-1:-1;;;;;;2321:22:54;;;;;;2389:42;;2299:8;;;-1:-1:-1;2389:42:54;;;;2299:8;;2332:11;;2389:42;;526:23;;;;;;-1:-1:-1;;;;;526:23:54;;:::o;2577:113::-;2634:4;2675:8;;;;-1:-1:-1;;;;;2675:8:54;2661:10;:22;;2577:113::o;2819:::-;2917:8;;-1:-1:-1;;;;;2917:8:54;2903:10;:22;;2819:113::o;5:118:-1:-;;72:46;110:6;97:20;72:46;;;63:55;57:66;-1:-1;;;57:66;175:780;;308:4;296:17;;292:27;-1:-1;282:2;;333:1;330;323:12;282:2;370:6;357:20;392:103;407:87;487:6;407:87;;;392:103;;;383:112;;512:5;537:6;530:5;523:21;567:4;559:6;555:17;545:27;;589:4;584:3;580:14;573:21;;642:6;689:3;681:4;673:6;669:17;664:3;660:27;657:36;654:2;;;706:1;703;696:12;654:2;731:1;716:233;741:6;738:1;735:13;716:233;;;799:3;821:64;881:3;869:10;821:64;;;809:77;;-1:-1;909:4;900:14;;;;937:4;928:14;;;;;763:1;756:9;716:233;;;720:14;275:680;;;;;;;;963:116;;1038:36;1066:6;1060:13;1038:36;;1086:118;;1153:46;1191:6;1178:20;1153:46;;1211:162;;1300:68;1360:6;1347:20;1300:68;;1885:156;;1971:65;2028:6;2015:20;1971:65;;2210:460;;2322:4;2310:9;2305:3;2301:19;2297:30;2294:2;;;2340:1;2337;2330:12;2294:2;2358:20;2373:4;2358:20;;;2349:29;-1:-1;2426:1;2457:49;2502:3;2482:9;2457:49;;;2433:74;;-1:-1;2566:2;2599:49;2644:3;2620:22;;;2599:49;;;2592:4;2585:5;2581:16;2574:75;2528:132;2288:382;;;;;2727:482;;2852:4;2840:9;2835:3;2831:19;2827:30;2824:2;;;2870:1;2867;2860:12;2824:2;2888:20;2903:4;2888:20;;;2879:29;-1:-1;2961:1;2992:48;3036:3;3016:9;2992:48;;3253:490;;3363:4;3351:9;3346:3;3342:19;3338:30;3335:2;;;3381:1;3378;3371:12;3335:2;3399:20;3414:4;3399:20;;;3390:29;-1:-1;3471:1;3502:48;3546:3;3526:9;3502:48;;;3478:73;;-1:-1;3616:2;3649:72;3717:3;3693:22;;;3649:72;;3804:536;;3933:4;3921:9;3916:3;3912:19;3908:30;3905:2;;;3951:1;3948;3941:12;3905:2;3969:20;3984:4;3969:20;;;3960:29;-1:-1;4043:1;4074:72;4142:3;4122:9;4074:72;;;4050:97;;-1:-1;4213:2;4246:72;4314:3;4290:22;;;4246:72;;4414:575;;4556:4;4544:9;4539:3;4535:19;4531:30;4528:2;;;4574:1;4571;4564:12;4528:2;4592:20;4607:4;4592:20;;;4583:29;-1:-1;4666:1;4697:85;4778:3;4758:9;4697:85;;;4673:110;;-1:-1;4849:2;4882:85;4963:3;4939:22;;;4882:85;;5670:495;;5786:4;5774:9;5769:3;5765:19;5761:30;5758:2;;;5804:1;5801;5794:12;5758:2;5822:20;5837:4;5822:20;;;5813:29;-1:-1;5896:1;5927:49;5972:3;5952:9;5927:49;;;5903:74;;-1:-1;6040:2;6073:70;6139:3;6115:22;;;6073:70;;6205:489;;6313:4;6301:9;6296:3;6292:19;6288:30;6285:2;;;6331:1;6328;6321:12;6285:2;6349:20;6364:4;6349:20;;;6340:29;-1:-1;6419:1;6450:49;6495:3;6475:9;6450:49;;;6426:74;;-1:-1;6566:2;6599:73;6668:3;6644:22;;;6739:598;6852:4;6840:9;6835:3;6831:19;6827:30;6824:2;;;6870:1;6867;6860:12;6824:2;6888:20;6903:4;6888:20;;;6879:29;-1:-1;6955:1;6986:49;7031:3;7011:9;6986:49;;;6962:74;;-1:-1;7094:2;7127:49;7172:3;7148:22;;;7127:49;;;7120:4;7113:5;7109:16;7102:75;7057:131;7235:2;7268:47;7311:3;7302:6;7291:9;7287:22;7268:47;;;7261:4;7254:5;7250:16;7243:73;7198:129;6818:519;;;;;7403:644;;7537:4;7525:9;7520:3;7516:19;7512:30;7509:2;;;7555:1;7552;7545:12;7509:2;7573:20;7588:4;7573:20;;;7564:29;-1:-1;7645:1;7676:70;7742:3;7722:9;7676:70;;;7652:95;;-1:-1;7837:2;7822:18;;7809:32;-1:-1;;;;;7850:30;;7847:2;;;7893:1;7890;7883:12;7847:2;7928:97;8021:3;8012:6;8001:9;7997:22;7928:97;;8620:689;;8734:4;8722:9;8717:3;8713:19;8709:30;8706:2;;;8752:1;8749;8742:12;8706:2;8770:20;8785:4;8770:20;;;8761:29;-1:-1;8842:1;8873:48;8917:3;8897:9;8873:48;;;8849:73;;-1:-1;8985:2;9018:84;9098:3;9074:22;;;9018:84;;;9011:4;9004:5;9000:16;8993:110;8943:171;9169:2;9202:85;9283:3;9274:6;9263:9;9259:22;9202:85;;9355:1444;;9469:5;9457:9;9452:3;9448:19;9444:31;9441:2;;;9488:1;9485;9478:12;9441:2;9506:20;9521:4;9506:20;;;9497:29;-1:-1;9577:1;9608:49;9653:3;9633:9;9608:49;;;9584:74;;-1:-1;9721:2;9754:49;9799:3;9775:22;;;9754:49;;;9747:4;9740:5;9736:16;9729:75;9679:136;9874:2;9907:49;9952:3;9943:6;9932:9;9928:22;9907:49;;;9900:4;9893:5;9889:16;9882:75;9825:143;10027:2;10060:68;10124:3;10115:6;10104:9;10100:22;10060:68;;;10053:4;10046:5;10042:16;10035:94;9978:162;10191:3;10225:74;10295:3;10286:6;10275:9;10271:22;10225:74;;;10218:4;10211:5;10207:16;10200:100;10150:161;10365:3;10399:102;10497:3;10488:6;10477:9;10473:22;10399:102;;;10392:4;10385:5;10381:16;10374:128;10321:192;10591:3;10580:9;10576:19;10563:33;-1:-1;;;;;10608:6;10605:30;10602:2;;;10648:1;10645;10638:12;10602:2;10683:94;10773:3;10764:6;10753:9;10749:22;10683:94;;;10676:4;10669:5;10665:16;10658:120;10523:266;9435:1364;;;;;10840:1986;;10953:5;10941:9;10936:3;10932:19;10928:31;10925:2;;;10972:1;10969;10962:12;10925:2;10990:21;11005:5;10990:21;;;10981:30;-1:-1;11062:1;11093:49;11138:3;11118:9;11093:49;;;11069:74;;-1:-1;11206:2;11239:48;11283:3;11259:22;;;11239:48;;;11232:4;11225:5;11221:16;11214:74;11164:135;11355:2;11388:89;11473:3;11464:6;11453:9;11449:22;11388:89;;;11381:4;11374:5;11370:16;11363:115;11309:180;11539:3;11573:48;11617:3;11608:6;11597:9;11593:22;11573:48;;;11566:4;11559:5;11555:16;11548:74;11499:134;11712:3;11701:9;11697:19;11684:33;-1:-1;;;;;11729:6;11726:30;11723:2;;;11769:1;11766;11759:12;11723:2;11804:74;11874:3;11865:6;11854:9;11850:22;11804:74;;;11797:4;11790:5;11786:16;11779:100;11643:247;11970:3;11959:9;11955:19;11942:33;-1:-1;;;;;11987:6;11984:30;11981:2;;;12027:1;12024;12017:12;11981:2;12062:74;12132:3;12123:6;12112:9;12108:22;12062:74;;;12055:4;12048:5;12044:16;12037:100;11900:248;12203:3;12237:98;12331:3;12322:6;12311:9;12307:22;12237:98;;;12230:4;12223:5;12219:16;12212:124;12158:189;12397:3;12431:68;12495:3;12486:6;12475:9;12471:22;12431:68;;;12424:4;12417:5;12413:16;12406:94;12357:154;12568:3;12603:49;12648:3;12639:6;12628:9;12624:22;12603:49;;;12595:5;12588;12584:17;12577:76;12521:143;12720:3;12755:49;12800:3;12791:6;12780:9;12776:22;12755:49;;;12747:5;12740;12736:17;12729:76;12674:142;10919:1907;;;;;13496:122;;13574:39;13605:6;13599:13;13574:39;;13625:114;;13690:44;13726:6;13713:20;13690:44;;13746:241;;13850:2;13838:9;13829:7;13825:23;13821:32;13818:2;;;13866:1;13863;13856:12;13818:2;13901:1;13918:53;13963:7;13943:9;13918:53;;;13908:63;13812:175;-1:-1;;;;13812:175;13994:257;;14106:2;14094:9;14085:7;14081:23;14077:32;14074:2;;;14122:1;14119;14112:12;14074:2;14157:1;14174:61;14227:7;14207:9;14174:61;;14258:285;;14384:2;14372:9;14363:7;14359:23;14355:32;14352:2;;;14400:1;14397;14390:12;14352:2;14435:1;14452:75;14519:7;14499:9;14452:75;;15424:634;;;15593:2;15581:9;15572:7;15568:23;15564:32;15561:2;;;15609:1;15606;15599:12;15561:2;15644:31;;-1:-1;;;;;15684:30;;15681:2;;;15727:1;15724;15717:12;15681:2;15747:77;15816:7;15807:6;15796:9;15792:22;15747:77;;;15737:87;;15623:207;15889:2;15878:9;15874:18;15861:32;-1:-1;;;;;15905:6;15902:30;15899:2;;;15945:1;15942;15935:12;15899:2;15965:77;16034:7;16025:6;16014:9;16010:22;15965:77;;;15955:87;;15840:208;15555:503;;;;;;16065:263;;16180:2;16168:9;16159:7;16155:23;16151:32;16148:2;;;16196:1;16193;16186:12;16148:2;16231:1;16248:64;16304:7;16284:9;16248:64;;16335:110;16408:31;16433:5;16408:31;;;16403:3;16396:44;16390:55;;;16537:767;;16722:77;16793:5;16722:77;;;16817:6;16812:3;16805:19;16841:4;16836:3;16832:14;16825:21;;16886:79;16959:5;16886:79;;;16986:1;16971:311;16996:6;16993:1;16990:13;16971:311;;;17036:111;17143:3;17134:6;17128:13;17036:111;;;17164:83;17240:6;17164:83;;;17270:4;17261:14;;;;;17154:93;-1:-1;17018:1;17011:9;16971:311;;;-1:-1;17295:3;;16701:603;-1:-1;;;;16701:603;17312:101;17379:28;17401:5;17379:28;;17420:110;17493:31;17518:5;17493:31;;17537:160;17632:59;17685:5;17632:59;;18203:150;18293:54;18341:5;18293:54;;18474:132;18555:45;18594:5;18555:45;;18688:488;18888:22;;18821:4;18812:14;;;18922:61;18816:3;18888:22;18922:61;;;18841:154;19069:4;19062:5;19058:16;19052:23;19087:62;19143:4;19138:3;19134:14;19121:11;19087:62;;;19005:156;18794:382;;;;19280:521;19511:22;;19439:4;19430:14;;;19545:59;19434:3;19511:22;19545:59;;19879:542;20079:22;;20008:4;19999:14;;;20113:59;20003:3;20079:22;20113:59;;;20028:156;20264:4;20257:5;20253:16;20247:23;20282:112;20388:4;20383:3;20379:14;20366:11;20282:112;;20533:635;20773:22;;20700:4;20691:14;;;20807:111;20695:3;20773:22;20807:111;;;20720:210;21011:4;21004:5;21000:16;20994:23;21029:112;21135:4;21130:3;21126:14;21113:11;21029:112;;21306:713;21572:22;;21499:4;21490:14;;;21606:137;21494:3;21572:22;21606:137;;;21519:236;21836:4;21829:5;21825:16;21819:23;21854:138;21986:4;21981:3;21977:14;21964:11;21854:138;;22924:552;23138:22;;23065:4;23056:14;;;23172:61;23060:3;23138:22;23172:61;;;23085:160;23323:4;23316:5;23312:16;23306:23;23341:108;23443:4;23438:3;23434:14;23421:11;23341:108;;23546:541;23740:22;;23671:4;23662:14;;;23774:61;23666:3;23740:22;23774:61;;;23691:156;23928:4;23921:5;23917:16;23911:23;23946:114;24054:4;24049:3;24045:14;24032:11;24368:22;;24302:4;24293:14;;;24402:61;24297:3;24368:22;24402:61;;;24322:153;24548:4;24541:5;24537:16;24531:23;24566:62;24622:4;24617:3;24613:14;24600:11;24566:62;;;24485:155;24713:4;24706:5;24702:16;24696:23;24731:58;24783:4;24778:3;24774:14;24761:11;24731:58;;24938:747;25194:22;;24938:747;;25123:4;25114:14;;;25228:107;25118:3;25194:22;25228:107;;;25143:204;25424:4;25417:5;25413:16;25407:23;25475:3;25469:4;25465:14;25458:4;25453:3;25449:14;25442:38;25495:152;25642:4;25629:11;25495:152;;;25487:160;25096:589;-1:-1;;;;;25096:589;26372:821;26580:22;;26509:4;26500:14;;;26614:59;26504:3;26580:22;26614:59;;;26529:156;26763:4;26756:5;26752:16;26746:23;26781:136;26911:4;26906:3;26902:14;26889:11;26781:136;;;26695:234;27010:4;27003:5;26999:16;26993:23;27028:138;27160:4;27155:3;27151:14;27138:11;27028:138;;27275:1702;27491:22;;27275:1702;;27420:5;27411:15;;;27525:61;27415:3;27491:22;27525:61;;;27441:157;27676:4;27669:5;27665:16;27659:23;27694:62;27750:4;27745:3;27741:14;27728:11;27694:62;;;27608:160;27853:4;27846:5;27842:16;27836:23;27871:62;27927:4;27922:3;27918:14;27905:11;27871:62;;;27778:167;28030:4;28023:5;28019:16;28013:23;28048:79;28121:4;28116:3;28112:14;28099:11;28048:79;;;27955:184;28216:4;28209:5;28205:16;28199:23;28234:116;28344:4;28339:3;28335:14;28322:11;28234:116;;;28149:213;28442:4;28435:5;28431:16;28425:23;28460:173;28626:5;28621:3;28617:15;28604:11;28460:173;;;28372:273;28721:4;28714:5;28710:16;28704:23;28773:3;28767:4;28763:14;28755:5;28750:3;28746:15;28739:39;28793:146;28934:4;28921:11;28793:146;;29049:2309;29259:22;;29049:2309;;29188:5;29179:15;;;29293:61;29183:3;29259:22;29293:61;;;29209:157;29444:4;29437:5;29433:16;29427:23;29462:60;29516:4;29511:3;29507:14;29494:11;29462:60;;;29376:158;29616:4;29609:5;29605:16;29599:23;29634:146;29774:4;29769:3;29765:14;29752:11;29634:146;;;29544:248;29868:4;29861:5;29857:16;29851:23;29886:60;29940:4;29935:3;29931:14;29918:11;29886:60;;;29802:156;30035:4;30028:5;30024:16;30018:23;30086:3;30080:4;30076:14;30069:4;30064:3;30060:14;30053:38;30106:106;30207:4;30194:11;30106:106;;;30098:114;;29968:256;30302:4;30295:5;30291:16;30285:23;30354:3;30348:4;30344:14;30336:5;30331:3;30327:15;30320:39;30374:106;30475:4;30462:11;30374:106;;;30366:114;;30234:258;30573:4;30566:5;30562:16;30556:23;30591:165;30749:5;30744:3;30740:15;30727:11;30591:165;;;30502:266;30844:4;30837:5;30833:16;30827:23;30862:105;30960:5;30955:3;30951:15;30938:11;30862:105;;;30778:201;31062:5;31055;31051:17;31045:24;31081:63;31137:5;31132:3;31128:15;31115:11;31081:63;;;30989:167;31238:5;31231;31227:17;31221:24;31257:63;31313:5;31308:3;31304:15;31291:11;31257:63;;;-1:-1;31349:4;29161:2197;-1:-1;;;29161:2197;32106:104;32175:29;32198:5;32175:29;;32217:193;32325:2;32310:18;;32339:61;32314:9;32373:6;32339:61;;;32296:114;;;;;32417:294;32553:2;32538:18;;32567:61;32542:9;32601:6;32567:61;;;32639:62;32697:2;32686:9;32682:18;32673:6;32639:62;;32718:411;32890:2;32875:18;;32904:61;32879:9;32938:6;32904:61;;;32976:62;33034:2;33023:9;33019:18;33010:6;32976:62;;;33049:70;33115:2;33104:9;33100:18;33091:6;33049:70;;33136:181;33238:2;33223:18;;33252:55;33227:9;33280:6;33252:55;;33324:193;33432:2;33417:18;;33446:61;33421:9;33480:6;33446:61;;33524:395;33688:2;33673:18;;33702:61;33677:9;33736:6;33702:61;;;33774:62;33832:2;33821:9;33817:18;33808:6;33774:62;;;33847;33905:2;33894:9;33890:18;33881:6;33847:62;;33926:237;34056:2;34041:18;;34070:83;34045:9;34126:6;34070:83;;34170:382;34350:2;34335:18;;34364:83;34339:9;34420:6;34364:83;;;34458:84;34538:2;34527:9;34523:18;34514:6;34458:84;;36452:337;36608:2;36622:47;;;36593:18;;36683:96;36593:18;36765:6;36683:96;;36796:256;36858:2;36852:9;36884:17;;;-1:-1;;;;;36944:34;;36980:22;;;36941:62;36938:2;;;37016:1;37013;37006:12;36938:2;37032;37025:22;36836:216;;-1:-1;36836:216;37059:281;;-1:-1;;;;;37233:6;37230:30;37227:2;;;37273:1;37270;37263:12;37227:2;-1:-1;37302:4;37290:17;;;37320:15;;37164:176;37349:144;37481:4;37469:17;;37450:43;37502:130;37615:12;;37599:33;37793:128;-1:-1;;;;;37862:54;;37845:76;37928:92;38001:13;37994:21;;37977:43;38027:79;38096:5;38079:27;38113:136;;38210:1;38200:12;;38190:2;;38216:9;38190:2;-1:-1;38239:5;38184:65;38427:88;38505:4;38494:16;;38477:38;38842:127;;38933:31;38958:5;38933:31;;39377:139;;39474:1;39464:12;;39454:2;;39490:1;39487;39480:12;40364:151;;40460:50;40504:5;40460:50;;40522:123;;40609:31;40634:5;40609:31;",
  "source": "/*\n * Hubii Nahmii\n *\n * Compliant with the Hubii Nahmii specification v0.12.\n *\n * Copyright (C) 2017-2018 Hubii AS\n */\n\npragma solidity ^0.4.25;\npragma experimental ABIEncoderV2;\n\nimport {Ownable} from \"./Ownable.sol\";\nimport {FraudChallengable} from \"./FraudChallengable.sol\";\nimport {Challenge} from \"./Challenge.sol\";\nimport {Validatable} from \"./Validatable.sol\";\nimport {SecurityBondable} from \"./SecurityBondable.sol\";\nimport {NahmiiTypesLib} from \"./NahmiiTypesLib.sol\";\n\n/**\n * @title FraudChallengeByDoubleSpentOrders\n * @notice Where driips are challenged wrt fraud by double spent orders\n */\ncontract FraudChallengeByDoubleSpentOrders is Ownable, FraudChallengable, Challenge, Validatable,\nSecurityBondable {\n    //\n    // Events\n    // -----------------------------------------------------------------------------------------------------------------\n    event ChallengeByDoubleSpentOrdersEvent(bytes32 tradeHash1, bytes32 tradeHash2, address challenger);\n\n    //\n    // Constructor\n    // -----------------------------------------------------------------------------------------------------------------\n    constructor(address deployer) Ownable(deployer) public {\n    }\n\n    //\n    // Functions\n    // -----------------------------------------------------------------------------------------------------------------\n    /// @notice Submit two trade candidates in continuous Fraud Challenge (FC) to be tested for\n    /// trade order double spenditure\n    /// @param trade1 First trade with double spent order\n    /// @param trade2 Last trade with double spent order\n    function challenge(\n        NahmiiTypesLib.Trade trade1,\n        NahmiiTypesLib.Trade trade2\n    )\n    public\n    onlyOperationalModeNormal\n    onlySealedTrade(trade1)\n    onlySealedTrade(trade2)\n    {\n        require(trade1.seal.hash != trade2.seal.hash);\n\n        // Gauge double expenditure in both sides of the trade\n        bool doubleSpentBuyOrder = trade1.buyer.order.hashes.operator == trade2.buyer.order.hashes.operator;\n        bool doubleSpentSellOrder = trade1.seller.order.hashes.operator == trade2.seller.order.hashes.operator;\n\n        // Require existence of fraud signal\n        require(doubleSpentBuyOrder || doubleSpentSellOrder);\n\n        // Toggle operational mode exit\n        configuration.setOperationalModeExit();\n\n        // Tag trades (hashes) as fraudulent\n        fraudChallenge.addFraudulentTradeHash(trade1.seal.hash);\n        fraudChallenge.addFraudulentTradeHash(trade2.seal.hash);\n\n        // Reward stake fraction\n        securityBond.rewardFractional(msg.sender, configuration.fraudStakeFraction(), 0);\n\n        // Tag wallet(s) as double spender(s)\n        if (doubleSpentBuyOrder)\n            fraudChallenge.addDoubleSpenderWallet(trade2.buyer.wallet);\n        if (doubleSpentSellOrder)\n            fraudChallenge.addDoubleSpenderWallet(trade2.seller.wallet);\n\n        // Emit event\n        emit ChallengeByDoubleSpentOrdersEvent(\n            trade1.seal.hash, trade2.seal.hash, msg.sender\n        );\n    }\n}",
  "sourcePath": "/opt/buildagent/work/855e104608380c36/contracts/FraudChallengeByDoubleSpentOrders.sol",
  "ast": {
    "absolutePath": "/opt/buildagent/work/855e104608380c36/contracts/FraudChallengeByDoubleSpentOrders.sol",
    "exportedSymbols": {
      "FraudChallengeByDoubleSpentOrders": [
        12920
      ]
    },
    "id": 12921,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 12756,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".25"
        ],
        "nodeType": "PragmaDirective",
        "src": "122:24:30"
      },
      {
        "id": 12757,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "147:33:30"
      },
      {
        "absolutePath": "/opt/buildagent/work/855e104608380c36/contracts/Ownable.sol",
        "file": "./Ownable.sol",
        "id": 12759,
        "nodeType": "ImportDirective",
        "scope": 12921,
        "sourceUnit": 21114,
        "src": "182:38:30",
        "symbolAliases": [
          {
            "foreign": 12758,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/opt/buildagent/work/855e104608380c36/contracts/FraudChallengable.sol",
        "file": "./FraudChallengable.sol",
        "id": 12761,
        "nodeType": "ImportDirective",
        "scope": 12921,
        "sourceUnit": 12467,
        "src": "221:58:30",
        "symbolAliases": [
          {
            "foreign": 12760,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/opt/buildagent/work/855e104608380c36/contracts/Challenge.sol",
        "file": "./Challenge.sol",
        "id": 12763,
        "nodeType": "ImportDirective",
        "scope": 12921,
        "sourceUnit": 3740,
        "src": "280:42:30",
        "symbolAliases": [
          {
            "foreign": 12762,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/opt/buildagent/work/855e104608380c36/contracts/Validatable.sol",
        "file": "./Validatable.sol",
        "id": 12765,
        "nodeType": "ImportDirective",
        "scope": 12921,
        "sourceUnit": 30868,
        "src": "323:46:30",
        "symbolAliases": [
          {
            "foreign": 12764,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/opt/buildagent/work/855e104608380c36/contracts/SecurityBondable.sol",
        "file": "./SecurityBondable.sol",
        "id": 12767,
        "nodeType": "ImportDirective",
        "scope": 12921,
        "sourceUnit": 26731,
        "src": "370:56:30",
        "symbolAliases": [
          {
            "foreign": 12766,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/opt/buildagent/work/855e104608380c36/contracts/NahmiiTypesLib.sol",
        "file": "./NahmiiTypesLib.sol",
        "id": 12769,
        "nodeType": "ImportDirective",
        "scope": 12921,
        "sourceUnit": 17388,
        "src": "427:52:30",
        "symbolAliases": [
          {
            "foreign": 12768,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 12770,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 21113,
              "src": "651:7:30",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$21113",
                "typeString": "contract Ownable"
              }
            },
            "id": 12771,
            "nodeType": "InheritanceSpecifier",
            "src": "651:7:30"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 12772,
              "name": "FraudChallengable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 12466,
              "src": "660:17:30",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FraudChallengable_$12466",
                "typeString": "contract FraudChallengable"
              }
            },
            "id": 12773,
            "nodeType": "InheritanceSpecifier",
            "src": "660:17:30"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 12774,
              "name": "Challenge",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3739,
              "src": "679:9:30",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Challenge_$3739",
                "typeString": "contract Challenge"
              }
            },
            "id": 12775,
            "nodeType": "InheritanceSpecifier",
            "src": "679:9:30"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 12776,
              "name": "Validatable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 30867,
              "src": "690:11:30",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Validatable_$30867",
                "typeString": "contract Validatable"
              }
            },
            "id": 12777,
            "nodeType": "InheritanceSpecifier",
            "src": "690:11:30"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 12778,
              "name": "SecurityBondable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 26730,
              "src": "703:16:30",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SecurityBondable_$26730",
                "typeString": "contract SecurityBondable"
              }
            },
            "id": 12779,
            "nodeType": "InheritanceSpecifier",
            "src": "703:16:30"
          }
        ],
        "contractDependencies": [
          3739,
          5563,
          12466,
          17125,
          21113,
          26730,
          26796,
          30867
        ],
        "contractKind": "contract",
        "documentation": "@title FraudChallengeByDoubleSpentOrders\n@notice Where driips are challenged wrt fraud by double spent orders",
        "fullyImplemented": true,
        "id": 12920,
        "linearizedBaseContracts": [
          12920,
          26730,
          30867,
          3739,
          5563,
          12466,
          21113,
          26796,
          17125
        ],
        "name": "FraudChallengeByDoubleSpentOrders",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": null,
            "id": 12787,
            "name": "ChallengeByDoubleSpentOrdersEvent",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 12786,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12781,
                  "indexed": false,
                  "name": "tradeHash1",
                  "nodeType": "VariableDeclaration",
                  "scope": 12787,
                  "src": "908:18:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 12780,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "908:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12783,
                  "indexed": false,
                  "name": "tradeHash2",
                  "nodeType": "VariableDeclaration",
                  "scope": 12787,
                  "src": "928:18:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 12782,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "928:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12785,
                  "indexed": false,
                  "name": "challenger",
                  "nodeType": "VariableDeclaration",
                  "scope": 12787,
                  "src": "948:18:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12784,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "948:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "907:60:30"
            },
            "src": "868:100:30"
          },
          {
            "body": {
              "id": 12795,
              "nodeType": "Block",
              "src": "1176:7:30",
              "statements": []
            },
            "documentation": null,
            "id": 12796,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 12792,
                    "name": "deployer",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 12789,
                    "src": "1159:8:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 12793,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 12791,
                  "name": "Ownable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 21113,
                  "src": "1151:7:30",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Ownable_$21113_$",
                    "typeString": "type(contract Ownable)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1151:17:30"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12790,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12789,
                  "name": "deployer",
                  "nodeType": "VariableDeclaration",
                  "scope": 12796,
                  "src": "1133:16:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12788,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1133:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1132:18:30"
            },
            "payable": false,
            "returnParameters": {
              "id": 12794,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1176:0:30"
            },
            "scope": 12920,
            "src": "1121:62:30",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 12918,
              "nodeType": "Block",
              "src": "1783:1244:30",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 12818,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 12812,
                              "name": "trade1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12798,
                              "src": "1801:6:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$17325_memory_ptr",
                                "typeString": "struct NahmiiTypesLib.Trade memory"
                              }
                            },
                            "id": 12813,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "seal",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 17320,
                            "src": "1801:11:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Seal_$17284_memory",
                              "typeString": "struct NahmiiTypesLib.Seal memory"
                            }
                          },
                          "id": 12814,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "hash",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17281,
                          "src": "1801:16:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 12815,
                              "name": "trade2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12800,
                              "src": "1821:6:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$17325_memory_ptr",
                                "typeString": "struct NahmiiTypesLib.Trade memory"
                              }
                            },
                            "id": 12816,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "seal",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 17320,
                            "src": "1821:11:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Seal_$17284_memory",
                              "typeString": "struct NahmiiTypesLib.Seal memory"
                            }
                          },
                          "id": 12817,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "hash",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17281,
                          "src": "1821:16:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "1801:36:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 12811,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        42425,
                        42426
                      ],
                      "referencedDeclaration": 42425,
                      "src": "1793:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 12819,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1793:45:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12820,
                  "nodeType": "ExpressionStatement",
                  "src": "1793:45:30"
                },
                {
                  "assignments": [
                    12822
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 12822,
                      "name": "doubleSpentBuyOrder",
                      "nodeType": "VariableDeclaration",
                      "scope": 12919,
                      "src": "1912:24:30",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 12821,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1912:4:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 12834,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 12833,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 12823,
                              "name": "trade1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12798,
                              "src": "1939:6:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$17325_memory_ptr",
                                "typeString": "struct NahmiiTypesLib.Trade memory"
                              }
                            },
                            "id": 12824,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "buyer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 17314,
                            "src": "1939:12:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeParty_$17304_memory",
                              "typeString": "struct NahmiiTypesLib.TradeParty memory"
                            }
                          },
                          "id": 12825,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "order",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17299,
                          "src": "1939:18:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeOrder_$17272_memory",
                            "typeString": "struct NahmiiTypesLib.TradeOrder memory"
                          }
                        },
                        "id": 12826,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "hashes",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 17269,
                        "src": "1939:25:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_WalletOperatorHashes_$17265_memory",
                          "typeString": "struct NahmiiTypesLib.WalletOperatorHashes memory"
                        }
                      },
                      "id": 12827,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "operator",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17264,
                      "src": "1939:34:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 12828,
                              "name": "trade2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12800,
                              "src": "1977:6:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$17325_memory_ptr",
                                "typeString": "struct NahmiiTypesLib.Trade memory"
                              }
                            },
                            "id": 12829,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "buyer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 17314,
                            "src": "1977:12:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeParty_$17304_memory",
                              "typeString": "struct NahmiiTypesLib.TradeParty memory"
                            }
                          },
                          "id": 12830,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "order",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17299,
                          "src": "1977:18:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeOrder_$17272_memory",
                            "typeString": "struct NahmiiTypesLib.TradeOrder memory"
                          }
                        },
                        "id": 12831,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "hashes",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 17269,
                        "src": "1977:25:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_WalletOperatorHashes_$17265_memory",
                          "typeString": "struct NahmiiTypesLib.WalletOperatorHashes memory"
                        }
                      },
                      "id": 12832,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "operator",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17264,
                      "src": "1977:34:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "1939:72:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1912:99:30"
                },
                {
                  "assignments": [
                    12836
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 12836,
                      "name": "doubleSpentSellOrder",
                      "nodeType": "VariableDeclaration",
                      "scope": 12919,
                      "src": "2021:25:30",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 12835,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2021:4:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 12848,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 12847,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 12837,
                              "name": "trade1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12798,
                              "src": "2049:6:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$17325_memory_ptr",
                                "typeString": "struct NahmiiTypesLib.Trade memory"
                              }
                            },
                            "id": 12838,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "seller",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 17316,
                            "src": "2049:13:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeParty_$17304_memory",
                              "typeString": "struct NahmiiTypesLib.TradeParty memory"
                            }
                          },
                          "id": 12839,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "order",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17299,
                          "src": "2049:19:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeOrder_$17272_memory",
                            "typeString": "struct NahmiiTypesLib.TradeOrder memory"
                          }
                        },
                        "id": 12840,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "hashes",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 17269,
                        "src": "2049:26:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_WalletOperatorHashes_$17265_memory",
                          "typeString": "struct NahmiiTypesLib.WalletOperatorHashes memory"
                        }
                      },
                      "id": 12841,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "operator",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17264,
                      "src": "2049:35:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 12842,
                              "name": "trade2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12800,
                              "src": "2088:6:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$17325_memory_ptr",
                                "typeString": "struct NahmiiTypesLib.Trade memory"
                              }
                            },
                            "id": 12843,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "seller",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 17316,
                            "src": "2088:13:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeParty_$17304_memory",
                              "typeString": "struct NahmiiTypesLib.TradeParty memory"
                            }
                          },
                          "id": 12844,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "order",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17299,
                          "src": "2088:19:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeOrder_$17272_memory",
                            "typeString": "struct NahmiiTypesLib.TradeOrder memory"
                          }
                        },
                        "id": 12845,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "hashes",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 17269,
                        "src": "2088:26:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_WalletOperatorHashes_$17265_memory",
                          "typeString": "struct NahmiiTypesLib.WalletOperatorHashes memory"
                        }
                      },
                      "id": 12846,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "operator",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17264,
                      "src": "2088:35:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "2049:74:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2021:102:30"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 12852,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 12850,
                          "name": "doubleSpentBuyOrder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12822,
                          "src": "2187:19:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 12851,
                          "name": "doubleSpentSellOrder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12836,
                          "src": "2210:20:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2187:43:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 12849,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        42425,
                        42426
                      ],
                      "referencedDeclaration": 42425,
                      "src": "2179:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 12853,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2179:52:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12854,
                  "nodeType": "ExpressionStatement",
                  "src": "2179:52:30"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 12855,
                        "name": "configuration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5516,
                        "src": "2282:13:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Configuration_$6930",
                          "typeString": "contract Configuration"
                        }
                      },
                      "id": 12857,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setOperationalModeExit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5860,
                      "src": "2282:36:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 12858,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2282:38:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12859,
                  "nodeType": "ExpressionStatement",
                  "src": "2282:38:30"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 12863,
                            "name": "trade1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12798,
                            "src": "2414:6:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$17325_memory_ptr",
                              "typeString": "struct NahmiiTypesLib.Trade memory"
                            }
                          },
                          "id": 12864,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "seal",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17320,
                          "src": "2414:11:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Seal_$17284_memory",
                            "typeString": "struct NahmiiTypesLib.Seal memory"
                          }
                        },
                        "id": 12865,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "hash",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 17281,
                        "src": "2414:16:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 12860,
                        "name": "fraudChallenge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12419,
                        "src": "2376:14:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FraudChallenge_$12754",
                          "typeString": "contract FraudChallenge"
                        }
                      },
                      "id": 12862,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addFraudulentTradeHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12701,
                      "src": "2376:37:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 12866,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2376:55:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12867,
                  "nodeType": "ExpressionStatement",
                  "src": "2376:55:30"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 12871,
                            "name": "trade2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12800,
                            "src": "2479:6:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$17325_memory_ptr",
                              "typeString": "struct NahmiiTypesLib.Trade memory"
                            }
                          },
                          "id": 12872,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "seal",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17320,
                          "src": "2479:11:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Seal_$17284_memory",
                            "typeString": "struct NahmiiTypesLib.Seal memory"
                          }
                        },
                        "id": 12873,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "hash",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 17281,
                        "src": "2479:16:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 12868,
                        "name": "fraudChallenge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12419,
                        "src": "2441:14:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FraudChallenge_$12754",
                          "typeString": "contract FraudChallenge"
                        }
                      },
                      "id": 12870,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addFraudulentTradeHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12701,
                      "src": "2441:37:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 12874,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2441:55:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12875,
                  "nodeType": "ExpressionStatement",
                  "src": "2441:55:30"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 12879,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42422,
                          "src": "2570:3:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 12880,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2570:10:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 12881,
                            "name": "configuration",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5516,
                            "src": "2582:13:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Configuration_$6930",
                              "typeString": "contract Configuration"
                            }
                          },
                          "id": 12882,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "fraudStakeFraction",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6702,
                          "src": "2582:32:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 12883,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2582:34:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 12884,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2618:1:30",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 12876,
                        "name": "securityBond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26683,
                        "src": "2540:12:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SecurityBond_$26673",
                          "typeString": "contract SecurityBond"
                        }
                      },
                      "id": 12878,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "rewardFractional",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26073,
                      "src": "2540:29:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256) external"
                      }
                    },
                    "id": 12885,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2540:80:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12886,
                  "nodeType": "ExpressionStatement",
                  "src": "2540:80:30"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 12887,
                    "name": "doubleSpentBuyOrder",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 12822,
                    "src": "2681:19:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 12896,
                  "nodeType": "IfStatement",
                  "src": "2677:95:30",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 12891,
                              "name": "trade2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12800,
                              "src": "2752:6:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$17325_memory_ptr",
                                "typeString": "struct NahmiiTypesLib.Trade memory"
                              }
                            },
                            "id": 12892,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "buyer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 17314,
                            "src": "2752:12:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeParty_$17304_memory",
                              "typeString": "struct NahmiiTypesLib.TradeParty memory"
                            }
                          },
                          "id": 12893,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "wallet",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17293,
                          "src": "2752:19:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 12888,
                          "name": "fraudChallenge",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12419,
                          "src": "2714:14:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FraudChallenge_$12754",
                            "typeString": "contract FraudChallenge"
                          }
                        },
                        "id": 12890,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "addDoubleSpenderWallet",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 12597,
                        "src": "2714:37:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                          "typeString": "function (address) external"
                        }
                      },
                      "id": 12894,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2714:58:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 12895,
                    "nodeType": "ExpressionStatement",
                    "src": "2714:58:30"
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 12897,
                    "name": "doubleSpentSellOrder",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 12836,
                    "src": "2786:20:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 12906,
                  "nodeType": "IfStatement",
                  "src": "2782:97:30",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 12901,
                              "name": "trade2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12800,
                              "src": "2858:6:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$17325_memory_ptr",
                                "typeString": "struct NahmiiTypesLib.Trade memory"
                              }
                            },
                            "id": 12902,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "seller",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 17316,
                            "src": "2858:13:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeParty_$17304_memory",
                              "typeString": "struct NahmiiTypesLib.TradeParty memory"
                            }
                          },
                          "id": 12903,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "wallet",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17293,
                          "src": "2858:20:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 12898,
                          "name": "fraudChallenge",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12419,
                          "src": "2820:14:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FraudChallenge_$12754",
                            "typeString": "contract FraudChallenge"
                          }
                        },
                        "id": 12900,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "addDoubleSpenderWallet",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 12597,
                        "src": "2820:37:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                          "typeString": "function (address) external"
                        }
                      },
                      "id": 12904,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2820:59:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 12905,
                    "nodeType": "ExpressionStatement",
                    "src": "2820:59:30"
                  }
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 12908,
                            "name": "trade1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12798,
                            "src": "2964:6:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$17325_memory_ptr",
                              "typeString": "struct NahmiiTypesLib.Trade memory"
                            }
                          },
                          "id": 12909,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "seal",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17320,
                          "src": "2964:11:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Seal_$17284_memory",
                            "typeString": "struct NahmiiTypesLib.Seal memory"
                          }
                        },
                        "id": 12910,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "hash",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 17281,
                        "src": "2964:16:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 12911,
                            "name": "trade2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12800,
                            "src": "2982:6:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$17325_memory_ptr",
                              "typeString": "struct NahmiiTypesLib.Trade memory"
                            }
                          },
                          "id": 12912,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "seal",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17320,
                          "src": "2982:11:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Seal_$17284_memory",
                            "typeString": "struct NahmiiTypesLib.Seal memory"
                          }
                        },
                        "id": 12913,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "hash",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 17281,
                        "src": "2982:16:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 12914,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42422,
                          "src": "3000:3:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 12915,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3000:10:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 12907,
                      "name": "ChallengeByDoubleSpentOrdersEvent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12787,
                      "src": "2917:33:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,bytes32,address)"
                      }
                    },
                    "id": 12916,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2917:103:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12917,
                  "nodeType": "EmitStatement",
                  "src": "2912:108:30"
                }
              ]
            },
            "documentation": "@notice Submit two trade candidates in continuous Fraud Challenge (FC) to be tested for\n trade order double spenditure\n @param trade1 First trade with double spent order\n @param trade2 Last trade with double spent order",
            "id": 12919,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 12803,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 12802,
                  "name": "onlyOperationalModeNormal",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3738,
                  "src": "1697:25:30",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1697:25:30"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 12805,
                    "name": "trade1",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 12798,
                    "src": "1743:6:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$17325_memory_ptr",
                      "typeString": "struct NahmiiTypesLib.Trade memory"
                    }
                  }
                ],
                "id": 12806,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 12804,
                  "name": "onlySealedTrade",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 30792,
                  "src": "1727:15:30",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_struct$_Trade_$17325_memory_ptr_$",
                    "typeString": "modifier (struct NahmiiTypesLib.Trade memory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1727:23:30"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 12808,
                    "name": "trade2",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 12800,
                    "src": "1771:6:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$17325_memory_ptr",
                      "typeString": "struct NahmiiTypesLib.Trade memory"
                    }
                  }
                ],
                "id": 12809,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 12807,
                  "name": "onlySealedTrade",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 30792,
                  "src": "1755:15:30",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_struct$_Trade_$17325_memory_ptr_$",
                    "typeString": "modifier (struct NahmiiTypesLib.Trade memory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1755:23:30"
              }
            ],
            "name": "challenge",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12801,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12798,
                  "name": "trade1",
                  "nodeType": "VariableDeclaration",
                  "scope": 12919,
                  "src": "1611:27:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Trade_$17325_memory_ptr",
                    "typeString": "struct NahmiiTypesLib.Trade"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 12797,
                    "name": "NahmiiTypesLib.Trade",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 17325,
                    "src": "1611:20:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$17325_storage_ptr",
                      "typeString": "struct NahmiiTypesLib.Trade"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12800,
                  "name": "trade2",
                  "nodeType": "VariableDeclaration",
                  "scope": 12919,
                  "src": "1648:27:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Trade_$17325_memory_ptr",
                    "typeString": "struct NahmiiTypesLib.Trade"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 12799,
                    "name": "NahmiiTypesLib.Trade",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 17325,
                    "src": "1648:20:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$17325_storage_ptr",
                      "typeString": "struct NahmiiTypesLib.Trade"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1601:80:30"
            },
            "payable": false,
            "returnParameters": {
              "id": 12810,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1783:0:30"
            },
            "scope": 12920,
            "src": "1583:1444:30",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 12921,
        "src": "605:2424:30"
      }
    ],
    "src": "122:2907:30"
  },
  "legacyAST": {
    "absolutePath": "/opt/buildagent/work/855e104608380c36/contracts/FraudChallengeByDoubleSpentOrders.sol",
    "exportedSymbols": {
      "FraudChallengeByDoubleSpentOrders": [
        12920
      ]
    },
    "id": 12921,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 12756,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".25"
        ],
        "nodeType": "PragmaDirective",
        "src": "122:24:30"
      },
      {
        "id": 12757,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "147:33:30"
      },
      {
        "absolutePath": "/opt/buildagent/work/855e104608380c36/contracts/Ownable.sol",
        "file": "./Ownable.sol",
        "id": 12759,
        "nodeType": "ImportDirective",
        "scope": 12921,
        "sourceUnit": 21114,
        "src": "182:38:30",
        "symbolAliases": [
          {
            "foreign": 12758,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/opt/buildagent/work/855e104608380c36/contracts/FraudChallengable.sol",
        "file": "./FraudChallengable.sol",
        "id": 12761,
        "nodeType": "ImportDirective",
        "scope": 12921,
        "sourceUnit": 12467,
        "src": "221:58:30",
        "symbolAliases": [
          {
            "foreign": 12760,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/opt/buildagent/work/855e104608380c36/contracts/Challenge.sol",
        "file": "./Challenge.sol",
        "id": 12763,
        "nodeType": "ImportDirective",
        "scope": 12921,
        "sourceUnit": 3740,
        "src": "280:42:30",
        "symbolAliases": [
          {
            "foreign": 12762,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/opt/buildagent/work/855e104608380c36/contracts/Validatable.sol",
        "file": "./Validatable.sol",
        "id": 12765,
        "nodeType": "ImportDirective",
        "scope": 12921,
        "sourceUnit": 30868,
        "src": "323:46:30",
        "symbolAliases": [
          {
            "foreign": 12764,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/opt/buildagent/work/855e104608380c36/contracts/SecurityBondable.sol",
        "file": "./SecurityBondable.sol",
        "id": 12767,
        "nodeType": "ImportDirective",
        "scope": 12921,
        "sourceUnit": 26731,
        "src": "370:56:30",
        "symbolAliases": [
          {
            "foreign": 12766,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/opt/buildagent/work/855e104608380c36/contracts/NahmiiTypesLib.sol",
        "file": "./NahmiiTypesLib.sol",
        "id": 12769,
        "nodeType": "ImportDirective",
        "scope": 12921,
        "sourceUnit": 17388,
        "src": "427:52:30",
        "symbolAliases": [
          {
            "foreign": 12768,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 12770,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 21113,
              "src": "651:7:30",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$21113",
                "typeString": "contract Ownable"
              }
            },
            "id": 12771,
            "nodeType": "InheritanceSpecifier",
            "src": "651:7:30"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 12772,
              "name": "FraudChallengable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 12466,
              "src": "660:17:30",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FraudChallengable_$12466",
                "typeString": "contract FraudChallengable"
              }
            },
            "id": 12773,
            "nodeType": "InheritanceSpecifier",
            "src": "660:17:30"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 12774,
              "name": "Challenge",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3739,
              "src": "679:9:30",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Challenge_$3739",
                "typeString": "contract Challenge"
              }
            },
            "id": 12775,
            "nodeType": "InheritanceSpecifier",
            "src": "679:9:30"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 12776,
              "name": "Validatable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 30867,
              "src": "690:11:30",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Validatable_$30867",
                "typeString": "contract Validatable"
              }
            },
            "id": 12777,
            "nodeType": "InheritanceSpecifier",
            "src": "690:11:30"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 12778,
              "name": "SecurityBondable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 26730,
              "src": "703:16:30",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SecurityBondable_$26730",
                "typeString": "contract SecurityBondable"
              }
            },
            "id": 12779,
            "nodeType": "InheritanceSpecifier",
            "src": "703:16:30"
          }
        ],
        "contractDependencies": [
          3739,
          5563,
          12466,
          17125,
          21113,
          26730,
          26796,
          30867
        ],
        "contractKind": "contract",
        "documentation": "@title FraudChallengeByDoubleSpentOrders\n@notice Where driips are challenged wrt fraud by double spent orders",
        "fullyImplemented": true,
        "id": 12920,
        "linearizedBaseContracts": [
          12920,
          26730,
          30867,
          3739,
          5563,
          12466,
          21113,
          26796,
          17125
        ],
        "name": "FraudChallengeByDoubleSpentOrders",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": null,
            "id": 12787,
            "name": "ChallengeByDoubleSpentOrdersEvent",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 12786,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12781,
                  "indexed": false,
                  "name": "tradeHash1",
                  "nodeType": "VariableDeclaration",
                  "scope": 12787,
                  "src": "908:18:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 12780,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "908:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12783,
                  "indexed": false,
                  "name": "tradeHash2",
                  "nodeType": "VariableDeclaration",
                  "scope": 12787,
                  "src": "928:18:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 12782,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "928:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12785,
                  "indexed": false,
                  "name": "challenger",
                  "nodeType": "VariableDeclaration",
                  "scope": 12787,
                  "src": "948:18:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12784,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "948:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "907:60:30"
            },
            "src": "868:100:30"
          },
          {
            "body": {
              "id": 12795,
              "nodeType": "Block",
              "src": "1176:7:30",
              "statements": []
            },
            "documentation": null,
            "id": 12796,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 12792,
                    "name": "deployer",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 12789,
                    "src": "1159:8:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 12793,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 12791,
                  "name": "Ownable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 21113,
                  "src": "1151:7:30",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Ownable_$21113_$",
                    "typeString": "type(contract Ownable)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1151:17:30"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12790,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12789,
                  "name": "deployer",
                  "nodeType": "VariableDeclaration",
                  "scope": 12796,
                  "src": "1133:16:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12788,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1133:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1132:18:30"
            },
            "payable": false,
            "returnParameters": {
              "id": 12794,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1176:0:30"
            },
            "scope": 12920,
            "src": "1121:62:30",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 12918,
              "nodeType": "Block",
              "src": "1783:1244:30",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 12818,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 12812,
                              "name": "trade1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12798,
                              "src": "1801:6:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$17325_memory_ptr",
                                "typeString": "struct NahmiiTypesLib.Trade memory"
                              }
                            },
                            "id": 12813,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "seal",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 17320,
                            "src": "1801:11:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Seal_$17284_memory",
                              "typeString": "struct NahmiiTypesLib.Seal memory"
                            }
                          },
                          "id": 12814,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "hash",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17281,
                          "src": "1801:16:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 12815,
                              "name": "trade2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12800,
                              "src": "1821:6:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$17325_memory_ptr",
                                "typeString": "struct NahmiiTypesLib.Trade memory"
                              }
                            },
                            "id": 12816,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "seal",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 17320,
                            "src": "1821:11:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Seal_$17284_memory",
                              "typeString": "struct NahmiiTypesLib.Seal memory"
                            }
                          },
                          "id": 12817,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "hash",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17281,
                          "src": "1821:16:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "1801:36:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 12811,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        42425,
                        42426
                      ],
                      "referencedDeclaration": 42425,
                      "src": "1793:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 12819,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1793:45:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12820,
                  "nodeType": "ExpressionStatement",
                  "src": "1793:45:30"
                },
                {
                  "assignments": [
                    12822
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 12822,
                      "name": "doubleSpentBuyOrder",
                      "nodeType": "VariableDeclaration",
                      "scope": 12919,
                      "src": "1912:24:30",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 12821,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1912:4:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 12834,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 12833,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 12823,
                              "name": "trade1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12798,
                              "src": "1939:6:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$17325_memory_ptr",
                                "typeString": "struct NahmiiTypesLib.Trade memory"
                              }
                            },
                            "id": 12824,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "buyer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 17314,
                            "src": "1939:12:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeParty_$17304_memory",
                              "typeString": "struct NahmiiTypesLib.TradeParty memory"
                            }
                          },
                          "id": 12825,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "order",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17299,
                          "src": "1939:18:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeOrder_$17272_memory",
                            "typeString": "struct NahmiiTypesLib.TradeOrder memory"
                          }
                        },
                        "id": 12826,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "hashes",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 17269,
                        "src": "1939:25:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_WalletOperatorHashes_$17265_memory",
                          "typeString": "struct NahmiiTypesLib.WalletOperatorHashes memory"
                        }
                      },
                      "id": 12827,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "operator",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17264,
                      "src": "1939:34:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 12828,
                              "name": "trade2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12800,
                              "src": "1977:6:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$17325_memory_ptr",
                                "typeString": "struct NahmiiTypesLib.Trade memory"
                              }
                            },
                            "id": 12829,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "buyer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 17314,
                            "src": "1977:12:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeParty_$17304_memory",
                              "typeString": "struct NahmiiTypesLib.TradeParty memory"
                            }
                          },
                          "id": 12830,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "order",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17299,
                          "src": "1977:18:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeOrder_$17272_memory",
                            "typeString": "struct NahmiiTypesLib.TradeOrder memory"
                          }
                        },
                        "id": 12831,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "hashes",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 17269,
                        "src": "1977:25:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_WalletOperatorHashes_$17265_memory",
                          "typeString": "struct NahmiiTypesLib.WalletOperatorHashes memory"
                        }
                      },
                      "id": 12832,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "operator",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17264,
                      "src": "1977:34:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "1939:72:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1912:99:30"
                },
                {
                  "assignments": [
                    12836
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 12836,
                      "name": "doubleSpentSellOrder",
                      "nodeType": "VariableDeclaration",
                      "scope": 12919,
                      "src": "2021:25:30",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 12835,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2021:4:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 12848,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 12847,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 12837,
                              "name": "trade1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12798,
                              "src": "2049:6:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$17325_memory_ptr",
                                "typeString": "struct NahmiiTypesLib.Trade memory"
                              }
                            },
                            "id": 12838,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "seller",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 17316,
                            "src": "2049:13:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeParty_$17304_memory",
                              "typeString": "struct NahmiiTypesLib.TradeParty memory"
                            }
                          },
                          "id": 12839,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "order",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17299,
                          "src": "2049:19:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeOrder_$17272_memory",
                            "typeString": "struct NahmiiTypesLib.TradeOrder memory"
                          }
                        },
                        "id": 12840,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "hashes",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 17269,
                        "src": "2049:26:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_WalletOperatorHashes_$17265_memory",
                          "typeString": "struct NahmiiTypesLib.WalletOperatorHashes memory"
                        }
                      },
                      "id": 12841,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "operator",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17264,
                      "src": "2049:35:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 12842,
                              "name": "trade2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12800,
                              "src": "2088:6:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$17325_memory_ptr",
                                "typeString": "struct NahmiiTypesLib.Trade memory"
                              }
                            },
                            "id": 12843,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "seller",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 17316,
                            "src": "2088:13:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeParty_$17304_memory",
                              "typeString": "struct NahmiiTypesLib.TradeParty memory"
                            }
                          },
                          "id": 12844,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "order",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17299,
                          "src": "2088:19:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeOrder_$17272_memory",
                            "typeString": "struct NahmiiTypesLib.TradeOrder memory"
                          }
                        },
                        "id": 12845,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "hashes",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 17269,
                        "src": "2088:26:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_WalletOperatorHashes_$17265_memory",
                          "typeString": "struct NahmiiTypesLib.WalletOperatorHashes memory"
                        }
                      },
                      "id": 12846,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "operator",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17264,
                      "src": "2088:35:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "2049:74:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2021:102:30"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 12852,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 12850,
                          "name": "doubleSpentBuyOrder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12822,
                          "src": "2187:19:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 12851,
                          "name": "doubleSpentSellOrder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12836,
                          "src": "2210:20:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2187:43:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 12849,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        42425,
                        42426
                      ],
                      "referencedDeclaration": 42425,
                      "src": "2179:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 12853,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2179:52:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12854,
                  "nodeType": "ExpressionStatement",
                  "src": "2179:52:30"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 12855,
                        "name": "configuration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5516,
                        "src": "2282:13:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Configuration_$6930",
                          "typeString": "contract Configuration"
                        }
                      },
                      "id": 12857,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setOperationalModeExit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5860,
                      "src": "2282:36:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 12858,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2282:38:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12859,
                  "nodeType": "ExpressionStatement",
                  "src": "2282:38:30"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 12863,
                            "name": "trade1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12798,
                            "src": "2414:6:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$17325_memory_ptr",
                              "typeString": "struct NahmiiTypesLib.Trade memory"
                            }
                          },
                          "id": 12864,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "seal",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17320,
                          "src": "2414:11:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Seal_$17284_memory",
                            "typeString": "struct NahmiiTypesLib.Seal memory"
                          }
                        },
                        "id": 12865,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "hash",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 17281,
                        "src": "2414:16:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 12860,
                        "name": "fraudChallenge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12419,
                        "src": "2376:14:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FraudChallenge_$12754",
                          "typeString": "contract FraudChallenge"
                        }
                      },
                      "id": 12862,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addFraudulentTradeHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12701,
                      "src": "2376:37:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 12866,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2376:55:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12867,
                  "nodeType": "ExpressionStatement",
                  "src": "2376:55:30"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 12871,
                            "name": "trade2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12800,
                            "src": "2479:6:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$17325_memory_ptr",
                              "typeString": "struct NahmiiTypesLib.Trade memory"
                            }
                          },
                          "id": 12872,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "seal",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17320,
                          "src": "2479:11:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Seal_$17284_memory",
                            "typeString": "struct NahmiiTypesLib.Seal memory"
                          }
                        },
                        "id": 12873,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "hash",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 17281,
                        "src": "2479:16:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 12868,
                        "name": "fraudChallenge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12419,
                        "src": "2441:14:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FraudChallenge_$12754",
                          "typeString": "contract FraudChallenge"
                        }
                      },
                      "id": 12870,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addFraudulentTradeHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12701,
                      "src": "2441:37:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 12874,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2441:55:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12875,
                  "nodeType": "ExpressionStatement",
                  "src": "2441:55:30"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 12879,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42422,
                          "src": "2570:3:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 12880,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2570:10:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 12881,
                            "name": "configuration",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5516,
                            "src": "2582:13:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Configuration_$6930",
                              "typeString": "contract Configuration"
                            }
                          },
                          "id": 12882,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "fraudStakeFraction",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6702,
                          "src": "2582:32:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 12883,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2582:34:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 12884,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2618:1:30",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 12876,
                        "name": "securityBond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26683,
                        "src": "2540:12:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SecurityBond_$26673",
                          "typeString": "contract SecurityBond"
                        }
                      },
                      "id": 12878,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "rewardFractional",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26073,
                      "src": "2540:29:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256) external"
                      }
                    },
                    "id": 12885,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2540:80:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12886,
                  "nodeType": "ExpressionStatement",
                  "src": "2540:80:30"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 12887,
                    "name": "doubleSpentBuyOrder",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 12822,
                    "src": "2681:19:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 12896,
                  "nodeType": "IfStatement",
                  "src": "2677:95:30",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 12891,
                              "name": "trade2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12800,
                              "src": "2752:6:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$17325_memory_ptr",
                                "typeString": "struct NahmiiTypesLib.Trade memory"
                              }
                            },
                            "id": 12892,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "buyer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 17314,
                            "src": "2752:12:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeParty_$17304_memory",
                              "typeString": "struct NahmiiTypesLib.TradeParty memory"
                            }
                          },
                          "id": 12893,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "wallet",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17293,
                          "src": "2752:19:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 12888,
                          "name": "fraudChallenge",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12419,
                          "src": "2714:14:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FraudChallenge_$12754",
                            "typeString": "contract FraudChallenge"
                          }
                        },
                        "id": 12890,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "addDoubleSpenderWallet",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 12597,
                        "src": "2714:37:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                          "typeString": "function (address) external"
                        }
                      },
                      "id": 12894,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2714:58:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 12895,
                    "nodeType": "ExpressionStatement",
                    "src": "2714:58:30"
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 12897,
                    "name": "doubleSpentSellOrder",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 12836,
                    "src": "2786:20:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 12906,
                  "nodeType": "IfStatement",
                  "src": "2782:97:30",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 12901,
                              "name": "trade2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12800,
                              "src": "2858:6:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$17325_memory_ptr",
                                "typeString": "struct NahmiiTypesLib.Trade memory"
                              }
                            },
                            "id": 12902,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "seller",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 17316,
                            "src": "2858:13:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeParty_$17304_memory",
                              "typeString": "struct NahmiiTypesLib.TradeParty memory"
                            }
                          },
                          "id": 12903,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "wallet",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17293,
                          "src": "2858:20:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 12898,
                          "name": "fraudChallenge",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12419,
                          "src": "2820:14:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FraudChallenge_$12754",
                            "typeString": "contract FraudChallenge"
                          }
                        },
                        "id": 12900,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "addDoubleSpenderWallet",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 12597,
                        "src": "2820:37:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                          "typeString": "function (address) external"
                        }
                      },
                      "id": 12904,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2820:59:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 12905,
                    "nodeType": "ExpressionStatement",
                    "src": "2820:59:30"
                  }
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 12908,
                            "name": "trade1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12798,
                            "src": "2964:6:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$17325_memory_ptr",
                              "typeString": "struct NahmiiTypesLib.Trade memory"
                            }
                          },
                          "id": 12909,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "seal",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17320,
                          "src": "2964:11:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Seal_$17284_memory",
                            "typeString": "struct NahmiiTypesLib.Seal memory"
                          }
                        },
                        "id": 12910,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "hash",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 17281,
                        "src": "2964:16:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 12911,
                            "name": "trade2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12800,
                            "src": "2982:6:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$17325_memory_ptr",
                              "typeString": "struct NahmiiTypesLib.Trade memory"
                            }
                          },
                          "id": 12912,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "seal",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17320,
                          "src": "2982:11:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Seal_$17284_memory",
                            "typeString": "struct NahmiiTypesLib.Seal memory"
                          }
                        },
                        "id": 12913,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "hash",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 17281,
                        "src": "2982:16:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 12914,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42422,
                          "src": "3000:3:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 12915,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3000:10:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 12907,
                      "name": "ChallengeByDoubleSpentOrdersEvent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12787,
                      "src": "2917:33:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,bytes32,address)"
                      }
                    },
                    "id": 12916,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2917:103:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12917,
                  "nodeType": "EmitStatement",
                  "src": "2912:108:30"
                }
              ]
            },
            "documentation": "@notice Submit two trade candidates in continuous Fraud Challenge (FC) to be tested for\n trade order double spenditure\n @param trade1 First trade with double spent order\n @param trade2 Last trade with double spent order",
            "id": 12919,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 12803,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 12802,
                  "name": "onlyOperationalModeNormal",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3738,
                  "src": "1697:25:30",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1697:25:30"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 12805,
                    "name": "trade1",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 12798,
                    "src": "1743:6:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$17325_memory_ptr",
                      "typeString": "struct NahmiiTypesLib.Trade memory"
                    }
                  }
                ],
                "id": 12806,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 12804,
                  "name": "onlySealedTrade",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 30792,
                  "src": "1727:15:30",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_struct$_Trade_$17325_memory_ptr_$",
                    "typeString": "modifier (struct NahmiiTypesLib.Trade memory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1727:23:30"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 12808,
                    "name": "trade2",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 12800,
                    "src": "1771:6:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$17325_memory_ptr",
                      "typeString": "struct NahmiiTypesLib.Trade memory"
                    }
                  }
                ],
                "id": 12809,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 12807,
                  "name": "onlySealedTrade",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 30792,
                  "src": "1755:15:30",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_struct$_Trade_$17325_memory_ptr_$",
                    "typeString": "modifier (struct NahmiiTypesLib.Trade memory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1755:23:30"
              }
            ],
            "name": "challenge",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12801,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12798,
                  "name": "trade1",
                  "nodeType": "VariableDeclaration",
                  "scope": 12919,
                  "src": "1611:27:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Trade_$17325_memory_ptr",
                    "typeString": "struct NahmiiTypesLib.Trade"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 12797,
                    "name": "NahmiiTypesLib.Trade",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 17325,
                    "src": "1611:20:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$17325_storage_ptr",
                      "typeString": "struct NahmiiTypesLib.Trade"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12800,
                  "name": "trade2",
                  "nodeType": "VariableDeclaration",
                  "scope": 12919,
                  "src": "1648:27:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Trade_$17325_memory_ptr",
                    "typeString": "struct NahmiiTypesLib.Trade"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 12799,
                    "name": "NahmiiTypesLib.Trade",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 17325,
                    "src": "1648:20:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$17325_storage_ptr",
                      "typeString": "struct NahmiiTypesLib.Trade"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1601:80:30"
            },
            "payable": false,
            "returnParameters": {
              "id": 12810,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1783:0:30"
            },
            "scope": 12920,
            "src": "1583:1444:30",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 12921,
        "src": "605:2424:30"
      }
    ],
    "src": "122:2907:30"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.25+commit.59dbf8f1.Emscripten.clang"
  },
  "networks": {
    "3": {
      "events": {
        "0x062cdd5a38a8c97ea6d34cf2f7ead767cd74a89372d592342cc5a78de2d425db": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "tradeHash1",
              "type": "bytes32"
            },
            {
              "indexed": false,
              "name": "tradeHash2",
              "type": "bytes32"
            },
            {
              "indexed": false,
              "name": "challenger",
              "type": "address"
            }
          ],
          "name": "ChallengeByDoubleSpentOrdersEvent",
          "type": "event"
        },
        "0xc9f3f00c1760fe26985aeacb814a21c56ea289d680562e89b249681b08c30382": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "oldSecurityBond",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "newSecurityBond",
              "type": "address"
            }
          ],
          "name": "SetSecurityBondEvent",
          "type": "event"
        },
        "0x1882af944a16549c3d4f60e3cd26f158b0c7aac3222cf32971fc21375ce05f60": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "oldValidator",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "newValidator",
              "type": "address"
            }
          ],
          "name": "SetValidatorEvent",
          "type": "event"
        },
        "0x634f61bf00e14adedce330c80c2823e16e184f189ebe853e1ddecc4a268477ff": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "oldConfiguration",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "newConfiguration",
              "type": "address"
            }
          ],
          "name": "SetConfigurationEvent",
          "type": "event"
        },
        "0x07998fa7be97abe2427246ae4688298c89d6196bbffdf0997b9495a8d27bc673": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "oldFraudChallenge",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "newFraudChallenge",
              "type": "address"
            }
          ],
          "name": "SetFraudChallengeEvent",
          "type": "event"
        },
        "0x977e5fa58e458501775e0008d275006294c5249e3c08d1d0e3a9f3acad14f6e4": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "oldDeployer",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "newDeployer",
              "type": "address"
            }
          ],
          "name": "SetDeployerEvent",
          "type": "event"
        },
        "0x9f611b789425d0d5b90b920f1b2852907dd865c80074a30b1629aaa041d1812c": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "oldOperator",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "newOperator",
              "type": "address"
            }
          ],
          "name": "SetOperatorEvent",
          "type": "event"
        },
        "0xd5a2a04a775c741c2ca0dc46ea7ce4835190e1aaf1ca018def0e82568ec33616": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "wallet",
              "type": "address"
            }
          ],
          "name": "SelfDestructionDisabledEvent",
          "type": "event"
        },
        "0x787a5d936e74f4b564b9153575886059829c78cd9927b1be5e0d976b317ef736": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "wallet",
              "type": "address"
            }
          ],
          "name": "TriggerSelfDestructionEvent",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xc93942d375a2efab9c277eaa84a5f69290564246",
      "transactionHash": "0x46a7d0a6d772027f35b3e8580eaaaad9f673a12feb2c3041c0dd1bc399b01683"
    }
  },
  "schemaVersion": "2.0.1",
  "updatedAt": "2019-01-31T11:28:29.564Z"
}