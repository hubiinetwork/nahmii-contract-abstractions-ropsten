{
  "contractName": "MockedDriipSettlementDisputeByTrade",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "_challengeByTradeCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "_unchallengeOrderCandidateByTradeCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "_reset",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "wallet",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "enum TradeTypesLib.Intention",
                  "name": "intention",
                  "type": "uint8"
                },
                {
                  "internalType": "int256",
                  "name": "amount",
                  "type": "int256"
                },
                {
                  "components": [
                    {
                      "components": [
                        {
                          "internalType": "address",
                          "name": "ct",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "id",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct MonetaryTypesLib.Currency",
                      "name": "intended",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "address",
                          "name": "ct",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "id",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct MonetaryTypesLib.Currency",
                      "name": "conjugate",
                      "type": "tuple"
                    }
                  ],
                  "internalType": "struct NahmiiTypesLib.IntendedConjugateCurrency",
                  "name": "currencies",
                  "type": "tuple"
                },
                {
                  "internalType": "int256",
                  "name": "rate",
                  "type": "int256"
                },
                {
                  "components": [
                    {
                      "internalType": "int256",
                      "name": "current",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "previous",
                      "type": "int256"
                    }
                  ],
                  "internalType": "struct NahmiiTypesLib.CurrentPreviousInt256",
                  "name": "residuals",
                  "type": "tuple"
                }
              ],
              "internalType": "struct TradeTypesLib.OrderPlacement",
              "name": "placement",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "hash",
                      "type": "bytes32"
                    },
                    {
                      "components": [
                        {
                          "internalType": "bytes32",
                          "name": "r",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "s",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "uint8",
                          "name": "v",
                          "type": "uint8"
                        }
                      ],
                      "internalType": "struct NahmiiTypesLib.Signature",
                      "name": "signature",
                      "type": "tuple"
                    }
                  ],
                  "internalType": "struct NahmiiTypesLib.Seal",
                  "name": "wallet",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "hash",
                      "type": "bytes32"
                    },
                    {
                      "components": [
                        {
                          "internalType": "bytes32",
                          "name": "r",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "s",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "uint8",
                          "name": "v",
                          "type": "uint8"
                        }
                      ],
                      "internalType": "struct NahmiiTypesLib.Signature",
                      "name": "signature",
                      "type": "tuple"
                    }
                  ],
                  "internalType": "struct NahmiiTypesLib.Seal",
                  "name": "operator",
                  "type": "tuple"
                }
              ],
              "internalType": "struct NahmiiTypesLib.WalletOperatorSeal",
              "name": "seals",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "blockNumber",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "operatorId",
              "type": "uint256"
            }
          ],
          "internalType": "struct TradeTypesLib.Order",
          "name": "",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "int256",
              "name": "amount",
              "type": "int256"
            },
            {
              "components": [
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "ct",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct MonetaryTypesLib.Currency",
                  "name": "intended",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "ct",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct MonetaryTypesLib.Currency",
                  "name": "conjugate",
                  "type": "tuple"
                }
              ],
              "internalType": "struct NahmiiTypesLib.IntendedConjugateCurrency",
              "name": "currencies",
              "type": "tuple"
            },
            {
              "internalType": "int256",
              "name": "rate",
              "type": "int256"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "wallet",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "rollingVolume",
                  "type": "uint256"
                },
                {
                  "internalType": "enum TradeTypesLib.LiquidityRole",
                  "name": "liquidityRole",
                  "type": "uint8"
                },
                {
                  "components": [
                    {
                      "internalType": "int256",
                      "name": "amount",
                      "type": "int256"
                    },
                    {
                      "components": [
                        {
                          "internalType": "bytes32",
                          "name": "wallet",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "operator",
                          "type": "bytes32"
                        }
                      ],
                      "internalType": "struct NahmiiTypesLib.WalletOperatorHashes",
                      "name": "hashes",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "int256",
                          "name": "current",
                          "type": "int256"
                        },
                        {
                          "internalType": "int256",
                          "name": "previous",
                          "type": "int256"
                        }
                      ],
                      "internalType": "struct NahmiiTypesLib.CurrentPreviousInt256",
                      "name": "residuals",
                      "type": "tuple"
                    }
                  ],
                  "internalType": "struct TradeTypesLib.TradeOrder",
                  "name": "order",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "components": [
                        {
                          "internalType": "int256",
                          "name": "current",
                          "type": "int256"
                        },
                        {
                          "internalType": "int256",
                          "name": "previous",
                          "type": "int256"
                        }
                      ],
                      "internalType": "struct NahmiiTypesLib.CurrentPreviousInt256",
                      "name": "intended",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "int256",
                          "name": "current",
                          "type": "int256"
                        },
                        {
                          "internalType": "int256",
                          "name": "previous",
                          "type": "int256"
                        }
                      ],
                      "internalType": "struct NahmiiTypesLib.CurrentPreviousInt256",
                      "name": "conjugate",
                      "type": "tuple"
                    }
                  ],
                  "internalType": "struct NahmiiTypesLib.IntendedConjugateCurrentPreviousInt256",
                  "name": "balances",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "components": [
                        {
                          "internalType": "int256",
                          "name": "amount",
                          "type": "int256"
                        },
                        {
                          "components": [
                            {
                              "internalType": "address",
                              "name": "ct",
                              "type": "address"
                            },
                            {
                              "internalType": "uint256",
                              "name": "id",
                              "type": "uint256"
                            }
                          ],
                          "internalType": "struct MonetaryTypesLib.Currency",
                          "name": "currency",
                          "type": "tuple"
                        }
                      ],
                      "internalType": "struct MonetaryTypesLib.Figure",
                      "name": "single",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "originId",
                          "type": "uint256"
                        },
                        {
                          "components": [
                            {
                              "internalType": "int256",
                              "name": "amount",
                              "type": "int256"
                            },
                            {
                              "components": [
                                {
                                  "internalType": "address",
                                  "name": "ct",
                                  "type": "address"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "id",
                                  "type": "uint256"
                                }
                              ],
                              "internalType": "struct MonetaryTypesLib.Currency",
                              "name": "currency",
                              "type": "tuple"
                            }
                          ],
                          "internalType": "struct MonetaryTypesLib.Figure",
                          "name": "figure",
                          "type": "tuple"
                        }
                      ],
                      "internalType": "struct NahmiiTypesLib.OriginFigure[]",
                      "name": "total",
                      "type": "tuple[]"
                    }
                  ],
                  "internalType": "struct NahmiiTypesLib.SingleFigureTotalOriginFigures",
                  "name": "fees",
                  "type": "tuple"
                }
              ],
              "internalType": "struct TradeTypesLib.TradeParty",
              "name": "buyer",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "wallet",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "rollingVolume",
                  "type": "uint256"
                },
                {
                  "internalType": "enum TradeTypesLib.LiquidityRole",
                  "name": "liquidityRole",
                  "type": "uint8"
                },
                {
                  "components": [
                    {
                      "internalType": "int256",
                      "name": "amount",
                      "type": "int256"
                    },
                    {
                      "components": [
                        {
                          "internalType": "bytes32",
                          "name": "wallet",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "operator",
                          "type": "bytes32"
                        }
                      ],
                      "internalType": "struct NahmiiTypesLib.WalletOperatorHashes",
                      "name": "hashes",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "int256",
                          "name": "current",
                          "type": "int256"
                        },
                        {
                          "internalType": "int256",
                          "name": "previous",
                          "type": "int256"
                        }
                      ],
                      "internalType": "struct NahmiiTypesLib.CurrentPreviousInt256",
                      "name": "residuals",
                      "type": "tuple"
                    }
                  ],
                  "internalType": "struct TradeTypesLib.TradeOrder",
                  "name": "order",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "components": [
                        {
                          "internalType": "int256",
                          "name": "current",
                          "type": "int256"
                        },
                        {
                          "internalType": "int256",
                          "name": "previous",
                          "type": "int256"
                        }
                      ],
                      "internalType": "struct NahmiiTypesLib.CurrentPreviousInt256",
                      "name": "intended",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "int256",
                          "name": "current",
                          "type": "int256"
                        },
                        {
                          "internalType": "int256",
                          "name": "previous",
                          "type": "int256"
                        }
                      ],
                      "internalType": "struct NahmiiTypesLib.CurrentPreviousInt256",
                      "name": "conjugate",
                      "type": "tuple"
                    }
                  ],
                  "internalType": "struct NahmiiTypesLib.IntendedConjugateCurrentPreviousInt256",
                  "name": "balances",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "components": [
                        {
                          "internalType": "int256",
                          "name": "amount",
                          "type": "int256"
                        },
                        {
                          "components": [
                            {
                              "internalType": "address",
                              "name": "ct",
                              "type": "address"
                            },
                            {
                              "internalType": "uint256",
                              "name": "id",
                              "type": "uint256"
                            }
                          ],
                          "internalType": "struct MonetaryTypesLib.Currency",
                          "name": "currency",
                          "type": "tuple"
                        }
                      ],
                      "internalType": "struct MonetaryTypesLib.Figure",
                      "name": "single",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "originId",
                          "type": "uint256"
                        },
                        {
                          "components": [
                            {
                              "internalType": "int256",
                              "name": "amount",
                              "type": "int256"
                            },
                            {
                              "components": [
                                {
                                  "internalType": "address",
                                  "name": "ct",
                                  "type": "address"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "id",
                                  "type": "uint256"
                                }
                              ],
                              "internalType": "struct MonetaryTypesLib.Currency",
                              "name": "currency",
                              "type": "tuple"
                            }
                          ],
                          "internalType": "struct MonetaryTypesLib.Figure",
                          "name": "figure",
                          "type": "tuple"
                        }
                      ],
                      "internalType": "struct NahmiiTypesLib.OriginFigure[]",
                      "name": "total",
                      "type": "tuple[]"
                    }
                  ],
                  "internalType": "struct NahmiiTypesLib.SingleFigureTotalOriginFigures",
                  "name": "fees",
                  "type": "tuple"
                }
              ],
              "internalType": "struct TradeTypesLib.TradeParty",
              "name": "seller",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "components": [
                    {
                      "internalType": "int256",
                      "name": "single",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "total",
                      "type": "int256"
                    }
                  ],
                  "internalType": "struct NahmiiTypesLib.SingleTotalInt256",
                  "name": "intended",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "int256",
                      "name": "single",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "total",
                      "type": "int256"
                    }
                  ],
                  "internalType": "struct NahmiiTypesLib.SingleTotalInt256",
                  "name": "conjugate",
                  "type": "tuple"
                }
              ],
              "internalType": "struct NahmiiTypesLib.IntendedConjugateSingleTotalInt256",
              "name": "transfers",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "hash",
                  "type": "bytes32"
                },
                {
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "r",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "s",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint8",
                      "name": "v",
                      "type": "uint8"
                    }
                  ],
                  "internalType": "struct NahmiiTypesLib.Signature",
                  "name": "signature",
                  "type": "tuple"
                }
              ],
              "internalType": "struct NahmiiTypesLib.Seal",
              "name": "seal",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "blockNumber",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "operatorId",
              "type": "uint256"
            }
          ],
          "internalType": "struct TradeTypesLib.Trade",
          "name": "",
          "type": "tuple"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "unchallengeOrderCandidateByTrade",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "int256",
              "name": "amount",
              "type": "int256"
            },
            {
              "components": [
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "ct",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct MonetaryTypesLib.Currency",
                  "name": "intended",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "ct",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct MonetaryTypesLib.Currency",
                  "name": "conjugate",
                  "type": "tuple"
                }
              ],
              "internalType": "struct NahmiiTypesLib.IntendedConjugateCurrency",
              "name": "currencies",
              "type": "tuple"
            },
            {
              "internalType": "int256",
              "name": "rate",
              "type": "int256"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "wallet",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "rollingVolume",
                  "type": "uint256"
                },
                {
                  "internalType": "enum TradeTypesLib.LiquidityRole",
                  "name": "liquidityRole",
                  "type": "uint8"
                },
                {
                  "components": [
                    {
                      "internalType": "int256",
                      "name": "amount",
                      "type": "int256"
                    },
                    {
                      "components": [
                        {
                          "internalType": "bytes32",
                          "name": "wallet",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "operator",
                          "type": "bytes32"
                        }
                      ],
                      "internalType": "struct NahmiiTypesLib.WalletOperatorHashes",
                      "name": "hashes",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "int256",
                          "name": "current",
                          "type": "int256"
                        },
                        {
                          "internalType": "int256",
                          "name": "previous",
                          "type": "int256"
                        }
                      ],
                      "internalType": "struct NahmiiTypesLib.CurrentPreviousInt256",
                      "name": "residuals",
                      "type": "tuple"
                    }
                  ],
                  "internalType": "struct TradeTypesLib.TradeOrder",
                  "name": "order",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "components": [
                        {
                          "internalType": "int256",
                          "name": "current",
                          "type": "int256"
                        },
                        {
                          "internalType": "int256",
                          "name": "previous",
                          "type": "int256"
                        }
                      ],
                      "internalType": "struct NahmiiTypesLib.CurrentPreviousInt256",
                      "name": "intended",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "int256",
                          "name": "current",
                          "type": "int256"
                        },
                        {
                          "internalType": "int256",
                          "name": "previous",
                          "type": "int256"
                        }
                      ],
                      "internalType": "struct NahmiiTypesLib.CurrentPreviousInt256",
                      "name": "conjugate",
                      "type": "tuple"
                    }
                  ],
                  "internalType": "struct NahmiiTypesLib.IntendedConjugateCurrentPreviousInt256",
                  "name": "balances",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "components": [
                        {
                          "internalType": "int256",
                          "name": "amount",
                          "type": "int256"
                        },
                        {
                          "components": [
                            {
                              "internalType": "address",
                              "name": "ct",
                              "type": "address"
                            },
                            {
                              "internalType": "uint256",
                              "name": "id",
                              "type": "uint256"
                            }
                          ],
                          "internalType": "struct MonetaryTypesLib.Currency",
                          "name": "currency",
                          "type": "tuple"
                        }
                      ],
                      "internalType": "struct MonetaryTypesLib.Figure",
                      "name": "single",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "originId",
                          "type": "uint256"
                        },
                        {
                          "components": [
                            {
                              "internalType": "int256",
                              "name": "amount",
                              "type": "int256"
                            },
                            {
                              "components": [
                                {
                                  "internalType": "address",
                                  "name": "ct",
                                  "type": "address"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "id",
                                  "type": "uint256"
                                }
                              ],
                              "internalType": "struct MonetaryTypesLib.Currency",
                              "name": "currency",
                              "type": "tuple"
                            }
                          ],
                          "internalType": "struct MonetaryTypesLib.Figure",
                          "name": "figure",
                          "type": "tuple"
                        }
                      ],
                      "internalType": "struct NahmiiTypesLib.OriginFigure[]",
                      "name": "total",
                      "type": "tuple[]"
                    }
                  ],
                  "internalType": "struct NahmiiTypesLib.SingleFigureTotalOriginFigures",
                  "name": "fees",
                  "type": "tuple"
                }
              ],
              "internalType": "struct TradeTypesLib.TradeParty",
              "name": "buyer",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "wallet",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "rollingVolume",
                  "type": "uint256"
                },
                {
                  "internalType": "enum TradeTypesLib.LiquidityRole",
                  "name": "liquidityRole",
                  "type": "uint8"
                },
                {
                  "components": [
                    {
                      "internalType": "int256",
                      "name": "amount",
                      "type": "int256"
                    },
                    {
                      "components": [
                        {
                          "internalType": "bytes32",
                          "name": "wallet",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "operator",
                          "type": "bytes32"
                        }
                      ],
                      "internalType": "struct NahmiiTypesLib.WalletOperatorHashes",
                      "name": "hashes",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "int256",
                          "name": "current",
                          "type": "int256"
                        },
                        {
                          "internalType": "int256",
                          "name": "previous",
                          "type": "int256"
                        }
                      ],
                      "internalType": "struct NahmiiTypesLib.CurrentPreviousInt256",
                      "name": "residuals",
                      "type": "tuple"
                    }
                  ],
                  "internalType": "struct TradeTypesLib.TradeOrder",
                  "name": "order",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "components": [
                        {
                          "internalType": "int256",
                          "name": "current",
                          "type": "int256"
                        },
                        {
                          "internalType": "int256",
                          "name": "previous",
                          "type": "int256"
                        }
                      ],
                      "internalType": "struct NahmiiTypesLib.CurrentPreviousInt256",
                      "name": "intended",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "int256",
                          "name": "current",
                          "type": "int256"
                        },
                        {
                          "internalType": "int256",
                          "name": "previous",
                          "type": "int256"
                        }
                      ],
                      "internalType": "struct NahmiiTypesLib.CurrentPreviousInt256",
                      "name": "conjugate",
                      "type": "tuple"
                    }
                  ],
                  "internalType": "struct NahmiiTypesLib.IntendedConjugateCurrentPreviousInt256",
                  "name": "balances",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "components": [
                        {
                          "internalType": "int256",
                          "name": "amount",
                          "type": "int256"
                        },
                        {
                          "components": [
                            {
                              "internalType": "address",
                              "name": "ct",
                              "type": "address"
                            },
                            {
                              "internalType": "uint256",
                              "name": "id",
                              "type": "uint256"
                            }
                          ],
                          "internalType": "struct MonetaryTypesLib.Currency",
                          "name": "currency",
                          "type": "tuple"
                        }
                      ],
                      "internalType": "struct MonetaryTypesLib.Figure",
                      "name": "single",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "originId",
                          "type": "uint256"
                        },
                        {
                          "components": [
                            {
                              "internalType": "int256",
                              "name": "amount",
                              "type": "int256"
                            },
                            {
                              "components": [
                                {
                                  "internalType": "address",
                                  "name": "ct",
                                  "type": "address"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "id",
                                  "type": "uint256"
                                }
                              ],
                              "internalType": "struct MonetaryTypesLib.Currency",
                              "name": "currency",
                              "type": "tuple"
                            }
                          ],
                          "internalType": "struct MonetaryTypesLib.Figure",
                          "name": "figure",
                          "type": "tuple"
                        }
                      ],
                      "internalType": "struct NahmiiTypesLib.OriginFigure[]",
                      "name": "total",
                      "type": "tuple[]"
                    }
                  ],
                  "internalType": "struct NahmiiTypesLib.SingleFigureTotalOriginFigures",
                  "name": "fees",
                  "type": "tuple"
                }
              ],
              "internalType": "struct TradeTypesLib.TradeParty",
              "name": "seller",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "components": [
                    {
                      "internalType": "int256",
                      "name": "single",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "total",
                      "type": "int256"
                    }
                  ],
                  "internalType": "struct NahmiiTypesLib.SingleTotalInt256",
                  "name": "intended",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "int256",
                      "name": "single",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "total",
                      "type": "int256"
                    }
                  ],
                  "internalType": "struct NahmiiTypesLib.SingleTotalInt256",
                  "name": "conjugate",
                  "type": "tuple"
                }
              ],
              "internalType": "struct NahmiiTypesLib.IntendedConjugateSingleTotalInt256",
              "name": "transfers",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "hash",
                  "type": "bytes32"
                },
                {
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "r",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "s",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint8",
                      "name": "v",
                      "type": "uint8"
                    }
                  ],
                  "internalType": "struct NahmiiTypesLib.Signature",
                  "name": "signature",
                  "type": "tuple"
                }
              ],
              "internalType": "struct NahmiiTypesLib.Seal",
              "name": "seal",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "blockNumber",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "operatorId",
              "type": "uint256"
            }
          ],
          "internalType": "struct TradeTypesLib.Trade",
          "name": "",
          "type": "tuple"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "challengeByTrade",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b50610920806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80630608a9381461005c5780631592f0ab1461007157806332f40589146100795780639227260714610097578063a01b7fa7146100aa575b600080fd5b61006f61006a3660046107c7565b6100b2565b005b61006f6100c0565b6100816100ca565b60405161008e9190610833565b60405180910390f35b61006f6100a5366004610763565b6100d0565b6100816100dd565b505060008054600101905550565b6000808055600155565b60015481565b5050600180548101905550565b60005481565b80356100ee816108a7565b92915050565b600082601f83011261010557600080fd5b813561011861011382610867565b610841565b9150818183526020840193506020810190508385608084028201111561013d57600080fd5b60005b8381101561016b578161015388826103cc565b84525060209092019160809190910190600101610140565b5050505092915050565b80356100ee816108be565b80356100ee816108c7565b60006040828403121561019d57600080fd5b6101a76040610841565b905060006101b584846100e3565b82525060206101c684848301610175565b60208301525092915050565b6000604082840312156101e457600080fd5b6101ee6040610841565b905060006101b58484610175565b60006060828403121561020e57600080fd5b6102186040610841565b905060006102268484610175565b82525060206101c68484830161018b565b60006080828403121561024957600080fd5b6102536040610841565b90506000610261848461018b565b82525060406101c68484830161018b565b60006080828403121561028457600080fd5b61028e6040610841565b9050600061029c84846101d2565b82525060406101c6848483016101d2565b600061012082840312156102c057600080fd5b6102ca60a0610841565b905060006102d88484610180565b82525060206102e984848301610175565b60208301525060406102fd84828501610237565b60408301525060c061031184828501610175565b60608301525060e0610325848285016101d2565b60808301525092915050565b60006102a0828403121561034457600080fd5b61034e60c0610841565b9050600061035c8484610175565b825250602061036d848483016100e3565b6020830152506040610381848285016102ad565b6040830152506101606103968482850161071c565b6060830152506102606103ab84828501610175565b6080830152506102806103c084828501610175565b60a08301525092915050565b6000608082840312156103de57600080fd5b6103e86040610841565b905060006103f68484610175565b82525060206101c6848483016101fc565b60006080828403121561041957600080fd5b6104236040610841565b905060006104318484610175565b82525060206101c68484830160006060828403121561044f57600080fd5b6104596060610841565b905060006104678484610175565b825250602061047884848301610175565b602083015250604061048c84828501610758565b60408301525092915050565b6000608082840312156104aa57600080fd5b6104b46040610841565b905060006104c284846101fc565b82525060608201356001600160401b038111156104de57600080fd5b6101c6848285016100f4565b600060a082840312156104fc57600080fd5b6105066060610841565b905060006105148484610175565b8252506020610525848483016101d2565b602083015250606061048c848285016101d2565b60006101c0828403121561054c57600080fd5b61055660e0610841565b905060006105648484610175565b8252506020610575848483016100e3565b602083015250604061058984828501610175565b604083015250606061059d84828501610180565b60608301525060806105b1848285016104ea565b6080830152506101206105c684828501610272565b60a0830152506101a08201356001600160401b038111156105e657600080fd5b6105f284828501610498565b60c08301525092915050565b6000610260828403121561061157600080fd5b61061c610140610841565b9050600061062a8484610175565b825250602061063b84848301610175565b602083015250604061064f84828501610237565b60408301525060c061066384828501610175565b60608301525060e08201356001600160401b0381111561068257600080fd5b61068e84828501610539565b6080830152506101008201356001600160401b038111156106ae57600080fd5b6106ba84828501610539565b60a0830152506101206106cf84828501610272565b60c0830152506101a06106e484828501610407565b60e0830152506102206106f984828501610175565b6101008301525061024061070f84828501610175565b6101208301525092915050565b6000610100828403121561072f57600080fd5b6107396040610841565b905060006107478484610407565b82525060806101c684848301610407565b80356100ee816108d4565b60008060006060848603121561077857600080fd5b600061078486866100e3565b93505060208401356001600160401b038111156107a057600080fd5b6107ac868287016105fe565b92505060406107bd868287016100e3565b9150509250925092565b60008060006102e084860312156107dd57600080fd5b60006107e98686610331565b9350506102a08401356001600160401b0381111561080657600080fd5b610812868287016105fe565b9250506102c06107bd868287016100e3565b61082d81610892565b82525050565b602081016100ee8284610824565b6040518181016001600160401b038111828210171561085f57600080fd5b604052919050565b60006001600160401b0382111561087d57600080fd5b5060209081020190565b60006100ee82610895565b90565b6001600160a01b031690565b60ff1690565b6108b081610887565b81146108bb57600080fd5b50565b6108b081610892565b600281106108bb57600080fd5b6108b0816108a156fea365627a7a72315820c1d92ba5003849f318b1312c5aa8183904e4dcd97ffbf811cd4154dcd2f8673f6c6578706572696d656e74616cf564736f6c634300050c0040",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100575760003560e01c80630608a9381461005c5780631592f0ab1461007157806332f40589146100795780639227260714610097578063a01b7fa7146100aa575b600080fd5b61006f61006a3660046107c7565b6100b2565b005b61006f6100c0565b6100816100ca565b60405161008e9190610833565b60405180910390f35b61006f6100a5366004610763565b6100d0565b6100816100dd565b505060008054600101905550565b6000808055600155565b60015481565b5050600180548101905550565b60005481565b80356100ee816108a7565b92915050565b600082601f83011261010557600080fd5b813561011861011382610867565b610841565b9150818183526020840193506020810190508385608084028201111561013d57600080fd5b60005b8381101561016b578161015388826103cc565b84525060209092019160809190910190600101610140565b5050505092915050565b80356100ee816108be565b80356100ee816108c7565b60006040828403121561019d57600080fd5b6101a76040610841565b905060006101b584846100e3565b82525060206101c684848301610175565b60208301525092915050565b6000604082840312156101e457600080fd5b6101ee6040610841565b905060006101b58484610175565b60006060828403121561020e57600080fd5b6102186040610841565b905060006102268484610175565b82525060206101c68484830161018b565b60006080828403121561024957600080fd5b6102536040610841565b90506000610261848461018b565b82525060406101c68484830161018b565b60006080828403121561028457600080fd5b61028e6040610841565b9050600061029c84846101d2565b82525060406101c6848483016101d2565b600061012082840312156102c057600080fd5b6102ca60a0610841565b905060006102d88484610180565b82525060206102e984848301610175565b60208301525060406102fd84828501610237565b60408301525060c061031184828501610175565b60608301525060e0610325848285016101d2565b60808301525092915050565b60006102a0828403121561034457600080fd5b61034e60c0610841565b9050600061035c8484610175565b825250602061036d848483016100e3565b6020830152506040610381848285016102ad565b6040830152506101606103968482850161071c565b6060830152506102606103ab84828501610175565b6080830152506102806103c084828501610175565b60a08301525092915050565b6000608082840312156103de57600080fd5b6103e86040610841565b905060006103f68484610175565b82525060206101c6848483016101fc565b60006080828403121561041957600080fd5b6104236040610841565b905060006104318484610175565b82525060206101c68484830160006060828403121561044f57600080fd5b6104596060610841565b905060006104678484610175565b825250602061047884848301610175565b602083015250604061048c84828501610758565b60408301525092915050565b6000608082840312156104aa57600080fd5b6104b46040610841565b905060006104c284846101fc565b82525060608201356001600160401b038111156104de57600080fd5b6101c6848285016100f4565b600060a082840312156104fc57600080fd5b6105066060610841565b905060006105148484610175565b8252506020610525848483016101d2565b602083015250606061048c848285016101d2565b60006101c0828403121561054c57600080fd5b61055660e0610841565b905060006105648484610175565b8252506020610575848483016100e3565b602083015250604061058984828501610175565b604083015250606061059d84828501610180565b60608301525060806105b1848285016104ea565b6080830152506101206105c684828501610272565b60a0830152506101a08201356001600160401b038111156105e657600080fd5b6105f284828501610498565b60c08301525092915050565b6000610260828403121561061157600080fd5b61061c610140610841565b9050600061062a8484610175565b825250602061063b84848301610175565b602083015250604061064f84828501610237565b60408301525060c061066384828501610175565b60608301525060e08201356001600160401b0381111561068257600080fd5b61068e84828501610539565b6080830152506101008201356001600160401b038111156106ae57600080fd5b6106ba84828501610539565b60a0830152506101206106cf84828501610272565b60c0830152506101a06106e484828501610407565b60e0830152506102206106f984828501610175565b6101008301525061024061070f84828501610175565b6101208301525092915050565b6000610100828403121561072f57600080fd5b6107396040610841565b905060006107478484610407565b82525060806101c684848301610407565b80356100ee816108d4565b60008060006060848603121561077857600080fd5b600061078486866100e3565b93505060208401356001600160401b038111156107a057600080fd5b6107ac868287016105fe565b92505060406107bd868287016100e3565b9150509250925092565b60008060006102e084860312156107dd57600080fd5b60006107e98686610331565b9350506102a08401356001600160401b0381111561080657600080fd5b610812868287016105fe565b9250506102c06107bd868287016100e3565b61082d81610892565b82525050565b602081016100ee8284610824565b6040518181016001600160401b038111828210171561085f57600080fd5b604052919050565b60006001600160401b0382111561087d57600080fd5b5060209081020190565b60006100ee82610895565b90565b6001600160a01b031690565b60ff1690565b6108b081610887565b81146108bb57600080fd5b50565b6108b081610892565b600281106108bb57600080fd5b6108b0816108a156fea365627a7a72315820c1d92ba5003849f318b1312c5aa8183904e4dcd97ffbf811cd4154dcd2f8673f6c6578706572696d656e74616cf564736f6c634300050c0040",
  "sourceMap": "376:611:115:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;376:611:115;;;;;;;",
  "deployedSourceMap": "376:611:115:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;376:611:115;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;664:187;;;;;;;;;:::i;:::-;;530:128;;;:::i;486:37::-;;;:::i;:::-;;;;;;;;;;;;;;;;857:128;;;;;;;;;:::i;427:53::-;;;:::i;664:187::-;-1:-1:-1;;804:38:115;:40;;;;;;-1:-1:-1;664:187:115:o;530:128::-;614:1;573:42;;;625:22;:26;530:128::o;486:37::-;;;;:::o;857:128::-;-1:-1:-1;;954:22:115;:24;;;;;;-1:-1:-1;857:128:115:o;427:53::-;;;;:::o;5:130:-1:-;72:20;;97:33;72:20;97:33;;;57:78;;;;;187:780;;327:3;320:4;312:6;308:17;304:27;294:2;;345:1;342;335:12;294:2;382:6;369:20;404:103;419:87;499:6;419:87;;;404:103;;;395:112;;524:5;549:6;542:5;535:21;579:4;571:6;567:17;557:27;;601:4;596:3;592:14;585:21;;654:6;701:3;693:4;685:6;681:17;676:3;672:27;669:36;666:2;;;718:1;715;708:12;666:2;743:1;728:233;753:6;750:1;747:13;728:233;;;811:3;833:64;893:3;881:10;833:64;;;821:77;;-1:-1;921:4;912:14;;;;949:4;940:14;;;;;775:1;768:9;728:233;;;732:14;287:680;;;;;;;;975:130;1042:20;;1067:33;1042:20;1067:33;;1112:160;1194:20;;1219:48;1194:20;1219:48;;1628:460;;1740:4;1728:9;1723:3;1719:19;1715:30;1712:2;;;1758:1;1755;1748:12;1712:2;1776:20;1791:4;1776:20;;;1767:29;-1:-1;1844:1;1875:49;1920:3;1900:9;1875:49;;;1851:74;;-1:-1;1984:2;2017:49;2062:3;2038:22;;;2017:49;;;2010:4;2003:5;1999:16;1992:75;1946:132;1706:382;;;;;2145:482;;2270:4;2258:9;2253:3;2249:19;2245:30;2242:2;;;2288:1;2285;2278:12;2242:2;2306:20;2321:4;2306:20;;;2297:29;-1:-1;2379:1;2410:48;2454:3;2434:9;2410:48;;2671:490;;2781:4;2769:9;2764:3;2760:19;2756:30;2753:2;;;2799:1;2796;2789:12;2753:2;2817:20;2832:4;2817:20;;;2808:29;-1:-1;2889:1;2920:48;2964:3;2944:9;2920:48;;;2896:73;;-1:-1;3034:2;3067:72;3135:3;3111:22;;;3067:72;;3222:536;;3351:4;3339:9;3334:3;3330:19;3326:30;3323:2;;;3369:1;3366;3359:12;3323:2;3387:20;3402:4;3387:20;;;3378:29;-1:-1;3461:1;3492:72;3560:3;3540:9;3492:72;;;3468:97;;-1:-1;3631:2;3664:72;3732:3;3708:22;;;3664:72;;3832:575;;3974:4;3962:9;3957:3;3953:19;3949:30;3946:2;;;3992:1;3989;3982:12;3946:2;4010:20;4025:4;4010:20;;;4001:29;-1:-1;4084:1;4115:85;4196:3;4176:9;4115:85;;;4091:110;;-1:-1;4267:2;4300:85;4381:3;4357:22;;;4300:85;;5089:1012;;5207:5;5195:9;5190:3;5186:19;5182:31;5179:2;;;5226:1;5223;5216:12;5179:2;5244:20;5259:4;5244:20;;;5235:29;-1:-1;5319:1;5350:64;5410:3;5390:9;5350:64;;;5326:89;;-1:-1;5478:2;5511:48;5555:3;5531:22;;;5511:48;;;5504:4;5497:5;5493:16;5486:74;5436:135;5627:2;5660:89;5745:3;5736:6;5725:9;5721:22;5660:89;;;5653:4;5646:5;5642:16;5635:115;5581:180;5811:3;5845:48;5889:3;5880:6;5869:9;5865:22;5845:48;;;5838:4;5831:5;5827:16;5820:74;5771:134;5960:3;5994:85;6075:3;6066:6;6055:9;6051:22;5994:85;;;5987:4;5980:5;5976:16;5969:111;5915:176;5173:928;;;;;6141:1129;;6254:5;6242:9;6237:3;6233:19;6229:31;6226:2;;;6273:1;6270;6263:12;6226:2;6291:20;6306:4;6291:20;;;6282:29;-1:-1;6362:1;6393:49;6438:3;6418:9;6393:49;;;6369:74;;-1:-1;6506:2;6539:49;6584:3;6560:22;;;6539:49;;;6532:4;6525:5;6521:16;6514:75;6464:136;6655:2;6688:78;6762:3;6753:6;6742:9;6738:22;6688:78;;;6681:4;6674:5;6670:16;6663:104;6610:168;6829:3;6863:82;6941:3;6932:6;6921:9;6917:22;6863:82;;;6856:4;6849:5;6845:16;6838:108;6788:169;7014:3;7048:49;7093:3;7084:6;7073:9;7069:22;7048:49;;;7041:4;7034:5;7030:16;7023:75;6967:142;7165:3;7199:49;7244:3;7235:6;7224:9;7220:22;7199:49;;;7192:4;7185:5;7181:16;7174:75;7119:141;6220:1050;;;;;7318:495;;7434:4;7422:9;7417:3;7413:19;7409:30;7406:2;;;7452:1;7449;7442:12;7406:2;7470:20;7485:4;7470:20;;;7461:29;-1:-1;7544:1;7575:49;7620:3;7600:9;7575:49;;;7551:74;;-1:-1;7688:2;7721:70;7787:3;7763:22;;;7721:70;;7853:489;;7961:4;7949:9;7944:3;7940:19;7936:30;7933:2;;;7979:1;7976;7969:12;7933:2;7997:20;8012:4;7997:20;;;7988:29;-1:-1;8067:1;8098:49;8143:3;8123:9;8098:49;;;8074:74;;-1:-1;8214:2;8247:73;8316:3;8292:22;;;8387:598;8500:4;8488:9;8483:3;8479:19;8475:30;8472:2;;;8518:1;8515;8508:12;8472:2;8536:20;8551:4;8536:20;;;8527:29;-1:-1;8603:1;8634:49;8679:3;8659:9;8634:49;;;8610:74;;-1:-1;8742:2;8775:49;8820:3;8796:22;;;8775:49;;;8768:4;8761:5;8757:16;8750:75;8705:131;8883:2;8916:47;8959:3;8950:6;8939:9;8935:22;8916:47;;;8909:4;8902:5;8898:16;8891:73;8846:129;8466:519;;;;;9051:644;;9185:4;9173:9;9168:3;9164:19;9160:30;9157:2;;;9203:1;9200;9193:12;9157:2;9221:20;9236:4;9221:20;;;9212:29;-1:-1;9293:1;9324:70;9390:3;9370:9;9324:70;;;9300:95;;-1:-1;9485:2;9470:18;;9457:32;-1:-1;;;;;9498:30;;9495:2;;;9541:1;9538;9531:12;9495:2;9576:97;9669:3;9660:6;9649:9;9645:22;9576:97;;10267:689;;10381:4;10369:9;10364:3;10360:19;10356:30;10353:2;;;10399:1;10396;10389:12;10353:2;10417:20;10432:4;10417:20;;;10408:29;-1:-1;10489:1;10520:48;10564:3;10544:9;10520:48;;;10496:73;;-1:-1;10632:2;10665:84;10745:3;10721:22;;;10665:84;;;10658:4;10651:5;10647:16;10640:110;10590:171;10816:2;10849:85;10930:3;10921:6;10910:9;10906:22;10849:85;;11001:1444;;11115:5;11103:9;11098:3;11094:19;11090:31;11087:2;;;11134:1;11131;11124:12;11087:2;11152:20;11167:4;11152:20;;;11143:29;-1:-1;11223:1;11254:49;11299:3;11279:9;11254:49;;;11230:74;;-1:-1;11367:2;11400:49;11445:3;11421:22;;;11400:49;;;11393:4;11386:5;11382:16;11375:75;11325:136;11520:2;11553:49;11598:3;11589:6;11578:9;11574:22;11553:49;;;11546:4;11539:5;11535:16;11528:75;11471:143;11673:2;11706:68;11770:3;11761:6;11750:9;11746:22;11706:68;;;11699:4;11692:5;11688:16;11681:94;11624:162;11837:3;11871:74;11941:3;11932:6;11921:9;11917:22;11871:74;;;11864:4;11857:5;11853:16;11846:100;11796:161;12011:3;12045:102;12143:3;12134:6;12123:9;12119:22;12045:102;;;12038:4;12031:5;12027:16;12020:128;11967:192;12237:3;12226:9;12222:19;12209:33;-1:-1;;;;;12254:6;12251:30;12248:2;;;12294:1;12291;12284:12;12248:2;12329:94;12419:3;12410:6;12399:9;12395:22;12329:94;;;12322:4;12315:5;12311:16;12304:120;12169:266;11081:1364;;;;;12485:1986;;12598:5;12586:9;12581:3;12577:19;12573:31;12570:2;;;12617:1;12614;12607:12;12570:2;12635:21;12650:5;12635:21;;;12626:30;-1:-1;12707:1;12738:49;12783:3;12763:9;12738:49;;;12714:74;;-1:-1;12851:2;12884:48;12928:3;12904:22;;;12884:48;;;12877:4;12870:5;12866:16;12859:74;12809:135;13000:2;13033:89;13118:3;13109:6;13098:9;13094:22;13033:89;;;13026:4;13019:5;13015:16;13008:115;12954:180;13184:3;13218:48;13262:3;13253:6;13242:9;13238:22;13218:48;;;13211:4;13204:5;13200:16;13193:74;13144:134;13357:3;13346:9;13342:19;13329:33;-1:-1;;;;;13374:6;13371:30;13368:2;;;13414:1;13411;13404:12;13368:2;13449:74;13519:3;13510:6;13499:9;13495:22;13449:74;;;13442:4;13435:5;13431:16;13424:100;13288:247;13615:3;13604:9;13600:19;13587:33;-1:-1;;;;;13632:6;13629:30;13626:2;;;13672:1;13669;13662:12;13626:2;13707:74;13777:3;13768:6;13757:9;13753:22;13707:74;;;13700:4;13693:5;13689:16;13682:100;13545:248;13848:3;13882:98;13976:3;13967:6;13956:9;13952:22;13882:98;;;13875:4;13868:5;13864:16;13857:124;13803:189;14042:3;14076:68;14140:3;14131:6;14120:9;14116:22;14076:68;;;14069:4;14062:5;14058:16;14051:94;14002:154;14213:3;14248:49;14293:3;14284:6;14273:9;14269:22;14248:49;;;14240:5;14233;14229:17;14222:76;14166:143;14365:3;14400:49;14445:3;14436:6;14425:9;14421:22;14400:49;;;14392:5;14385;14381:17;14374:76;14319:142;12564:1907;;;;;15063:520;;15185:5;15173:9;15168:3;15164:19;15160:31;15157:2;;;15204:1;15201;15194:12;15157:2;15222:20;15237:4;15222:20;;;15213:29;-1:-1;15294:1;15325:68;15389:3;15369:9;15325:68;;;15301:93;;-1:-1;15459:3;15493:68;15557:3;15533:22;;;15493:68;;15727:126;15792:20;;15817:31;15792:20;15817:31;;15860:625;;;;16022:2;16010:9;16001:7;15997:23;15993:32;15990:2;;;16038:1;16035;16028:12;15990:2;16073:1;16090:53;16135:7;16115:9;16090:53;;;16080:63;;16052:97;16208:2;16197:9;16193:18;16180:32;-1:-1;;;;;16224:6;16221:30;16218:2;;;16264:1;16261;16254:12;16218:2;16284:77;16353:7;16344:6;16333:9;16329:22;16284:77;;;16274:87;;16159:208;16398:2;16416:53;16461:7;16452:6;16441:9;16437:22;16416:53;;;16406:63;;16377:98;15984:501;;;;;;16492:676;;;;16678:3;16666:9;16657:7;16653:23;16649:33;16646:2;;;16695:1;16692;16685:12;16646:2;16730:1;16747:77;16816:7;16796:9;16747:77;;;16737:87;;16709:121;16889:3;16878:9;16874:19;16861:33;-1:-1;;;;;16906:6;16903:30;16900:2;;;16946:1;16943;16936:12;16900:2;16966:77;17035:7;17026:6;17015:9;17011:22;16966:77;;;16956:87;;16840:209;17080:3;17099:53;17144:7;17135:6;17124:9;17120:22;17099:53;;17175:113;17258:24;17276:5;17258:24;;;17253:3;17246:37;17240:48;;;17295:213;17413:2;17398:18;;17427:71;17402:9;17471:6;17427:71;;17515:256;17577:2;17571:9;17603:17;;;-1:-1;;;;;17663:34;;17699:22;;;17660:62;17657:2;;;17735:1;17732;17725:12;17657:2;17751;17744:22;17555:216;;-1:-1;17555:216;17778:327;;-1:-1;;;;;17952:6;17949:30;17946:2;;;17992:1;17989;17982:12;17946:2;-1:-1;18027:4;18015:17;;;18080:15;;17883:222;18112:91;;18174:24;18192:5;18174:24;;18210:72;18272:5;18255:27;18367:121;-1:-1;;;;;18429:54;;18412:76;18574:81;18645:4;18634:16;;18617:38;18662:117;18731:24;18749:5;18731:24;;;18724:5;18721:35;18711:2;;18770:1;18767;18760:12;18711:2;18705:74;;18786:117;18855:24;18873:5;18855:24;;18910:109;18994:1;18987:5;18984:12;18974:2;;19010:1;19007;19000:12;19392:113;19459:22;19475:5;19459:22;",
  "source": "/*\n * Hubii Nahmii\n *\n * Compliant with the Hubii Nahmii specification v0.12.\n *\n * Copyright (C) 2017-2018 Hubii AS\n */\n\npragma solidity >=0.4.25 <0.6.0;\npragma experimental ABIEncoderV2;\n\nimport {TradeTypesLib} from \"../TradeTypesLib.sol\";\n\n/**\n * @title MockedDriipSettlementDisputeByTrade\n * @notice Mocked implementation of driip settlement dispute by trade contract\n */\ncontract MockedDriipSettlementDisputeByTrade {\n    uint256 public _unchallengeOrderCandidateByTradeCount;\n    uint256 public _challengeByTradeCount;\n\n    function _reset()\n    public\n    {\n        _unchallengeOrderCandidateByTradeCount = 0;\n        _challengeByTradeCount = 0;\n    }\n\n    function unchallengeOrderCandidateByTrade(TradeTypesLib.Order memory, TradeTypesLib.Trade memory,\n        address)\n    public\n    {\n        _unchallengeOrderCandidateByTradeCount++;\n    }\n\n    function challengeByTrade(address, TradeTypesLib.Trade memory, address)\n    public\n    {\n        _challengeByTradeCount++;\n    }\n}",
  "sourcePath": "/opt/buildagent/work/855e104608380c36/contracts/test/MockedDriipSettlementDisputeByTrade.sol",
  "ast": {
    "absolutePath": "/opt/buildagent/work/855e104608380c36/contracts/test/MockedDriipSettlementDisputeByTrade.sol",
    "exportedSymbols": {
      "MockedDriipSettlementDisputeByTrade": [
        50042
      ]
    },
    "id": 50043,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 49996,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".25",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "122:32:115"
      },
      {
        "id": 49997,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "155:33:115"
      },
      {
        "absolutePath": "/opt/buildagent/work/855e104608380c36/contracts/TradeTypesLib.sol",
        "file": "../TradeTypesLib.sol",
        "id": 49999,
        "nodeType": "ImportDirective",
        "scope": 50043,
        "sourceUnit": 40380,
        "src": "190:51:115",
        "symbolAliases": [
          {
            "foreign": 49998,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title MockedDriipSettlementDisputeByTrade\n@notice Mocked implementation of driip settlement dispute by trade contract",
        "fullyImplemented": true,
        "id": 50042,
        "linearizedBaseContracts": [
          50042
        ],
        "name": "MockedDriipSettlementDisputeByTrade",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 50001,
            "name": "_unchallengeOrderCandidateByTradeCount",
            "nodeType": "VariableDeclaration",
            "scope": 50042,
            "src": "427:53:115",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 50000,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "427:7:115",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 50003,
            "name": "_challengeByTradeCount",
            "nodeType": "VariableDeclaration",
            "scope": 50042,
            "src": "486:37:115",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 50002,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "486:7:115",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 50014,
              "nodeType": "Block",
              "src": "563:95:115",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 50008,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 50006,
                      "name": "_unchallengeOrderCandidateByTradeCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50001,
                      "src": "573:38:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 50007,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "614:1:115",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "573:42:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 50009,
                  "nodeType": "ExpressionStatement",
                  "src": "573:42:115"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 50012,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 50010,
                      "name": "_challengeByTradeCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50003,
                      "src": "625:22:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 50011,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "650:1:115",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "625:26:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 50013,
                  "nodeType": "ExpressionStatement",
                  "src": "625:26:115"
                }
              ]
            },
            "documentation": null,
            "id": 50015,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_reset",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 50004,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "545:2:115"
            },
            "returnParameters": {
              "id": 50005,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "563:0:115"
            },
            "scope": 50042,
            "src": "530:128:115",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 50027,
              "nodeType": "Block",
              "src": "794:57:115",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 50025,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "804:40:115",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 50024,
                      "name": "_unchallengeOrderCandidateByTradeCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50001,
                      "src": "804:38:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 50026,
                  "nodeType": "ExpressionStatement",
                  "src": "804:40:115"
                }
              ]
            },
            "documentation": null,
            "id": 50028,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unchallengeOrderCandidateByTrade",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 50022,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50017,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 50028,
                  "src": "706:26:115",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Order_$40319_memory_ptr",
                    "typeString": "struct TradeTypesLib.Order"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 50016,
                    "name": "TradeTypesLib.Order",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 40319,
                    "src": "706:19:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Order_$40319_storage_ptr",
                      "typeString": "struct TradeTypesLib.Order"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50019,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 50028,
                  "src": "734:26:115",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                    "typeString": "struct TradeTypesLib.Trade"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 50018,
                    "name": "TradeTypesLib.Trade",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 40362,
                    "src": "734:19:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$40362_storage_ptr",
                      "typeString": "struct TradeTypesLib.Trade"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50021,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 50028,
                  "src": "770:7:115",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50020,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "770:7:115",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "705:73:115"
            },
            "returnParameters": {
              "id": 50023,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "794:0:115"
            },
            "scope": 50042,
            "src": "664:187:115",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 50040,
              "nodeType": "Block",
              "src": "944:41:115",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 50038,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "954:24:115",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 50037,
                      "name": "_challengeByTradeCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50003,
                      "src": "954:22:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 50039,
                  "nodeType": "ExpressionStatement",
                  "src": "954:24:115"
                }
              ]
            },
            "documentation": null,
            "id": 50041,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "challengeByTrade",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 50035,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50030,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 50041,
                  "src": "883:7:115",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50029,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "883:7:115",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50032,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 50041,
                  "src": "892:26:115",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                    "typeString": "struct TradeTypesLib.Trade"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 50031,
                    "name": "TradeTypesLib.Trade",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 40362,
                    "src": "892:19:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$40362_storage_ptr",
                      "typeString": "struct TradeTypesLib.Trade"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50034,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 50041,
                  "src": "920:7:115",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50033,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "920:7:115",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "882:46:115"
            },
            "returnParameters": {
              "id": 50036,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "944:0:115"
            },
            "scope": 50042,
            "src": "857:128:115",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 50043,
        "src": "376:611:115"
      }
    ],
    "src": "122:865:115"
  },
  "legacyAST": {
    "absolutePath": "/opt/buildagent/work/855e104608380c36/contracts/test/MockedDriipSettlementDisputeByTrade.sol",
    "exportedSymbols": {
      "MockedDriipSettlementDisputeByTrade": [
        50042
      ]
    },
    "id": 50043,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 49996,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".25",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "122:32:115"
      },
      {
        "id": 49997,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "155:33:115"
      },
      {
        "absolutePath": "/opt/buildagent/work/855e104608380c36/contracts/TradeTypesLib.sol",
        "file": "../TradeTypesLib.sol",
        "id": 49999,
        "nodeType": "ImportDirective",
        "scope": 50043,
        "sourceUnit": 40380,
        "src": "190:51:115",
        "symbolAliases": [
          {
            "foreign": 49998,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title MockedDriipSettlementDisputeByTrade\n@notice Mocked implementation of driip settlement dispute by trade contract",
        "fullyImplemented": true,
        "id": 50042,
        "linearizedBaseContracts": [
          50042
        ],
        "name": "MockedDriipSettlementDisputeByTrade",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 50001,
            "name": "_unchallengeOrderCandidateByTradeCount",
            "nodeType": "VariableDeclaration",
            "scope": 50042,
            "src": "427:53:115",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 50000,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "427:7:115",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 50003,
            "name": "_challengeByTradeCount",
            "nodeType": "VariableDeclaration",
            "scope": 50042,
            "src": "486:37:115",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 50002,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "486:7:115",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 50014,
              "nodeType": "Block",
              "src": "563:95:115",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 50008,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 50006,
                      "name": "_unchallengeOrderCandidateByTradeCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50001,
                      "src": "573:38:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 50007,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "614:1:115",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "573:42:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 50009,
                  "nodeType": "ExpressionStatement",
                  "src": "573:42:115"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 50012,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 50010,
                      "name": "_challengeByTradeCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50003,
                      "src": "625:22:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 50011,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "650:1:115",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "625:26:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 50013,
                  "nodeType": "ExpressionStatement",
                  "src": "625:26:115"
                }
              ]
            },
            "documentation": null,
            "id": 50015,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_reset",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 50004,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "545:2:115"
            },
            "returnParameters": {
              "id": 50005,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "563:0:115"
            },
            "scope": 50042,
            "src": "530:128:115",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 50027,
              "nodeType": "Block",
              "src": "794:57:115",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 50025,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "804:40:115",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 50024,
                      "name": "_unchallengeOrderCandidateByTradeCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50001,
                      "src": "804:38:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 50026,
                  "nodeType": "ExpressionStatement",
                  "src": "804:40:115"
                }
              ]
            },
            "documentation": null,
            "id": 50028,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unchallengeOrderCandidateByTrade",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 50022,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50017,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 50028,
                  "src": "706:26:115",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Order_$40319_memory_ptr",
                    "typeString": "struct TradeTypesLib.Order"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 50016,
                    "name": "TradeTypesLib.Order",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 40319,
                    "src": "706:19:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Order_$40319_storage_ptr",
                      "typeString": "struct TradeTypesLib.Order"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50019,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 50028,
                  "src": "734:26:115",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                    "typeString": "struct TradeTypesLib.Trade"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 50018,
                    "name": "TradeTypesLib.Trade",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 40362,
                    "src": "734:19:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$40362_storage_ptr",
                      "typeString": "struct TradeTypesLib.Trade"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50021,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 50028,
                  "src": "770:7:115",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50020,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "770:7:115",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "705:73:115"
            },
            "returnParameters": {
              "id": 50023,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "794:0:115"
            },
            "scope": 50042,
            "src": "664:187:115",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 50040,
              "nodeType": "Block",
              "src": "944:41:115",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 50038,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "954:24:115",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 50037,
                      "name": "_challengeByTradeCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50003,
                      "src": "954:22:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 50039,
                  "nodeType": "ExpressionStatement",
                  "src": "954:24:115"
                }
              ]
            },
            "documentation": null,
            "id": 50041,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "challengeByTrade",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 50035,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50030,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 50041,
                  "src": "883:7:115",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50029,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "883:7:115",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50032,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 50041,
                  "src": "892:26:115",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                    "typeString": "struct TradeTypesLib.Trade"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 50031,
                    "name": "TradeTypesLib.Trade",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 40362,
                    "src": "892:19:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$40362_storage_ptr",
                      "typeString": "struct TradeTypesLib.Trade"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50034,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 50041,
                  "src": "920:7:115",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50033,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "920:7:115",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "882:46:115"
            },
            "returnParameters": {
              "id": 50036,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "944:0:115"
            },
            "scope": 50042,
            "src": "857:128:115",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 50043,
        "src": "376:611:115"
      }
    ],
    "src": "122:865:115"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.12+commit.7709ece9.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.3",
  "updatedAt": "2019-10-23T00:21:40.846Z"
}