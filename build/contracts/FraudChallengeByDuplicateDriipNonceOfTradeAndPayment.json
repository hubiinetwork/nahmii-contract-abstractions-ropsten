{
  "contractName": "FraudChallengeByDuplicateDriipNonceOfTradeAndPayment",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "newFraudChallenge",
          "type": "address"
        }
      ],
      "name": "setFraudChallenge",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newValidator",
          "type": "address"
        }
      ],
      "name": "setValidator",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "triggerSelfDestruction",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "selfDestructionDisabled",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "validator",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "fraudChallenge",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "destructor",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "operator",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newConfiguration",
          "type": "address"
        }
      ],
      "name": "setConfiguration",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newSecurityBond",
          "type": "address"
        }
      ],
      "name": "setSecurityBond",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "securityBond",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "configuration",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "disableSelfDestruction",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newDeployer",
          "type": "address"
        }
      ],
      "name": "setDeployer",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOperator",
          "type": "address"
        }
      ],
      "name": "setOperator",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "deployer",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "deployer",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "tradeHash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "paymentHash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "challenger",
          "type": "address"
        }
      ],
      "name": "ChallengeByDuplicateDriipNonceOfTradeAndPaymentEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "oldSecurityBond",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "newSecurityBond",
          "type": "address"
        }
      ],
      "name": "SetSecurityBondEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "oldValidator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "newValidator",
          "type": "address"
        }
      ],
      "name": "SetValidatorEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "oldConfiguration",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "newConfiguration",
          "type": "address"
        }
      ],
      "name": "SetConfigurationEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "oldFraudChallenge",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "newFraudChallenge",
          "type": "address"
        }
      ],
      "name": "SetFraudChallengeEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "oldDeployer",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "newDeployer",
          "type": "address"
        }
      ],
      "name": "SetDeployerEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "oldOperator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "newOperator",
          "type": "address"
        }
      ],
      "name": "SetOperatorEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "wallet",
          "type": "address"
        }
      ],
      "name": "SelfDestructionDisabledEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "wallet",
          "type": "address"
        }
      ],
      "name": "TriggerSelfDestructionEvent",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "components": [
            {
              "name": "nonce",
              "type": "uint256"
            },
            {
              "name": "amount",
              "type": "int256"
            },
            {
              "components": [
                {
                  "components": [
                    {
                      "name": "ct",
                      "type": "address"
                    },
                    {
                      "name": "id",
                      "type": "uint256"
                    }
                  ],
                  "name": "intended",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "name": "ct",
                      "type": "address"
                    },
                    {
                      "name": "id",
                      "type": "uint256"
                    }
                  ],
                  "name": "conjugate",
                  "type": "tuple"
                }
              ],
              "name": "currencies",
              "type": "tuple"
            },
            {
              "name": "rate",
              "type": "int256"
            },
            {
              "components": [
                {
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "name": "wallet",
                  "type": "address"
                },
                {
                  "name": "rollingVolume",
                  "type": "uint256"
                },
                {
                  "name": "liquidityRole",
                  "type": "uint8"
                },
                {
                  "components": [
                    {
                      "name": "amount",
                      "type": "int256"
                    },
                    {
                      "components": [
                        {
                          "name": "wallet",
                          "type": "bytes32"
                        },
                        {
                          "name": "operator",
                          "type": "bytes32"
                        }
                      ],
                      "name": "hashes",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "name": "current",
                          "type": "int256"
                        },
                        {
                          "name": "previous",
                          "type": "int256"
                        }
                      ],
                      "name": "residuals",
                      "type": "tuple"
                    }
                  ],
                  "name": "order",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "components": [
                        {
                          "name": "current",
                          "type": "int256"
                        },
                        {
                          "name": "previous",
                          "type": "int256"
                        }
                      ],
                      "name": "intended",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "name": "current",
                          "type": "int256"
                        },
                        {
                          "name": "previous",
                          "type": "int256"
                        }
                      ],
                      "name": "conjugate",
                      "type": "tuple"
                    }
                  ],
                  "name": "balances",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "components": [
                        {
                          "name": "amount",
                          "type": "int256"
                        },
                        {
                          "components": [
                            {
                              "name": "ct",
                              "type": "address"
                            },
                            {
                              "name": "id",
                              "type": "uint256"
                            }
                          ],
                          "name": "currency",
                          "type": "tuple"
                        }
                      ],
                      "name": "single",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "name": "originId",
                          "type": "uint256"
                        },
                        {
                          "components": [
                            {
                              "name": "amount",
                              "type": "int256"
                            },
                            {
                              "components": [
                                {
                                  "name": "ct",
                                  "type": "address"
                                },
                                {
                                  "name": "id",
                                  "type": "uint256"
                                }
                              ],
                              "name": "currency",
                              "type": "tuple"
                            }
                          ],
                          "name": "figure",
                          "type": "tuple"
                        }
                      ],
                      "name": "total",
                      "type": "tuple[]"
                    }
                  ],
                  "name": "fees",
                  "type": "tuple"
                }
              ],
              "name": "buyer",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "name": "wallet",
                  "type": "address"
                },
                {
                  "name": "rollingVolume",
                  "type": "uint256"
                },
                {
                  "name": "liquidityRole",
                  "type": "uint8"
                },
                {
                  "components": [
                    {
                      "name": "amount",
                      "type": "int256"
                    },
                    {
                      "components": [
                        {
                          "name": "wallet",
                          "type": "bytes32"
                        },
                        {
                          "name": "operator",
                          "type": "bytes32"
                        }
                      ],
                      "name": "hashes",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "name": "current",
                          "type": "int256"
                        },
                        {
                          "name": "previous",
                          "type": "int256"
                        }
                      ],
                      "name": "residuals",
                      "type": "tuple"
                    }
                  ],
                  "name": "order",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "components": [
                        {
                          "name": "current",
                          "type": "int256"
                        },
                        {
                          "name": "previous",
                          "type": "int256"
                        }
                      ],
                      "name": "intended",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "name": "current",
                          "type": "int256"
                        },
                        {
                          "name": "previous",
                          "type": "int256"
                        }
                      ],
                      "name": "conjugate",
                      "type": "tuple"
                    }
                  ],
                  "name": "balances",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "components": [
                        {
                          "name": "amount",
                          "type": "int256"
                        },
                        {
                          "components": [
                            {
                              "name": "ct",
                              "type": "address"
                            },
                            {
                              "name": "id",
                              "type": "uint256"
                            }
                          ],
                          "name": "currency",
                          "type": "tuple"
                        }
                      ],
                      "name": "single",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "name": "originId",
                          "type": "uint256"
                        },
                        {
                          "components": [
                            {
                              "name": "amount",
                              "type": "int256"
                            },
                            {
                              "components": [
                                {
                                  "name": "ct",
                                  "type": "address"
                                },
                                {
                                  "name": "id",
                                  "type": "uint256"
                                }
                              ],
                              "name": "currency",
                              "type": "tuple"
                            }
                          ],
                          "name": "figure",
                          "type": "tuple"
                        }
                      ],
                      "name": "total",
                      "type": "tuple[]"
                    }
                  ],
                  "name": "fees",
                  "type": "tuple"
                }
              ],
              "name": "seller",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "components": [
                    {
                      "name": "single",
                      "type": "int256"
                    },
                    {
                      "name": "total",
                      "type": "int256"
                    }
                  ],
                  "name": "intended",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "name": "single",
                      "type": "int256"
                    },
                    {
                      "name": "total",
                      "type": "int256"
                    }
                  ],
                  "name": "conjugate",
                  "type": "tuple"
                }
              ],
              "name": "transfers",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "name": "hash",
                  "type": "bytes32"
                },
                {
                  "components": [
                    {
                      "name": "r",
                      "type": "bytes32"
                    },
                    {
                      "name": "s",
                      "type": "bytes32"
                    },
                    {
                      "name": "v",
                      "type": "uint8"
                    }
                  ],
                  "name": "signature",
                  "type": "tuple"
                }
              ],
              "name": "seal",
              "type": "tuple"
            },
            {
              "name": "blockNumber",
              "type": "uint256"
            },
            {
              "name": "operatorId",
              "type": "uint256"
            }
          ],
          "name": "trade",
          "type": "tuple"
        },
        {
          "components": [
            {
              "name": "nonce",
              "type": "uint256"
            },
            {
              "name": "amount",
              "type": "int256"
            },
            {
              "components": [
                {
                  "name": "ct",
                  "type": "address"
                },
                {
                  "name": "id",
                  "type": "uint256"
                }
              ],
              "name": "currency",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "name": "wallet",
                  "type": "address"
                },
                {
                  "components": [
                    {
                      "name": "current",
                      "type": "int256"
                    },
                    {
                      "name": "previous",
                      "type": "int256"
                    }
                  ],
                  "name": "balances",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "components": [
                        {
                          "name": "amount",
                          "type": "int256"
                        },
                        {
                          "components": [
                            {
                              "name": "ct",
                              "type": "address"
                            },
                            {
                              "name": "id",
                              "type": "uint256"
                            }
                          ],
                          "name": "currency",
                          "type": "tuple"
                        }
                      ],
                      "name": "single",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "name": "originId",
                          "type": "uint256"
                        },
                        {
                          "components": [
                            {
                              "name": "amount",
                              "type": "int256"
                            },
                            {
                              "components": [
                                {
                                  "name": "ct",
                                  "type": "address"
                                },
                                {
                                  "name": "id",
                                  "type": "uint256"
                                }
                              ],
                              "name": "currency",
                              "type": "tuple"
                            }
                          ],
                          "name": "figure",
                          "type": "tuple"
                        }
                      ],
                      "name": "total",
                      "type": "tuple[]"
                    }
                  ],
                  "name": "fees",
                  "type": "tuple"
                }
              ],
              "name": "sender",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "name": "wallet",
                  "type": "address"
                },
                {
                  "components": [
                    {
                      "name": "current",
                      "type": "int256"
                    },
                    {
                      "name": "previous",
                      "type": "int256"
                    }
                  ],
                  "name": "balances",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "components": [
                        {
                          "name": "originId",
                          "type": "uint256"
                        },
                        {
                          "components": [
                            {
                              "name": "amount",
                              "type": "int256"
                            },
                            {
                              "components": [
                                {
                                  "name": "ct",
                                  "type": "address"
                                },
                                {
                                  "name": "id",
                                  "type": "uint256"
                                }
                              ],
                              "name": "currency",
                              "type": "tuple"
                            }
                          ],
                          "name": "figure",
                          "type": "tuple"
                        }
                      ],
                      "name": "total",
                      "type": "tuple[]"
                    }
                  ],
                  "name": "fees",
                  "type": "tuple"
                }
              ],
              "name": "recipient",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "name": "single",
                  "type": "int256"
                },
                {
                  "name": "total",
                  "type": "int256"
                }
              ],
              "name": "transfers",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "components": [
                    {
                      "name": "hash",
                      "type": "bytes32"
                    },
                    {
                      "components": [
                        {
                          "name": "r",
                          "type": "bytes32"
                        },
                        {
                          "name": "s",
                          "type": "bytes32"
                        },
                        {
                          "name": "v",
                          "type": "uint8"
                        }
                      ],
                      "name": "signature",
                      "type": "tuple"
                    }
                  ],
                  "name": "wallet",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "name": "hash",
                      "type": "bytes32"
                    },
                    {
                      "components": [
                        {
                          "name": "r",
                          "type": "bytes32"
                        },
                        {
                          "name": "s",
                          "type": "bytes32"
                        },
                        {
                          "name": "v",
                          "type": "uint8"
                        }
                      ],
                      "name": "signature",
                      "type": "tuple"
                    }
                  ],
                  "name": "operator",
                  "type": "tuple"
                }
              ],
              "name": "seals",
              "type": "tuple"
            },
            {
              "name": "blockNumber",
              "type": "uint256"
            },
            {
              "name": "operatorId",
              "type": "uint256"
            }
          ],
          "name": "payment",
          "type": "tuple"
        }
      ],
      "name": "challenge",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "",
  "deployedBytecode": "0x6080604052600436106100d75763ffffffff60e060020a60003504166301370d0681146100dc5780631327d3d8146100fe5780632738a1121461011e5780632f013a00146101335780633a5381b51461015e5780633bd7857f146101805780634476d23b14610195578063570ca735146101b7578063627f09c3146101cc5780636792ce6e146101ec5780636a06219a1461020c5780636b0570d01461022c5780636c70bee91461024157806370327ea114610256578063962147351461026b578063b3ab15fb1461028b578063d5f39488146102ab575b600080fd5b3480156100e857600080fd5b506100fc6100f7366004611468565b6102c0565b005b34801561010a57600080fd5b506100fc610119366004611468565b610368565b34801561012a57600080fd5b506100fc610400565b34801561013f57600080fd5b50610148610466565b6040516101559190611a96565b60405180910390f35b34801561016a57600080fd5b5061017361046f565b6040516101559190611ada565b34801561018c57600080fd5b5061017361047e565b3480156101a157600080fd5b506101aa61048d565b6040516101559190611a3f565b3480156101c357600080fd5b506101aa6104a1565b3480156101d857600080fd5b506100fc6101e7366004611468565b6104b0565b3480156101f857600080fd5b506100fc610207366004611468565b610548565b34801561021857600080fd5b506100fc610227366004611486565b6105e0565b34801561023857600080fd5b50610173610a1d565b34801561024d57600080fd5b50610173610a2c565b34801561026257600080fd5b506100fc610a3b565b34801561027757600080fd5b506100fc610286366004611424565b610a9e565b34801561029757600080fd5b506100fc6102a6366004611424565b610b65565b3480156102b757600080fd5b506101aa610c0f565b60006102ca610c23565b15156102d557600080fd5b81600160a060020a03811615156102eb57600080fd5b6002548390600160a060020a0390811690821681146103615760028054600160a060020a03878116600160a060020a0319831617909255604051911694507f07998fa7be97abe2427246ae4688298c89d6196bbffdf0997b9495a8d27bc673906103589086908890611ae8565b60405180910390a15b5050505050565b6000610372610c23565b151561037d57600080fd5b81600160a060020a038116151561039357600080fd5b6004548390600160a060020a0390811690821681146103615760048054600160a060020a03878116600160a060020a0319831617909255604051911694507f1882af944a16549c3d4f60e3cd26f158b0c7aac3222cf32971fc21375ce05f60906103589086908890611ae8565b3361040961048d565b600160a060020a03161461041c57600080fd5b60005460ff161561042c57600080fd5b7f787a5d936e74f4b564b9153575886059829c78cd9927b1be5e0d976b317ef7363360405161045b9190611a3f565b60405180910390a133ff5b60005460ff1681565b600454600160a060020a031681565b600254600160a060020a031681565b6000546101009004600160a060020a031690565b600154600160a060020a031681565b60006104ba610c23565b15156104c557600080fd5b81600160a060020a03811615156104db57600080fd5b6003548390600160a060020a0390811690821681146103615760038054600160a060020a03878116600160a060020a0319831617909255604051911694507f634f61bf00e14adedce330c80c2823e16e184f189ebe853e1ddecc4a268477ff906103589086908890611ae8565b6000610552610c23565b151561055d57600080fd5b81600160a060020a038116151561057357600080fd5b6005548390600160a060020a0390811690821681146103615760058054600160a060020a03878116600160a060020a0319831617909255604051911694507fc9f3f00c1760fe26985aeacb814a21c56ea289d680562e89b249681b08c30382906103589086908890611ae8565b600360009054906101000a9004600160a060020a0316600160a060020a031663f71e860f6040518163ffffffff1660e060020a028152600401602060405180830381600087803b15801561063357600080fd5b505af1158015610647573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061066b919081019061144a565b151561067657600080fd5b6004805460405160e160020a637211c8c70281528492600160a060020a039092169163e423918e916106aa91859101611b14565b602060405180830381600087803b1580156106c457600080fd5b505af11580156106d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506106fc919081019061144a565b151561070757600080fd5b6004805460405160e060020a63a865476b0281528492600160a060020a039092169163a865476b9161073b91859101611b03565b602060405180830381600087803b15801561075557600080fd5b505af1158015610769573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061078d919081019061144a565b151561079857600080fd5b82518451146107a657600080fd5b600360009054906101000a9004600160a060020a0316600160a060020a031663f8e6e8886040518163ffffffff1660e060020a028152600401600060405180830381600087803b1580156107f957600080fd5b505af115801561080d573d6000803e3d6000fd5b505060025460e08701515160405160e060020a6375d8655b028152600160a060020a0390921693506375d8655b925061084891600401611aa4565b600060405180830381600087803b15801561086257600080fd5b505af1158015610876573d6000803e3d6000fd5b505060025460c0860151602001515160405160e060020a6388cb0a49028152600160a060020a0390921693506388cb0a4992506108b591600401611aa4565b600060405180830381600087803b1580156108cf57600080fd5b505af11580156108e3573d6000803e3d6000fd5b50506005546003546040805160e060020a639699f3370281529051600160a060020a03938416955063760b82929450339390921691639699f337916004808201926020929091908290030181600087803b15801561094057600080fd5b505af1158015610954573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061097891908101906114ed565b60006040518463ffffffff1660e060020a02815260040161099b93929190611a6e565b600060405180830381600087803b1580156109b557600080fd5b505af11580156109c9573d6000803e3d6000fd5b50505060e08501515160c085015160200151516040517fc2f1c7c11d23566143ab8ec3d13174e6794edbd843f956688e18fb079eb50bed9350610a0f9291903390611ab2565b60405180910390a150505050565b600554600160a060020a031681565b600354600160a060020a031681565b33610a4461048d565b600160a060020a031614610a5757600080fd5b6000805460ff191660011790556040517fd5a2a04a775c741c2ca0dc46ea7ce4835190e1aaf1ca018def0e82568ec3361690610a94903390611a3f565b60405180910390a1565b6000610aa8610c23565b1515610ab357600080fd5b81600160a060020a0381161515610ac957600080fd5b600160a060020a038116301415610adf57600080fd5b600054600160a060020a038481166101009092041614610b605760008054600160a060020a0385811661010090810261010060a860020a0319841617909355604051929091041692507f977e5fa58e458501775e0008d275006294c5249e3c08d1d0e3a9f3acad14f6e490610b579084908690611a53565b60405180910390a15b505050565b6000610b6f610c39565b1515610b7a57600080fd5b81600160a060020a0381161515610b9057600080fd5b600160a060020a038116301415610ba657600080fd5b600154600160a060020a03848116911614610b605760018054600160a060020a03858116600160a060020a0319831617909255604051911692507f9f611b789425d0d5b90b920f1b2852907dd865c80074a30b1629aaa041d1812c90610b579084908690611a53565b6000546101009004600160a060020a031681565b6000546101009004600160a060020a0316331490565b600154600160a060020a0316331490565b6000610c568235611b75565b9392505050565b6000601f82018313610c6e57600080fd5b8135610c81610c7c82611b4b565b611b25565b91508181835260208401935060208101905083856080840282011115610ca657600080fd5b60005b83811015610cd45781610cbc8882610e30565b84525060209092019160809190910190600101610ca9565b5050505092915050565b6000610c568251611b81565b6000610c568235611b86565b6000610c568235611b9f565b6000610c568235611baa565b600060408284031215610d2057600080fd5b610d2a6040611b25565b90506000610d388484610c4a565b8252506020610d4984848301610cea565b60208301525092915050565b600060408284031215610d6757600080fd5b610d716040611b25565b90506000610d388484610cea565b600060608284031215610d9157600080fd5b610d9b6040611b25565b90506000610da98484610cea565b8252506020610d4984848301610d0e565b600060808284031215610dcc57600080fd5b610dd66040611b25565b90506000610de48484610d0e565b8252506040610d4984848301610d0e565b600060808284031215610e0757600080fd5b610e116040611b25565b90506000610e1f8484610d55565b8252506040610d4984848301610d55565b600060808284031215610e4257600080fd5b610e4c6040611b25565b90506000610e5a8484610cea565b8252506020610d4984848301610d7f565b600060a08284031215610e7d57600080fd5b610e876080611b25565b90506000610e958484610cea565b8252506020610ea684848301610c4a565b6020830152506040610eba84828501610d55565b60408301525060808201356001604060020a03811115610ed957600080fd5b610ee584828501611155565b60608301525092915050565b600060a08284031215610f0357600080fd5b610f0d6080611b25565b90506000610f1b8484610cea565b8252506020610f2c84848301610c4a565b6020830152506040610f4084828501610d55565b60408301525060808201356001604060020a03811115610f5f57600080fd5b610ee584828501611103565b60006102408284031215610f7e57600080fd5b610f89610120611b25565b90506000610f978484610cea565b8252506020610fa884848301610cea565b6020830152506040610fbc84828501610d0e565b60408301525060808201356001604060020a03811115610fdb57600080fd5b610fe784828501610ef1565b60608301525060a08201356001604060020a0381111561100657600080fd5b61101284828501610e6b565b60808301525060c061102684828501610d55565b60a08301525061010061103b848285016113d0565b60c08301525061020061105084828501610cea565b60e08301525061022061106584828501610cea565b6101008301525092915050565b60006080828403121561108457600080fd5b61108e6040611b25565b9050600061109c8484610cea565b8252506020610d49848483016000606082840312156110ba57600080fd5b6110c46060611b25565b905060006110d28484610cea565b82525060206110e384848301610cea565b60208301525060406110f784828501611418565b60408301525092915050565b60006080828403121561111557600080fd5b61111f6040611b25565b9050600061112d8484610d7f565b82525060608201356001604060020a0381111561114957600080fd5b610d4984828501610c5d565b60006020828403121561116757600080fd5b6111716020611b25565b905081356001604060020a0381111561118957600080fd5b61119584828501610c5d565b82525092915050565b600060a082840312156111b057600080fd5b6111ba6060611b25565b905060006111c88484610cea565b82525060206111d984848301610d55565b60208301525060606110f784828501610d55565b60006101c0828403121561120057600080fd5b61120a60e0611b25565b905060006112188484610cea565b825250602061122984848301610c4a565b602083015250604061123d84828501610cea565b604083015250606061125184828501610d02565b60608301525060806112658482850161119e565b60808301525061012061127a84828501610df5565b60a0830152506101a08201356001604060020a0381111561129a57600080fd5b6112a684828501611103565b60c08301525092915050565b600061026082840312156112c557600080fd5b6112d0610140611b25565b905060006112de8484610cea565b82525060206112ef84848301610cea565b602083015250604061130384828501610dba565b60408301525060c061131784828501610cea565b60608301525060e08201356001604060020a0381111561133657600080fd5b611342848285016111ed565b6080830152506101008201356001604060020a0381111561136257600080fd5b61136e848285016111ed565b60a08301525061012061138384828501610df5565b60c0830152506101a061139884828501611072565b60e0830152506102206113ad84828501610cea565b610100830152506102406113c384828501610cea565b6101208301525092915050565b600061010082840312156113e357600080fd5b6113ed6040611b25565b905060006113fb8484611072565b8252506080610d4984848301611072565b6000610c568251611b86565b6000610c568235611b99565b60006020828403121561143657600080fd5b60006114428484610c4a565b949350505050565b60006020828403121561145c57600080fd5b60006114428484610cde565b60006020828403121561147a57600080fd5b60006114428484610cf6565b6000806040838503121561149957600080fd5b82356001604060020a038111156114af57600080fd5b6114bb858286016112b2565b92505060208301356001604060020a038111156114d757600080fd5b6114e385828601610f6b565b9150509250929050565b6000602082840312156114ff57600080fd5b6000611442848461140c565b61151481611b75565b82525050565b600061152582611b71565b80845260208401935061153783611b6b565b60005b828110156115675761154d868351611645565b61155682611b6b565b60809690960195915060010161153a565b5093949350505050565b61151481611b81565b61151481611b86565b61151481611b9f565b61151481611bb9565b61151481611bc4565b805160408301906115af848261150b565b5060208201516115c2602085018261157a565b50505050565b805160408301906115af848261157a565b805160608301906115ea848261157a565b5060208201516115c2602085018261159e565b8051608083019061160e848261159e565b5060208201516115c2604085018261159e565b8051608083019061163284826115c8565b5060208201516115c260408501826115c8565b80516080830190611656848261157a565b5060208201516115c260208501826115d9565b805160009060a084019061167d858261157a565b506020830151611690602086018261150b565b5060408301516116a360408601826115c8565b50606083015184820360808601526116bb828261185f565b95945050505050565b805160009060a08401906116d8858261157a565b5060208301516116eb602086018261150b565b5060408301516116fe60408601826115c8565b50606083015184820360808601526116bb8282611833565b805160009061024084019061172b858261157a565b50602083015161173e602086018261157a565b506040830151611751604086018261159e565b506060830151848203608086015261176982826116c4565b915050608083015184820360a08601526117838282611669565b91505060a083015161179860c08601826115c8565b5060c08301516117ac610100860182611a11565b5060e08301516117c061020086018261157a565b506101008301516117d561022086018261157a565b509392505050565b805160808301906117ee848261157a565b5060208201516115c260208501828051606083019061180d848261157a565b506020820151611820602085018261157a565b5060408201516115c26040850182611a36565b8051600090608084019061184785826115d9565b50602083015184820360608601526116bb828261151a565b80516020808452600091908401906116bb828261151a565b805160a0830190611888848261157a565b50602082015161189b60208501826115c8565b5060408201516115c260608501826115c8565b80516000906101c08401906118c3858261157a565b5060208301516118d6602086018261150b565b5060408301516118e9604086018261157a565b5060608301516118fc606086018261158c565b50608083015161190f6080860182611877565b5060a0830151611923610120860182611621565b5060c08301518482036101a08601526116bb8282611833565b8051600090610260840190611951858261157a565b506020830151611964602086018261157a565b50604083015161197760408601826115fd565b50606083015161198a60c086018261157a565b50608083015184820360e08601526119a282826118ae565b91505060a08301518482036101008601526119bd82826118ae565b91505060c08301516119d3610120860182611621565b5060e08301516119e76101a08601826117dd565b506101008301516119fc61022086018261157a565b506101208301516117d561024086018261157a565b8051610100830190611a2384826117dd565b5060208201516115c260808501826117dd565b61151481611b99565b60208101611a4d828461150b565b92915050565b60408101611a61828561150b565b610c56602083018461150b565b60608101611a7c828661150b565b611a89602083018561157a565b6114426040830184611595565b60208101611a4d8284611571565b60208101611a4d828461157a565b60608101611ac0828661157a565b611acd602083018561157a565b611442604083018461150b565b60208101611a4d8284611583565b60408101611af68285611583565b610c566020830184611583565b60208082528101610c568184611716565b60208082528101610c56818461193c565b6040518181016001604060020a0381118282101715611b4357600080fd5b604052919050565b60006001604060020a03821115611b6157600080fd5b5060209081020190565b60200190565b5190565b600160a060020a031690565b151590565b90565b600060028210611b9557fe5b5090565b60ff1690565b6000611a4d82611b75565b600060028210611b9557600080fd5b6000611a4d82611b89565b6000611a4d82611b865600a265627a7a723058200a68916fc722bf83d8ce8017e04be1e3469b5d67ee3a76d9a3a157e641a518f06c6578706572696d656e74616cf50037",
  "sourceMap": "731:1930:39:-;;;1309:62;8:9:-1;5:2;;;30:1;27;20:12;5:2;1309:62:39;;;;;;;;;;;;;;;;;;;;;;1347:8;;-1:-1:-1;;;;;673:22:51;;;;665:31;;;;;;-1:-1:-1;;;;;714:25:51;;734:4;714:25;;706:34;;;;;;-1:-1:-1;1097:8:63;:20;;-1:-1:-1;;;;;;1097:20:63;;-1:-1:-1;;;;;1097:20:63;;;;;;;;;;-1:-1:-1;1127:20:63;;-1:-1:-1;;;;;;1127:20:63;;;;;;-1:-1:-1;731:1930:39;;5:122:-1;;83:39;114:6;108:13;83:39;;;74:48;68:59;-1:-1;;;68:59;134:263;;249:2;237:9;228:7;224:23;220:32;217:2;;;265:1;262;255:12;217:2;300:1;317:64;373:7;353:9;317:64;;;307:74;211:186;-1:-1;;;;211:186;404:128;-1:-1;;;;;473:54;;456:76;;731:1930:39;;;;;;",
  "deployedSourceMap": "731:1930:39:-;;;;;;;;;-1:-1:-1;;;731:1930:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1089:430:35;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1089:430:35;;;;;;;;;;;1188:357:92;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1188:357:92;;;;;;;;;1441:425:75;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1441:425:75;;;;413:35;;8:9:-1;5:2;;;30:1;27;20:12;5:2;413:35:75;;;;;;;;;;;;;;;;;;;;668:28:92;;8:9:-1;5:2;;;30:1;27;20:12;5:2;668:28:92;;;;;;;;;;;;524:36:35;;8:9:-1;5:2;;;30:1;27;20:12;5:2;524:36:35;;;;1382:100:63;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1382:100:63;;;;;;;;;;;;555:23;;8:9:-1;5:2;;;30:1;27;20:12;5:2;555:23:63;;;;1060:414:19;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1060:414:19;;;;;;;;;1061:399:74;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1061:399:74;;;;;;;;;1785:874:39;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1785:874:39;;;;;;;;;516:32:74;;8:9:-1;5:2;;;30:1;27;20:12;5:2;516:32:74;;;;506:34:19;;8:9:-1;5:2;;;30:1;27;20:12;5:2;506:34:19;;;;1083:314:75;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1083:314:75;;;;1597:368:63;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1597:368:63;;;;;;;;;2080;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2080:368:63;;;;;;;;;526:23;;8:9:-1;5:2;;;30:1;27;20:12;5:2;526:23:63;;;;1089:430:35;1321:32;3453:12:63;:10;:12::i;:::-;3445:21;;;;;;;;1197:17:35;-1:-1:-1;;;;;450:22:51;;;;442:31;;;;;;1256:14:35;;1237:17;;-1:-1:-1;;;;;1256:14:35;;;;842:22:51;;;;838:41;;1356:14:35;;;-1:-1:-1;;;;;1380:34:35;;;-1:-1:-1;;;;;;1380:34:35;;;;;;1452:60;;1356:14;;;-1:-1:-1;1452:60:35;;;;1356:14;;1397:17;;1452:60;;;;;;;;;;838:41:51;483:1;;3476::63;1089:430:35;;:::o;1188:357:92:-;1385:24;3453:12:63;:10;:12::i;:::-;3445:21;;;;;;;;1283:12:92;-1:-1:-1;;;;;450:22:51;;;;442:31;;;;;;1332:9:92;;1318:12;;-1:-1:-1;;;;;1332:9:92;;;;842:22:51;;;;838:41;;1412:9:92;;;-1:-1:-1;;;;;1431:24:92;;;-1:-1:-1;;;;;;1431:24:92;;;;;;1493:45;;1412:9;;;-1:-1:-1;1493:45:92;;;;1412:9;;1443:12;;1493:45;;1441:425:75;1582:10;1566:12;:10;:12::i;:::-;-1:-1:-1;;;;;1566:26:75;;1558:35;;;;;;1676:23;;;;1675:24;1667:33;;;;;;1738:39;1766:10;1738:39;;;;;;;;;;;;;;;1848:10;1835:24;413:35;;;;;;:::o;668:28:92:-;;;-1:-1:-1;;;;;668:28:92;;:::o;524:36:35:-;;;-1:-1:-1;;;;;524:36:35;;:::o;1382:100:63:-;1437:7;1467:8;;;;-1:-1:-1;;;;;1467:8:63;;1382:100::o;555:23::-;;;-1:-1:-1;;;;;555:23:63;;:::o;1060:414:19:-;1284:30;3453:12:63;:10;:12::i;:::-;3445:21;;;;;;;;1165:16:19;-1:-1:-1;;;;;450:22:51;;;;442:31;;;;;;1222:13:19;;1204:16;;-1:-1:-1;;;;;1222:13:19;;;;842:22:51;;;;838:41;;1317:13:19;;;-1:-1:-1;;;;;1340:32:19;;;-1:-1:-1;;;;;;1340:32:19;;;;;;1410:57;;1317:13;;;-1:-1:-1;1410:57:19;;;;1317:13;;1356:16;;1410:57;;1061:399:74;1278:28;3453:12:63;:10;:12::i;:::-;3445:21;;;;;;;;1163:15:74;-1:-1:-1;;;;;450:22:51;;;;442:31;;;;;;1218:12:74;;1201:15;;-1:-1:-1;;;;;1218:12:74;;;;842:22:51;;;;838:41;;1309:12:74;;;-1:-1:-1;;;;;1331:30:74;;;-1:-1:-1;;;;;;1331:30:74;;;;;;1399:54;;1309:12;;;-1:-1:-1;1399:54:74;;;;1309:12;;1346:15;;1399:54;;1785:874:39;574:13:20;;;;;;;;;-1:-1:-1;;;;;574:13:20;-1:-1:-1;;;;;574:37:20;;:39;;;;;-1:-1:-1;;;574:39:20;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;574:39:20;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;574:39:20;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;574:39:20;;;;;;;;;566:48;;;;;;;;2141:9:92;;;:35;;-1:-1:-1;;;;;2141:35:92;;1947:5:39;;-1:-1:-1;;;;;2141:9:92;;;;:28;;:35;;1947:5:39;;2141:35:92;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2141:35:92;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2141:35:92;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;2141:35:92;;;;;;;;;2133:44;;;;;;;;2437:9;;;:40;;-1:-1:-1;;;;;2437:40:92;;1976:7:39;;-1:-1:-1;;;;;2437:9:92;;;;:31;;:40;;1976:7:39;;2437:40:92;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2437:40:92;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2437:40:92;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;2437:40:92;;;;;;;;;2429:49;;;;;;;;2067:13:39;;2052:11;;:28;2044:37;;;;;;2132:13;;;;;;;;;-1:-1:-1;;;;;2132:13:39;-1:-1:-1;;;;;2132:36:39;;:38;;;;;-1:-1:-1;;;2132:38:39;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2132:38:39;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;2226:14:39;;2264:10;;;;:15;2226:54;;-1:-1:-1;;;;;2226:54:39;;-1:-1:-1;;;;;2226:14:39;;;;-1:-1:-1;2226:37:39;;-1:-1:-1;2226:54:39;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2226:54:39;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;2290:14:39;;2330:13;;;;:22;;;:27;2290:68;;-1:-1:-1;;;;;2290:68:39;;-1:-1:-1;;;;;2290:14:39;;;;-1:-1:-1;2290:39:39;;-1:-1:-1;2290:68:39;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2290:68:39;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;2402:12:39;;2444:13;;:34;;;-1:-1:-1;;;;;2444:34:39;;;;-1:-1:-1;;;;;2402:12:39;;;;-1:-1:-1;2402:29:39;;-1:-1:-1;2432:10:39;;2444:13;;;;:32;;:34;;;;;;;;;;;;;;;2402:12;2444:13;:34;;;5:2:-1;;;;30:1;27;20:12;5:2;2444:34:39;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2444:34:39;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;2444:34:39;;;;;;;;;2480:1;2402:80;;;;;-1:-1:-1;;;2402:80:39;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2402:80:39;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;;2586:10:39;;;;:15;2603:13;;;;:22;;;:27;2520:132;;;;-1:-1:-1;2520:132:39;;2586:15;2603:27;2632:10;;2520:132;;;;;;;;;;2187:1:92;624::20;1785:874:39;;:::o;516:32:74:-;;;-1:-1:-1;;;;;516:32:74;;:::o;506:34:19:-;;;-1:-1:-1;;;;;506:34:19;;:::o;1083:314:75:-;1224:10;1208:12;:10;:12::i;:::-;-1:-1:-1;;;;;1208:26:75;;1200:35;;;;;;1282:23;:30;;-1:-1:-1;;1282:30:75;1308:4;1282:30;;;1350:40;;;;;;1379:10;;1350:40;;;;;;;;;;1083:314::o;1597:368:63:-;1794:19;3453:12;:10;:12::i;:::-;3445:21;;;;;;;;1692:11;-1:-1:-1;;;;;673:22:51;;;;665:31;;;;;;-1:-1:-1;;;;;714:25:51;;734:4;714:25;;706:34;;;;;;1738:8:63;;-1:-1:-1;;;;;1723:23:63;;;1738:8;;;;;1723:23;1719:240;;1816:8;;;-1:-1:-1;;;;;1838:22:63;;;1816:8;1838:22;;;-1:-1:-1;;;;;;1838:22:63;;;;;;1906:42;;1816:8;;;;;;-1:-1:-1;1906:42:63;;;;1816:8;;1849:11;;1906:42;;;;;;;;;;1719:240;3476:1;1597:368;;:::o;2080:::-;2277:19;3611:12;:10;:12::i;:::-;3603:21;;;;;;;;2175:11;-1:-1:-1;;;;;673:22:51;;;;665:31;;;;;;-1:-1:-1;;;;;714:25:51;;734:4;714:25;;706:34;;;;;;2221:8:63;;-1:-1:-1;;;;;2206:23:63;;;2221:8;;2206:23;2202:240;;2299:8;;;-1:-1:-1;;;;;2321:22:63;;;-1:-1:-1;;;;;;2321:22:63;;;;;;2389:42;;2299:8;;;-1:-1:-1;2389:42:63;;;;2299:8;;2332:11;;2389:42;;526:23;;;;;;-1:-1:-1;;;;;526:23:63;;:::o;2577:113::-;2634:4;2675:8;;;;-1:-1:-1;;;;;2675:8:63;2661:10;:22;;2577:113::o;2819:::-;2917:8;;-1:-1:-1;;;;;2917:8:63;2903:10;:22;;2819:113::o;5:118:-1:-;;72:46;110:6;97:20;72:46;;;63:55;57:66;-1:-1;;;57:66;175:780;;308:4;296:17;;292:27;-1:-1;282:2;;333:1;330;323:12;282:2;370:6;357:20;392:103;407:87;487:6;407:87;;;392:103;;;383:112;;512:5;537:6;530:5;523:21;567:4;559:6;555:17;545:27;;589:4;584:3;580:14;573:21;;642:6;689:3;681:4;673:6;669:17;664:3;660:27;657:36;654:2;;;706:1;703;696:12;654:2;731:1;716:233;741:6;738:1;735:13;716:233;;;799:3;821:64;881:3;869:10;821:64;;;809:77;;-1:-1;909:4;900:14;;;;937:4;928:14;;;;;763:1;756:9;716:233;;;720:14;275:680;;;;;;;;963:116;;1038:36;1066:6;1060:13;1038:36;;1086:118;;1153:46;1191:6;1178:20;1153:46;;1211:162;;1300:68;1360:6;1347:20;1300:68;;1889:156;;1975:65;2032:6;2019:20;1975:65;;2214:460;;2326:4;2314:9;2309:3;2305:19;2301:30;2298:2;;;2344:1;2341;2334:12;2298:2;2362:20;2377:4;2362:20;;;2353:29;-1:-1;2430:1;2461:49;2506:3;2486:9;2461:49;;;2437:74;;-1:-1;2570:2;2603:49;2648:3;2624:22;;;2603:49;;;2596:4;2589:5;2585:16;2578:75;2532:132;2292:382;;;;;2731:482;;2856:4;2844:9;2839:3;2835:19;2831:30;2828:2;;;2874:1;2871;2864:12;2828:2;2892:20;2907:4;2892:20;;;2883:29;-1:-1;2965:1;2996:48;3040:3;3020:9;2996:48;;3257:490;;3367:4;3355:9;3350:3;3346:19;3342:30;3339:2;;;3385:1;3382;3375:12;3339:2;3403:20;3418:4;3403:20;;;3394:29;-1:-1;3475:1;3506:48;3550:3;3530:9;3506:48;;;3482:73;;-1:-1;3620:2;3653:72;3721:3;3697:22;;;3653:72;;3808:536;;3937:4;3925:9;3920:3;3916:19;3912:30;3909:2;;;3955:1;3952;3945:12;3909:2;3973:20;3988:4;3973:20;;;3964:29;-1:-1;4047:1;4078:72;4146:3;4126:9;4078:72;;;4054:97;;-1:-1;4217:2;4250:72;4318:3;4294:22;;;4250:72;;4418:575;;4560:4;4548:9;4543:3;4539:19;4535:30;4532:2;;;4578:1;4575;4568:12;4532:2;4596:20;4611:4;4596:20;;;4587:29;-1:-1;4670:1;4701:85;4782:3;4762:9;4701:85;;;4677:110;;-1:-1;4853:2;4886:85;4967:3;4943:22;;;4886:85;;5674:495;;5790:4;5778:9;5773:3;5769:19;5765:30;5762:2;;;5808:1;5805;5798:12;5762:2;5826:20;5841:4;5826:20;;;5817:29;-1:-1;5900:1;5931:49;5976:3;5956:9;5931:49;;;5907:74;;-1:-1;6044:2;6077:70;6143:3;6119:22;;;6077:70;;6227:928;;6352:4;6340:9;6335:3;6331:19;6327:30;6324:2;;;6370:1;6367;6360:12;6324:2;6388:20;6403:4;6388:20;;;6379:29;-1:-1;6459:1;6490:49;6535:3;6515:9;6490:49;;;6466:74;;-1:-1;6603:2;6636:49;6681:3;6657:22;;;6636:49;;;6629:4;6622:5;6618:16;6611:75;6561:136;6751:2;6784:85;6865:3;6856:6;6845:9;6841:22;6784:85;;;6777:4;6770:5;6766:16;6759:111;6707:174;6959:3;6948:9;6944:19;6931:33;-1:-1;;;;;6976:6;6973:30;6970:2;;;7016:1;7013;7006:12;6970:2;7051:82;7129:3;7120:6;7109:9;7105:22;7051:82;;;7044:4;7037:5;7033:16;7026:108;6891:254;6318:837;;;;;7210:937;;7332:4;7320:9;7315:3;7311:19;7307:30;7304:2;;;7350:1;7347;7340:12;7304:2;7368:20;7383:4;7368:20;;;7359:29;-1:-1;7439:1;7470:49;7515:3;7495:9;7470:49;;;7446:74;;-1:-1;7583:2;7616:49;7661:3;7637:22;;;7616:49;;;7609:4;7602:5;7598:16;7591:75;7541:136;7731:2;7764:85;7845:3;7836:6;7825:9;7821:22;7764:85;;;7757:4;7750:5;7746:16;7739:111;7687:174;7939:3;7928:9;7924:19;7911:33;-1:-1;;;;;7956:6;7953:30;7950:2;;;7996:1;7993;7986:12;7950:2;8031:94;8121:3;8112:6;8101:9;8097:22;8031:94;;8191:1845;;8306:5;8294:9;8289:3;8285:19;8281:31;8278:2;;;8325:1;8322;8315:12;8278:2;8343:21;8358:5;8343:21;;;8334:30;-1:-1;8415:1;8446:49;8491:3;8471:9;8446:49;;;8422:74;;-1:-1;8559:2;8592:48;8636:3;8612:22;;;8592:48;;;8585:4;8578:5;8574:16;8567:74;8517:135;8706:2;8739:72;8807:3;8798:6;8787:9;8783:22;8739:72;;;8732:4;8725:5;8721:16;8714:98;8662:161;8903:3;8892:9;8888:19;8875:33;-1:-1;;;;;8920:6;8917:30;8914:2;;;8960:1;8957;8950:12;8914:2;8995:82;9073:3;9064:6;9053:9;9049:22;8995:82;;;8988:4;8981:5;8977:16;8970:108;8833:256;9172:3;9161:9;9157:19;9144:33;-1:-1;;;;;9189:6;9186:30;9183:2;;;9229:1;9226;9219:12;9183:2;9264:85;9345:3;9336:6;9325:9;9321:22;9264:85;;;9257:4;9250:5;9246:16;9239:111;9099:262;9416:3;9450:81;9527:3;9518:6;9507:9;9503:22;9450:81;;;9443:4;9436:5;9432:16;9425:107;9371:172;9594:3;9628:82;9706:3;9697:6;9686:9;9682:22;9628:82;;;9621:4;9614:5;9610:16;9603:108;9553:169;9779:3;9813:49;9858:3;9849:6;9838:9;9834:22;9813:49;;;9806:4;9799:5;9795:16;9788:75;9732:142;9930:3;9965:49;10010:3;10001:6;9990:9;9986:22;9965:49;;;9957:5;9950;9946:17;9939:76;9884:142;8272:1764;;;;;10076:489;;10184:4;10172:9;10167:3;10163:19;10159:30;10156:2;;;10202:1;10199;10192:12;10156:2;10220:20;10235:4;10220:20;;;10211:29;-1:-1;10290:1;10321:49;10366:3;10346:9;10321:49;;;10297:74;;-1:-1;10437:2;10470:73;10539:3;10515:22;;;10610:598;10723:4;10711:9;10706:3;10702:19;10698:30;10695:2;;;10741:1;10738;10731:12;10695:2;10759:20;10774:4;10759:20;;;10750:29;-1:-1;10826:1;10857:49;10902:3;10882:9;10857:49;;;10833:74;;-1:-1;10965:2;10998:49;11043:3;11019:22;;;10998:49;;;10991:4;10984:5;10980:16;10973:75;10928:131;11106:2;11139:47;11182:3;11173:6;11162:9;11158:22;11139:47;;;11132:4;11125:5;11121:16;11114:73;11069:129;10689:519;;;;;11274:644;;11408:4;11396:9;11391:3;11387:19;11383:30;11380:2;;;11426:1;11423;11416:12;11380:2;11444:20;11459:4;11444:20;;;11435:29;-1:-1;11516:1;11547:70;11613:3;11593:9;11547:70;;;11523:95;;-1:-1;11708:2;11693:18;;11680:32;-1:-1;;;;;11721:30;;11718:2;;;11764:1;11761;11754:12;11718:2;11799:97;11892:3;11883:6;11872:9;11868:22;11799:97;;12499:465;;12621:4;12609:9;12604:3;12600:19;12596:30;12593:2;;;12639:1;12636;12629:12;12593:2;12657:20;12672:4;12657:20;;;12648:29;-1:-1;12728:31;;-1:-1;;;;;12768:30;;12765:2;;;12811:1;12808;12801:12;12765:2;12845:97;12938:3;12929:6;12918:9;12914:22;12845:97;;;12821:122;;-1:-1;12832:5;12587:377;-1:-1;;12587:377;13009:689;;13123:4;13111:9;13106:3;13102:19;13098:30;13095:2;;;13141:1;13138;13131:12;13095:2;13159:20;13174:4;13159:20;;;13150:29;-1:-1;13231:1;13262:48;13306:3;13286:9;13262:48;;;13238:73;;-1:-1;13374:2;13407:84;13487:3;13463:22;;;13407:84;;;13400:4;13393:5;13389:16;13382:110;13332:171;13558:2;13591:85;13672:3;13663:6;13652:9;13648:22;13591:85;;13743:1444;;13857:5;13845:9;13840:3;13836:19;13832:31;13829:2;;;13876:1;13873;13866:12;13829:2;13894:20;13909:4;13894:20;;;13885:29;-1:-1;13965:1;13996:49;14041:3;14021:9;13996:49;;;13972:74;;-1:-1;14109:2;14142:49;14187:3;14163:22;;;14142:49;;;14135:4;14128:5;14124:16;14117:75;14067:136;14262:2;14295:49;14340:3;14331:6;14320:9;14316:22;14295:49;;;14288:4;14281:5;14277:16;14270:75;14213:143;14415:2;14448:68;14512:3;14503:6;14492:9;14488:22;14448:68;;;14441:4;14434:5;14430:16;14423:94;14366:162;14579:3;14613:74;14683:3;14674:6;14663:9;14659:22;14613:74;;;14606:4;14599:5;14595:16;14588:100;14538:161;14753:3;14787:102;14885:3;14876:6;14865:9;14861:22;14787:102;;;14780:4;14773:5;14769:16;14762:128;14709:192;14979:3;14968:9;14964:19;14951:33;-1:-1;;;;;14996:6;14993:30;14990:2;;;15036:1;15033;15026:12;14990:2;15071:94;15161:3;15152:6;15141:9;15137:22;15071:94;;;15064:4;15057:5;15053:16;15046:120;14911:266;13823:1364;;;;;15227:1986;;15340:5;15328:9;15323:3;15319:19;15315:31;15312:2;;;15359:1;15356;15349:12;15312:2;15377:21;15392:5;15377:21;;;15368:30;-1:-1;15449:1;15480:49;15525:3;15505:9;15480:49;;;15456:74;;-1:-1;15593:2;15626:48;15670:3;15646:22;;;15626:48;;;15619:4;15612:5;15608:16;15601:74;15551:135;15742:2;15775:89;15860:3;15851:6;15840:9;15836:22;15775:89;;;15768:4;15761:5;15757:16;15750:115;15696:180;15926:3;15960:48;16004:3;15995:6;15984:9;15980:22;15960:48;;;15953:4;15946:5;15942:16;15935:74;15886:134;16099:3;16088:9;16084:19;16071:33;-1:-1;;;;;16116:6;16113:30;16110:2;;;16156:1;16153;16146:12;16110:2;16191:74;16261:3;16252:6;16241:9;16237:22;16191:74;;;16184:4;16177:5;16173:16;16166:100;16030:247;16357:3;16346:9;16342:19;16329:33;-1:-1;;;;;16374:6;16371:30;16368:2;;;16414:1;16411;16404:12;16368:2;16449:74;16519:3;16510:6;16499:9;16495:22;16449:74;;;16442:4;16435:5;16431:16;16424:100;16287:248;16590:3;16624:98;16718:3;16709:6;16698:9;16694:22;16624:98;;;16617:4;16610:5;16606:16;16599:124;16545:189;16784:3;16818:68;16882:3;16873:6;16862:9;16858:22;16818:68;;;16811:4;16804:5;16800:16;16793:94;16744:154;16955:3;16990:49;17035:3;17026:6;17015:9;17011:22;16990:49;;;16982:5;16975;16971:17;16964:76;16908:143;17107:3;17142:49;17187:3;17178:6;17167:9;17163:22;17142:49;;;17134:5;17127;17123:17;17116:76;17061:142;15306:1907;;;;;17805:520;;17927:5;17915:9;17910:3;17906:19;17902:31;17899:2;;;17946:1;17943;17936:12;17899:2;17964:20;17979:4;17964:20;;;17955:29;-1:-1;18036:1;18067:68;18131:3;18111:9;18067:68;;;18043:93;;-1:-1;18201:3;18235:68;18299:3;18275:22;;;18235:68;;18457:122;;18535:39;18566:6;18560:13;18535:39;;18586:114;;18651:44;18687:6;18674:20;18651:44;;18707:241;;18811:2;18799:9;18790:7;18786:23;18782:32;18779:2;;;18827:1;18824;18817:12;18779:2;18862:1;18879:53;18924:7;18904:9;18879:53;;;18869:63;18773:175;-1:-1;;;;18773:175;18955:257;;19067:2;19055:9;19046:7;19042:23;19038:32;19035:2;;;19083:1;19080;19073:12;19035:2;19118:1;19135:61;19188:7;19168:9;19135:61;;19219:285;;19345:2;19333:9;19324:7;19320:23;19316:32;19313:2;;;19361:1;19358;19351:12;19313:2;19396:1;19413:75;19480:7;19460:9;19413:75;;20389:638;;;20560:2;20548:9;20539:7;20535:23;20531:32;20528:2;;;20576:1;20573;20566:12;20528:2;20611:31;;-1:-1;;;;;20651:30;;20648:2;;;20694:1;20691;20684:12;20648:2;20714:77;20783:7;20774:6;20763:9;20759:22;20714:77;;;20704:87;;20590:207;20856:2;20845:9;20841:18;20828:32;-1:-1;;;;;20872:6;20869:30;20866:2;;;20912:1;20909;20902:12;20866:2;20932:79;21003:7;20994:6;20983:9;20979:22;20932:79;;;20922:89;;20807:210;20522:505;;;;;;21034:263;;21149:2;21137:9;21128:7;21124:23;21120:32;21117:2;;;21165:1;21162;21155:12;21117:2;21200:1;21217:64;21273:7;21253:9;21217:64;;21304:110;21377:31;21402:5;21377:31;;;21372:3;21365:44;21359:55;;;21506:767;;21691:77;21762:5;21691:77;;;21786:6;21781:3;21774:19;21810:4;21805:3;21801:14;21794:21;;21855:79;21928:5;21855:79;;;21955:1;21940:311;21965:6;21962:1;21959:13;21940:311;;;22005:111;22112:3;22103:6;22097:13;22005:111;;;22133:83;22209:6;22133:83;;;22239:4;22230:14;;;;;22123:93;-1:-1;21987:1;21980:9;21940:311;;;-1:-1;22264:3;;21670:603;-1:-1;;;;21670:603;22281:101;22348:28;22370:5;22348:28;;22389:110;22462:31;22487:5;22462:31;;22506:160;22601:59;22654:5;22601:59;;23176:150;23266:54;23314:5;23266:54;;23447:132;23528:45;23567:5;23528:45;;23661:488;23861:22;;23794:4;23785:14;;;23895:61;23789:3;23861:22;23895:61;;;23814:154;24042:4;24035:5;24031:16;24025:23;24060:62;24116:4;24111:3;24107:14;24094:11;24060:62;;;23978:156;23767:382;;;;24253:521;24484:22;;24412:4;24403:14;;;24518:59;24407:3;24484:22;24518:59;;24852:542;25052:22;;24981:4;24972:14;;;25086:59;24976:3;25052:22;25086:59;;;25001:156;25237:4;25230:5;25226:16;25220:23;25255:112;25361:4;25356:3;25352:14;25339:11;25255:112;;25506:635;25746:22;;25673:4;25664:14;;;25780:111;25668:3;25746:22;25780:111;;;25693:210;25984:4;25977:5;25973:16;25967:23;26002:112;26108:4;26103:3;26099:14;26086:11;26002:112;;26279:713;26545:22;;26472:4;26463:14;;;26579:137;26467:3;26545:22;26579:137;;;26492:236;26809:4;26802:5;26798:16;26792:23;26827:138;26959:4;26954:3;26950:14;26937:11;26827:138;;27897:552;28111:22;;28038:4;28029:14;;;28145:61;28033:3;28111:22;28145:61;;;28058:160;28296:4;28289:5;28285:16;28279:23;28314:108;28416:4;28411:3;28407:14;28394:11;28314:108;;28555:1069;28792:22;;28555:1069;;28722:4;28713:14;;;28826:61;28717:3;28792:22;28826:61;;;28742:157;28977:4;28970:5;28966:16;28960:23;28995:62;29051:4;29046:3;29042:14;29029:11;28995:62;;;28909:160;29149:4;29142:5;29138:16;29132:23;29167:138;29299:4;29294:3;29290:14;29277:11;29167:138;;;29079:238;29393:4;29386:5;29382:16;29376:23;29444:3;29438:4;29434:14;29427:4;29422:3;29418:14;29411:38;29464:122;29581:4;29568:11;29464:122;;;29456:130;28695:929;-1:-1;;;;;28695:929;29724:1087;29955:22;;29724:1087;;29885:4;29876:14;;;29989:61;29880:3;29955:22;29989:61;;;29905:157;30140:4;30133:5;30129:16;30123:23;30158:62;30214:4;30209:3;30205:14;30192:11;30158:62;;;30072:160;30312:4;30305:5;30301:16;30295:23;30330:138;30462:4;30457:3;30453:14;30440:11;30330:138;;;30242:238;30556:4;30549:5;30545:16;30539:23;30607:3;30601:4;30597:14;30590:4;30585:3;30581:14;30574:38;30627:146;30768:4;30755:11;30627:146;;30889:2145;31103:22;;30889:2145;;31032:5;31023:15;;;31137:61;31027:3;31103:22;31137:61;;;31053:157;31288:4;31281:5;31277:16;31271:23;31306:60;31360:4;31355:3;31351:14;31338:11;31306:60;;;31220:158;31458:4;31451:5;31447:16;31441:23;31476:112;31582:4;31577:3;31573:14;31560:11;31476:112;;;31388:212;31678:4;31671:5;31667:16;31661:23;31729:3;31723:4;31719:14;31712:4;31707:3;31703:14;31696:38;31749:122;31866:4;31853:11;31749:122;;;31741:130;;31610:273;31964:4;31957:5;31953:16;31947:23;32015:3;32009:4;32005:14;31998:4;31993:3;31989:14;31982:38;32035:128;32158:4;32145:11;32035:128;;;32027:136;;31893:282;32256:4;32249:5;32245:16;32239:23;32274:130;32398:4;32393:3;32389:14;32376:11;32274:130;;;32185:231;32493:4;32486:5;32482:16;32476:23;32511:133;32637:5;32632:3;32628:15;32615:11;32511:133;;;32426:230;32739:4;32732:5;32728:16;32722:23;32757:63;32813:5;32808:3;32804:15;32791:11;32757:63;;;32666:166;32914:5;32907;32903:17;32897:24;32933:63;32989:5;32984:3;32980:15;32967:11;32933:63;;;-1:-1;33025:4;31005:2029;-1:-1;;;31005:2029;33104:541;33298:22;;33229:4;33220:14;;;33332:61;33224:3;33298:22;33332:61;;;33249:156;33486:4;33479:5;33475:16;33469:23;33504:114;33612:4;33607:3;33603:14;33590:11;33926:22;;33860:4;33851:14;;;33960:61;33855:3;33926:22;33960:61;;;33880:153;34106:4;34099:5;34095:16;34089:23;34124:62;34180:4;34175:3;34171:14;34158:11;34124:62;;;34043:155;34271:4;34264:5;34260:16;34254:23;34289:58;34341:4;34336:3;34332:14;34319:11;34289:58;;34496:747;34752:22;;34496:747;;34681:4;34672:14;;;34786:107;34676:3;34752:22;34786:107;;;34701:204;34982:4;34975:5;34971:16;34965:23;35033:3;35027:4;35023:14;35016:4;35011:3;35007:14;35000:38;35053:152;35200:4;35187:11;35053:152;;35946:507;36177:22;;36107:4;36211:37;;;35946:507;;36098:14;;;;36263:152;36098:14;36177:22;36263:152;;36533:821;36741:22;;36670:4;36661:14;;;36775:59;36665:3;36741:22;36775:59;;;36690:156;36924:4;36917:5;36913:16;36907:23;36942:136;37072:4;37067:3;37063:14;37050:11;36942:136;;;36856:234;37171:4;37164:5;37160:16;37154:23;37189:138;37321:4;37316:3;37312:14;37299:11;37189:138;;37434:1702;37650:22;;37434:1702;;37579:5;37570:15;;;37684:61;37574:3;37650:22;37684:61;;;37600:157;37835:4;37828:5;37824:16;37818:23;37853:62;37909:4;37904:3;37900:14;37887:11;37853:62;;;37767:160;38012:4;38005:5;38001:16;37995:23;38030:62;38086:4;38081:3;38077:14;38064:11;38030:62;;;37937:167;38189:4;38182:5;38178:16;38172:23;38207:79;38280:4;38275:3;38271:14;38258:11;38207:79;;;38114:184;38375:4;38368:5;38364:16;38358:23;38393:116;38503:4;38498:3;38494:14;38481:11;38393:116;;;38308:213;38601:4;38594:5;38590:16;38584:23;38619:173;38785:5;38780:3;38776:15;38763:11;38619:173;;;38531:273;38880:4;38873:5;38869:16;38863:23;38932:3;38926:4;38922:14;38914:5;38909:3;38905:15;38898:39;38952:146;39093:4;39080:11;38952:146;;39206:2309;39416:22;;39206:2309;;39345:5;39336:15;;;39450:61;39340:3;39416:22;39450:61;;;39366:157;39601:4;39594:5;39590:16;39584:23;39619:60;39673:4;39668:3;39664:14;39651:11;39619:60;;;39533:158;39773:4;39766:5;39762:16;39756:23;39791:146;39931:4;39926:3;39922:14;39909:11;39791:146;;;39701:248;40025:4;40018:5;40014:16;40008:23;40043:60;40097:4;40092:3;40088:14;40075:11;40043:60;;;39959:156;40192:4;40185:5;40181:16;40175:23;40243:3;40237:4;40233:14;40226:4;40221:3;40217:14;40210:38;40263:106;40364:4;40351:11;40263:106;;;40255:114;;40125:256;40459:4;40452:5;40448:16;40442:23;40511:3;40505:4;40501:14;40493:5;40488:3;40484:15;40477:39;40531:106;40632:4;40619:11;40531:106;;;40523:114;;40391:258;40730:4;40723:5;40719:16;40713:23;40748:165;40906:5;40901:3;40897:15;40884:11;40748:165;;;40659:266;41001:4;40994:5;40990:16;40984:23;41019:105;41117:5;41112:3;41108:15;41095:11;41019:105;;;40935:201;41219:5;41212;41208:17;41202:24;41238:63;41294:5;41289:3;41285:15;41272:11;41238:63;;;41146:167;41395:5;41388;41384:17;41378:24;41414:63;41470:5;41465:3;41461:15;41448:11;41414:63;;42237:603;42462:22;;42390:5;42381:15;;;42496:103;42385:3;42462:22;42496:103;;;42411:200;42691:4;42684:5;42680:16;42674:23;42709:104;42807:4;42802:3;42798:14;42785:11;42709:104;;42964;43033:29;43056:5;43033:29;;43075:193;43183:2;43168:18;;43197:61;43172:9;43231:6;43197:61;;;43154:114;;;;;43275:294;43411:2;43396:18;;43425:61;43400:9;43459:6;43425:61;;;43497:62;43555:2;43544:9;43540:18;43531:6;43497:62;;43576:411;43748:2;43733:18;;43762:61;43737:9;43796:6;43762:61;;;43834:62;43892:2;43881:9;43877:18;43868:6;43834:62;;;43907:70;43973:2;43962:9;43958:18;43949:6;43907:70;;43994:181;44096:2;44081:18;;44110:55;44085:9;44138:6;44110:55;;44182:193;44290:2;44275:18;;44304:61;44279:9;44338:6;44304:61;;44382:395;44546:2;44531:18;;44560:61;44535:9;44594:6;44560:61;;;44632:62;44690:2;44679:9;44675:18;44666:6;44632:62;;;44705;44763:2;44752:9;44748:18;44739:6;44705:62;;44784:237;44914:2;44899:18;;44928:83;44903:9;44984:6;44928:83;;45028:382;45208:2;45193:18;;45222:83;45197:9;45278:6;45222:83;;;45316:84;45396:2;45385:9;45381:18;45372:6;45316:84;;47322:345;47482:2;47496:47;;;47467:18;;47557:100;47467:18;47643:6;47557:100;;47674:337;47830:2;47844:47;;;47815:18;;47905:96;47815:18;47987:6;47905:96;;48018:256;48080:2;48074:9;48106:17;;;-1:-1;;;;;48166:34;;48202:22;;;48163:62;48160:2;;;48238:1;48235;48228:12;48160:2;48254;48247:22;48058:216;;-1:-1;48058:216;48281:281;;-1:-1;;;;;48455:6;48452:30;48449:2;;;48495:1;48492;48485:12;48449:2;-1:-1;48524:4;48512:17;;;48542:15;;48386:176;48571:144;48703:4;48691:17;;48672:43;48724:130;48837:12;;48821:33;49015:128;-1:-1;;;;;49084:54;;49067:76;49150:92;49223:13;49216:21;;49199:43;49249:79;49318:5;49301:27;49335:136;;49432:1;49422:12;;49412:2;;49438:9;49412:2;-1:-1;49461:5;49406:65;49649:88;49727:4;49716:16;;49699:38;50064:127;;50155:31;50180:5;50155:31;;50601:139;;50698:1;50688:12;;50678:2;;50714:1;50711;50704:12;51590:151;;51686:50;51730:5;51686:50;;51748:123;;51835:31;51860:5;51835:31;",
  "source": "/*\n * Hubii Nahmii\n *\n * Compliant with the Hubii Nahmii specification v0.12.\n *\n * Copyright (C) 2017-2018 Hubii AS\n */\n\npragma solidity ^0.4.25;\npragma experimental ABIEncoderV2;\n\nimport {Ownable} from \"./Ownable.sol\";\nimport {FraudChallengable} from \"./FraudChallengable.sol\";\nimport {ConfigurableOperational} from \"./ConfigurableOperational.sol\";\nimport {ValidatableV2} from \"./ValidatableV2.sol\";\nimport {SecurityBondable} from \"./SecurityBondable.sol\";\nimport {PaymentTypesLib} from \"./PaymentTypesLib.sol\";\nimport {TradeTypesLib} from \"./TradeTypesLib.sol\";\n\n/**\n * @title FraudChallengeByDuplicateDriipNonceOfTradeAndPayment\n * @notice Where driips are challenged wrt fraud by duplicate drip nonce of trade and payment\n */\ncontract FraudChallengeByDuplicateDriipNonceOfTradeAndPayment is Ownable, FraudChallengable, ConfigurableOperational, ValidatableV2,\nSecurityBondable {\n    //\n    // Events\n    // -----------------------------------------------------------------------------------------------------------------\n    event ChallengeByDuplicateDriipNonceOfTradeAndPaymentEvent(bytes32 tradeHash,\n        bytes32 paymentHash, address challenger);\n\n    //\n    // Constructor\n    // -----------------------------------------------------------------------------------------------------------------\n    constructor(address deployer) Ownable(deployer) public {\n    }\n\n    //\n    // Functions\n    // -----------------------------------------------------------------------------------------------------------------\n    /// @notice Submit one trade candidate and one payment candidate in continuous Fraud\n    /// Challenge (FC) to be tested for duplicate driip nonce\n    /// @param trade Trade with duplicate driip nonce\n    /// @param payment Payment with duplicate driip nonce\n    function challenge(\n        TradeTypesLib.Trade trade,\n        PaymentTypesLib.Payment payment\n    )\n    public\n    onlyOperationalModeNormal\n    onlySealedTrade(trade)\n    onlySealedPayment(payment)\n    {\n        // Require existence of fraud signal\n        require(trade.nonce == payment.nonce);\n\n        // Toggle operational mode exit\n        configuration.setOperationalModeExit();\n\n        // Tag trades (hashes) as fraudulent\n        fraudChallenge.addFraudulentTradeHash(trade.seal.hash);\n        fraudChallenge.addFraudulentPaymentHash(payment.seals.operator.hash);\n\n        // Reward stake fraction\n        securityBond.rewardFractional(msg.sender, configuration.fraudStakeFraction(), 0);\n\n        // Emit event\n        emit ChallengeByDuplicateDriipNonceOfTradeAndPaymentEvent(\n            trade.seal.hash, payment.seals.operator.hash, msg.sender\n        );\n    }\n}",
  "sourcePath": "/opt/buildagent/work/855e104608380c36/contracts/FraudChallengeByDuplicateDriipNonceOfTradeAndPayment.sol",
  "ast": {
    "absolutePath": "/opt/buildagent/work/855e104608380c36/contracts/FraudChallengeByDuplicateDriipNonceOfTradeAndPayment.sol",
    "exportedSymbols": {
      "FraudChallengeByDuplicateDriipNonceOfTradeAndPayment": [
        15988
      ]
    },
    "id": 15989,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 15876,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".25"
        ],
        "nodeType": "PragmaDirective",
        "src": "122:24:39"
      },
      {
        "id": 15877,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "147:33:39"
      },
      {
        "absolutePath": "/opt/buildagent/work/855e104608380c36/contracts/Ownable.sol",
        "file": "./Ownable.sol",
        "id": 15879,
        "nodeType": "ImportDirective",
        "scope": 15989,
        "sourceUnit": 25427,
        "src": "182:38:39",
        "symbolAliases": [
          {
            "foreign": 15878,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/opt/buildagent/work/855e104608380c36/contracts/FraudChallengable.sol",
        "file": "./FraudChallengable.sol",
        "id": 15881,
        "nodeType": "ImportDirective",
        "scope": 15989,
        "sourceUnit": 15297,
        "src": "221:58:39",
        "symbolAliases": [
          {
            "foreign": 15880,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/opt/buildagent/work/855e104608380c36/contracts/ConfigurableOperational.sol",
        "file": "./ConfigurableOperational.sol",
        "id": 15883,
        "nodeType": "ImportDirective",
        "scope": 15989,
        "sourceUnit": 5806,
        "src": "280:70:39",
        "symbolAliases": [
          {
            "foreign": 15882,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/opt/buildagent/work/855e104608380c36/contracts/ValidatableV2.sol",
        "file": "./ValidatableV2.sol",
        "id": 15885,
        "nodeType": "ImportDirective",
        "scope": 15989,
        "sourceUnit": 36466,
        "src": "351:50:39",
        "symbolAliases": [
          {
            "foreign": 15884,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/opt/buildagent/work/855e104608380c36/contracts/SecurityBondable.sol",
        "file": "./SecurityBondable.sol",
        "id": 15887,
        "nodeType": "ImportDirective",
        "scope": 15989,
        "sourceUnit": 31548,
        "src": "402:56:39",
        "symbolAliases": [
          {
            "foreign": 15886,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/opt/buildagent/work/855e104608380c36/contracts/PaymentTypesLib.sol",
        "file": "./PaymentTypesLib.sol",
        "id": 15889,
        "nodeType": "ImportDirective",
        "scope": 15989,
        "sourceUnit": 27946,
        "src": "459:54:39",
        "symbolAliases": [
          {
            "foreign": 15888,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/opt/buildagent/work/855e104608380c36/contracts/TradeTypesLib.sol",
        "file": "./TradeTypesLib.sol",
        "id": 15891,
        "nodeType": "ImportDirective",
        "scope": 15989,
        "sourceUnit": 34565,
        "src": "514:50:39",
        "symbolAliases": [
          {
            "foreign": 15890,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 15892,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 25426,
              "src": "796:7:39",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$25426",
                "typeString": "contract Ownable"
              }
            },
            "id": 15893,
            "nodeType": "InheritanceSpecifier",
            "src": "796:7:39"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 15894,
              "name": "FraudChallengable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 15296,
              "src": "805:17:39",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FraudChallengable_$15296",
                "typeString": "contract FraudChallengable"
              }
            },
            "id": 15895,
            "nodeType": "InheritanceSpecifier",
            "src": "805:17:39"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 15896,
              "name": "ConfigurableOperational",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5805,
              "src": "824:23:39",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ConfigurableOperational_$5805",
                "typeString": "contract ConfigurableOperational"
              }
            },
            "id": 15897,
            "nodeType": "InheritanceSpecifier",
            "src": "824:23:39"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 15898,
              "name": "ValidatableV2",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 36465,
              "src": "849:13:39",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ValidatableV2_$36465",
                "typeString": "contract ValidatableV2"
              }
            },
            "id": 15899,
            "nodeType": "InheritanceSpecifier",
            "src": "849:13:39"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 15900,
              "name": "SecurityBondable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 31547,
              "src": "864:16:39",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SecurityBondable_$31547",
                "typeString": "contract SecurityBondable"
              }
            },
            "id": 15901,
            "nodeType": "InheritanceSpecifier",
            "src": "864:16:39"
          }
        ],
        "contractDependencies": [
          5788,
          5805,
          15296,
          19393,
          25426,
          31547,
          31613,
          36465
        ],
        "contractKind": "contract",
        "documentation": "@title FraudChallengeByDuplicateDriipNonceOfTradeAndPayment\n@notice Where driips are challenged wrt fraud by duplicate drip nonce of trade and payment",
        "fullyImplemented": true,
        "id": 15988,
        "linearizedBaseContracts": [
          15988,
          31547,
          36465,
          5805,
          5788,
          15296,
          25426,
          31613,
          19393
        ],
        "name": "FraudChallengeByDuplicateDriipNonceOfTradeAndPayment",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": null,
            "id": 15909,
            "name": "ChallengeByDuplicateDriipNonceOfTradeAndPaymentEvent",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 15908,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15903,
                  "indexed": false,
                  "name": "tradeHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 15909,
                  "src": "1088:17:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 15902,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1088:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15905,
                  "indexed": false,
                  "name": "paymentHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 15909,
                  "src": "1115:19:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 15904,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1115:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15907,
                  "indexed": false,
                  "name": "challenger",
                  "nodeType": "VariableDeclaration",
                  "scope": 15909,
                  "src": "1136:18:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15906,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1136:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1087:68:39"
            },
            "src": "1029:127:39"
          },
          {
            "body": {
              "id": 15917,
              "nodeType": "Block",
              "src": "1364:7:39",
              "statements": []
            },
            "documentation": null,
            "id": 15918,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 15914,
                    "name": "deployer",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 15911,
                    "src": "1347:8:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 15915,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 15913,
                  "name": "Ownable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 25426,
                  "src": "1339:7:39",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Ownable_$25426_$",
                    "typeString": "type(contract Ownable)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1339:17:39"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15912,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15911,
                  "name": "deployer",
                  "nodeType": "VariableDeclaration",
                  "scope": 15918,
                  "src": "1321:16:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15910,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1321:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1320:18:39"
            },
            "payable": false,
            "returnParameters": {
              "id": 15916,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1364:0:39"
            },
            "scope": 15988,
            "src": "1309:62:39",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 15986,
              "nodeType": "Block",
              "src": "1989:670:39",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 15938,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 15934,
                            "name": "trade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15920,
                            "src": "2052:5:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$34547_memory_ptr",
                              "typeString": "struct TradeTypesLib.Trade memory"
                            }
                          },
                          "id": 15935,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "nonce",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 34528,
                          "src": "2052:11:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 15936,
                            "name": "payment",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15922,
                            "src": "2067:7:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Payment_$27936_memory_ptr",
                              "typeString": "struct PaymentTypesLib.Payment memory"
                            }
                          },
                          "id": 15937,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "nonce",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 27919,
                          "src": "2067:13:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2052:28:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 15933,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        50297,
                        50298
                      ],
                      "referencedDeclaration": 50297,
                      "src": "2044:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 15939,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2044:37:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15940,
                  "nodeType": "ExpressionStatement",
                  "src": "2044:37:39"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 15941,
                        "name": "configuration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5741,
                        "src": "2132:13:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Configuration_$7172",
                          "typeString": "contract Configuration"
                        }
                      },
                      "id": 15943,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setOperationalModeExit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6102,
                      "src": "2132:36:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 15944,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2132:38:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15945,
                  "nodeType": "ExpressionStatement",
                  "src": "2132:38:39"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 15949,
                            "name": "trade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15920,
                            "src": "2264:5:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$34547_memory_ptr",
                              "typeString": "struct TradeTypesLib.Trade memory"
                            }
                          },
                          "id": 15950,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "seal",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 34542,
                          "src": "2264:10:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Seal_$19532_memory",
                            "typeString": "struct NahmiiTypesLib.Seal memory"
                          }
                        },
                        "id": 15951,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "hash",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 19529,
                        "src": "2264:15:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 15946,
                        "name": "fraudChallenge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15249,
                        "src": "2226:14:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FraudChallenge_$15584",
                          "typeString": "contract FraudChallenge"
                        }
                      },
                      "id": 15948,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addFraudulentTradeHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15531,
                      "src": "2226:37:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 15952,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2226:54:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15953,
                  "nodeType": "ExpressionStatement",
                  "src": "2226:54:39"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 15957,
                              "name": "payment",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15922,
                              "src": "2330:7:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Payment_$27936_memory_ptr",
                                "typeString": "struct PaymentTypesLib.Payment memory"
                              }
                            },
                            "id": 15958,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "seals",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 27931,
                            "src": "2330:13:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_WalletOperatorSeal_$19537_memory",
                              "typeString": "struct NahmiiTypesLib.WalletOperatorSeal memory"
                            }
                          },
                          "id": 15959,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "operator",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 19536,
                          "src": "2330:22:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Seal_$19532_memory",
                            "typeString": "struct NahmiiTypesLib.Seal memory"
                          }
                        },
                        "id": 15960,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "hash",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 19529,
                        "src": "2330:27:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 15954,
                        "name": "fraudChallenge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15249,
                        "src": "2290:14:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FraudChallenge_$15584",
                          "typeString": "contract FraudChallenge"
                        }
                      },
                      "id": 15956,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addFraudulentPaymentHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15583,
                      "src": "2290:39:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 15961,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2290:68:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15962,
                  "nodeType": "ExpressionStatement",
                  "src": "2290:68:39"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 15966,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50294,
                          "src": "2432:3:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 15967,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2432:10:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 15968,
                            "name": "configuration",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5741,
                            "src": "2444:13:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Configuration_$7172",
                              "typeString": "contract Configuration"
                            }
                          },
                          "id": 15969,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "fraudStakeFraction",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6944,
                          "src": "2444:32:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 15970,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2444:34:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 15971,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2480:1:39",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 15963,
                        "name": "securityBond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31500,
                        "src": "2402:12:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SecurityBond_$31490",
                          "typeString": "contract SecurityBond"
                        }
                      },
                      "id": 15965,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "rewardFractional",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30890,
                      "src": "2402:29:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256) external"
                      }
                    },
                    "id": 15972,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2402:80:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15973,
                  "nodeType": "ExpressionStatement",
                  "src": "2402:80:39"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 15975,
                            "name": "trade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15920,
                            "src": "2586:5:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$34547_memory_ptr",
                              "typeString": "struct TradeTypesLib.Trade memory"
                            }
                          },
                          "id": 15976,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "seal",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 34542,
                          "src": "2586:10:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Seal_$19532_memory",
                            "typeString": "struct NahmiiTypesLib.Seal memory"
                          }
                        },
                        "id": 15977,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "hash",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 19529,
                        "src": "2586:15:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 15978,
                              "name": "payment",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15922,
                              "src": "2603:7:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Payment_$27936_memory_ptr",
                                "typeString": "struct PaymentTypesLib.Payment memory"
                              }
                            },
                            "id": 15979,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "seals",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 27931,
                            "src": "2603:13:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_WalletOperatorSeal_$19537_memory",
                              "typeString": "struct NahmiiTypesLib.WalletOperatorSeal memory"
                            }
                          },
                          "id": 15980,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "operator",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 19536,
                          "src": "2603:22:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Seal_$19532_memory",
                            "typeString": "struct NahmiiTypesLib.Seal memory"
                          }
                        },
                        "id": 15981,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "hash",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 19529,
                        "src": "2603:27:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 15982,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50294,
                          "src": "2632:3:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 15983,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2632:10:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 15974,
                      "name": "ChallengeByDuplicateDriipNonceOfTradeAndPaymentEvent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15909,
                      "src": "2520:52:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,bytes32,address)"
                      }
                    },
                    "id": 15984,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2520:132:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15985,
                  "nodeType": "EmitStatement",
                  "src": "2515:137:39"
                }
              ]
            },
            "documentation": "@notice Submit one trade candidate and one payment candidate in continuous Fraud\n Challenge (FC) to be tested for duplicate driip nonce\n @param trade Trade with duplicate driip nonce\n @param payment Payment with duplicate driip nonce",
            "id": 15987,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 15925,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 15924,
                  "name": "onlyOperationalModeNormal",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5804,
                  "src": "1901:25:39",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1901:25:39"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 15927,
                    "name": "trade",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 15920,
                    "src": "1947:5:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$34547_memory_ptr",
                      "typeString": "struct TradeTypesLib.Trade memory"
                    }
                  }
                ],
                "id": 15928,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 15926,
                  "name": "onlySealedTrade",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 36390,
                  "src": "1931:15:39",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_struct$_Trade_$34547_memory_ptr_$",
                    "typeString": "modifier (struct TradeTypesLib.Trade memory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1931:22:39"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 15930,
                    "name": "payment",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 15922,
                    "src": "1976:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Payment_$27936_memory_ptr",
                      "typeString": "struct PaymentTypesLib.Payment memory"
                    }
                  }
                ],
                "id": 15931,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 15929,
                  "name": "onlySealedPayment",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 36416,
                  "src": "1958:17:39",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_struct$_Payment_$27936_memory_ptr_$",
                    "typeString": "modifier (struct PaymentTypesLib.Payment memory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1958:26:39"
              }
            ],
            "name": "challenge",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15923,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15920,
                  "name": "trade",
                  "nodeType": "VariableDeclaration",
                  "scope": 15987,
                  "src": "1813:25:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Trade_$34547_memory_ptr",
                    "typeString": "struct TradeTypesLib.Trade"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 15919,
                    "name": "TradeTypesLib.Trade",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 34547,
                    "src": "1813:19:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$34547_storage_ptr",
                      "typeString": "struct TradeTypesLib.Trade"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15922,
                  "name": "payment",
                  "nodeType": "VariableDeclaration",
                  "scope": 15987,
                  "src": "1848:31:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Payment_$27936_memory_ptr",
                    "typeString": "struct PaymentTypesLib.Payment"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 15921,
                    "name": "PaymentTypesLib.Payment",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 27936,
                    "src": "1848:23:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Payment_$27936_storage_ptr",
                      "typeString": "struct PaymentTypesLib.Payment"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1803:82:39"
            },
            "payable": false,
            "returnParameters": {
              "id": 15932,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1989:0:39"
            },
            "scope": 15988,
            "src": "1785:874:39",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 15989,
        "src": "731:1930:39"
      }
    ],
    "src": "122:2539:39"
  },
  "legacyAST": {
    "absolutePath": "/opt/buildagent/work/855e104608380c36/contracts/FraudChallengeByDuplicateDriipNonceOfTradeAndPayment.sol",
    "exportedSymbols": {
      "FraudChallengeByDuplicateDriipNonceOfTradeAndPayment": [
        15988
      ]
    },
    "id": 15989,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 15876,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".25"
        ],
        "nodeType": "PragmaDirective",
        "src": "122:24:39"
      },
      {
        "id": 15877,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "147:33:39"
      },
      {
        "absolutePath": "/opt/buildagent/work/855e104608380c36/contracts/Ownable.sol",
        "file": "./Ownable.sol",
        "id": 15879,
        "nodeType": "ImportDirective",
        "scope": 15989,
        "sourceUnit": 25427,
        "src": "182:38:39",
        "symbolAliases": [
          {
            "foreign": 15878,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/opt/buildagent/work/855e104608380c36/contracts/FraudChallengable.sol",
        "file": "./FraudChallengable.sol",
        "id": 15881,
        "nodeType": "ImportDirective",
        "scope": 15989,
        "sourceUnit": 15297,
        "src": "221:58:39",
        "symbolAliases": [
          {
            "foreign": 15880,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/opt/buildagent/work/855e104608380c36/contracts/ConfigurableOperational.sol",
        "file": "./ConfigurableOperational.sol",
        "id": 15883,
        "nodeType": "ImportDirective",
        "scope": 15989,
        "sourceUnit": 5806,
        "src": "280:70:39",
        "symbolAliases": [
          {
            "foreign": 15882,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/opt/buildagent/work/855e104608380c36/contracts/ValidatableV2.sol",
        "file": "./ValidatableV2.sol",
        "id": 15885,
        "nodeType": "ImportDirective",
        "scope": 15989,
        "sourceUnit": 36466,
        "src": "351:50:39",
        "symbolAliases": [
          {
            "foreign": 15884,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/opt/buildagent/work/855e104608380c36/contracts/SecurityBondable.sol",
        "file": "./SecurityBondable.sol",
        "id": 15887,
        "nodeType": "ImportDirective",
        "scope": 15989,
        "sourceUnit": 31548,
        "src": "402:56:39",
        "symbolAliases": [
          {
            "foreign": 15886,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/opt/buildagent/work/855e104608380c36/contracts/PaymentTypesLib.sol",
        "file": "./PaymentTypesLib.sol",
        "id": 15889,
        "nodeType": "ImportDirective",
        "scope": 15989,
        "sourceUnit": 27946,
        "src": "459:54:39",
        "symbolAliases": [
          {
            "foreign": 15888,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/opt/buildagent/work/855e104608380c36/contracts/TradeTypesLib.sol",
        "file": "./TradeTypesLib.sol",
        "id": 15891,
        "nodeType": "ImportDirective",
        "scope": 15989,
        "sourceUnit": 34565,
        "src": "514:50:39",
        "symbolAliases": [
          {
            "foreign": 15890,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 15892,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 25426,
              "src": "796:7:39",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$25426",
                "typeString": "contract Ownable"
              }
            },
            "id": 15893,
            "nodeType": "InheritanceSpecifier",
            "src": "796:7:39"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 15894,
              "name": "FraudChallengable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 15296,
              "src": "805:17:39",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FraudChallengable_$15296",
                "typeString": "contract FraudChallengable"
              }
            },
            "id": 15895,
            "nodeType": "InheritanceSpecifier",
            "src": "805:17:39"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 15896,
              "name": "ConfigurableOperational",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5805,
              "src": "824:23:39",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ConfigurableOperational_$5805",
                "typeString": "contract ConfigurableOperational"
              }
            },
            "id": 15897,
            "nodeType": "InheritanceSpecifier",
            "src": "824:23:39"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 15898,
              "name": "ValidatableV2",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 36465,
              "src": "849:13:39",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ValidatableV2_$36465",
                "typeString": "contract ValidatableV2"
              }
            },
            "id": 15899,
            "nodeType": "InheritanceSpecifier",
            "src": "849:13:39"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 15900,
              "name": "SecurityBondable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 31547,
              "src": "864:16:39",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SecurityBondable_$31547",
                "typeString": "contract SecurityBondable"
              }
            },
            "id": 15901,
            "nodeType": "InheritanceSpecifier",
            "src": "864:16:39"
          }
        ],
        "contractDependencies": [
          5788,
          5805,
          15296,
          19393,
          25426,
          31547,
          31613,
          36465
        ],
        "contractKind": "contract",
        "documentation": "@title FraudChallengeByDuplicateDriipNonceOfTradeAndPayment\n@notice Where driips are challenged wrt fraud by duplicate drip nonce of trade and payment",
        "fullyImplemented": true,
        "id": 15988,
        "linearizedBaseContracts": [
          15988,
          31547,
          36465,
          5805,
          5788,
          15296,
          25426,
          31613,
          19393
        ],
        "name": "FraudChallengeByDuplicateDriipNonceOfTradeAndPayment",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": null,
            "id": 15909,
            "name": "ChallengeByDuplicateDriipNonceOfTradeAndPaymentEvent",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 15908,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15903,
                  "indexed": false,
                  "name": "tradeHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 15909,
                  "src": "1088:17:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 15902,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1088:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15905,
                  "indexed": false,
                  "name": "paymentHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 15909,
                  "src": "1115:19:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 15904,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1115:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15907,
                  "indexed": false,
                  "name": "challenger",
                  "nodeType": "VariableDeclaration",
                  "scope": 15909,
                  "src": "1136:18:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15906,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1136:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1087:68:39"
            },
            "src": "1029:127:39"
          },
          {
            "body": {
              "id": 15917,
              "nodeType": "Block",
              "src": "1364:7:39",
              "statements": []
            },
            "documentation": null,
            "id": 15918,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 15914,
                    "name": "deployer",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 15911,
                    "src": "1347:8:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 15915,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 15913,
                  "name": "Ownable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 25426,
                  "src": "1339:7:39",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Ownable_$25426_$",
                    "typeString": "type(contract Ownable)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1339:17:39"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15912,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15911,
                  "name": "deployer",
                  "nodeType": "VariableDeclaration",
                  "scope": 15918,
                  "src": "1321:16:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15910,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1321:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1320:18:39"
            },
            "payable": false,
            "returnParameters": {
              "id": 15916,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1364:0:39"
            },
            "scope": 15988,
            "src": "1309:62:39",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 15986,
              "nodeType": "Block",
              "src": "1989:670:39",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 15938,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 15934,
                            "name": "trade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15920,
                            "src": "2052:5:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$34547_memory_ptr",
                              "typeString": "struct TradeTypesLib.Trade memory"
                            }
                          },
                          "id": 15935,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "nonce",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 34528,
                          "src": "2052:11:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 15936,
                            "name": "payment",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15922,
                            "src": "2067:7:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Payment_$27936_memory_ptr",
                              "typeString": "struct PaymentTypesLib.Payment memory"
                            }
                          },
                          "id": 15937,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "nonce",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 27919,
                          "src": "2067:13:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2052:28:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 15933,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        50297,
                        50298
                      ],
                      "referencedDeclaration": 50297,
                      "src": "2044:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 15939,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2044:37:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15940,
                  "nodeType": "ExpressionStatement",
                  "src": "2044:37:39"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 15941,
                        "name": "configuration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5741,
                        "src": "2132:13:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Configuration_$7172",
                          "typeString": "contract Configuration"
                        }
                      },
                      "id": 15943,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setOperationalModeExit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6102,
                      "src": "2132:36:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 15944,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2132:38:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15945,
                  "nodeType": "ExpressionStatement",
                  "src": "2132:38:39"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 15949,
                            "name": "trade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15920,
                            "src": "2264:5:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$34547_memory_ptr",
                              "typeString": "struct TradeTypesLib.Trade memory"
                            }
                          },
                          "id": 15950,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "seal",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 34542,
                          "src": "2264:10:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Seal_$19532_memory",
                            "typeString": "struct NahmiiTypesLib.Seal memory"
                          }
                        },
                        "id": 15951,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "hash",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 19529,
                        "src": "2264:15:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 15946,
                        "name": "fraudChallenge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15249,
                        "src": "2226:14:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FraudChallenge_$15584",
                          "typeString": "contract FraudChallenge"
                        }
                      },
                      "id": 15948,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addFraudulentTradeHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15531,
                      "src": "2226:37:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 15952,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2226:54:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15953,
                  "nodeType": "ExpressionStatement",
                  "src": "2226:54:39"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 15957,
                              "name": "payment",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15922,
                              "src": "2330:7:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Payment_$27936_memory_ptr",
                                "typeString": "struct PaymentTypesLib.Payment memory"
                              }
                            },
                            "id": 15958,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "seals",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 27931,
                            "src": "2330:13:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_WalletOperatorSeal_$19537_memory",
                              "typeString": "struct NahmiiTypesLib.WalletOperatorSeal memory"
                            }
                          },
                          "id": 15959,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "operator",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 19536,
                          "src": "2330:22:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Seal_$19532_memory",
                            "typeString": "struct NahmiiTypesLib.Seal memory"
                          }
                        },
                        "id": 15960,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "hash",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 19529,
                        "src": "2330:27:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 15954,
                        "name": "fraudChallenge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15249,
                        "src": "2290:14:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FraudChallenge_$15584",
                          "typeString": "contract FraudChallenge"
                        }
                      },
                      "id": 15956,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addFraudulentPaymentHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15583,
                      "src": "2290:39:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 15961,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2290:68:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15962,
                  "nodeType": "ExpressionStatement",
                  "src": "2290:68:39"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 15966,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50294,
                          "src": "2432:3:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 15967,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2432:10:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 15968,
                            "name": "configuration",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5741,
                            "src": "2444:13:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Configuration_$7172",
                              "typeString": "contract Configuration"
                            }
                          },
                          "id": 15969,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "fraudStakeFraction",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6944,
                          "src": "2444:32:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 15970,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2444:34:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 15971,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2480:1:39",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 15963,
                        "name": "securityBond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31500,
                        "src": "2402:12:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SecurityBond_$31490",
                          "typeString": "contract SecurityBond"
                        }
                      },
                      "id": 15965,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "rewardFractional",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30890,
                      "src": "2402:29:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256) external"
                      }
                    },
                    "id": 15972,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2402:80:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15973,
                  "nodeType": "ExpressionStatement",
                  "src": "2402:80:39"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 15975,
                            "name": "trade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15920,
                            "src": "2586:5:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$34547_memory_ptr",
                              "typeString": "struct TradeTypesLib.Trade memory"
                            }
                          },
                          "id": 15976,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "seal",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 34542,
                          "src": "2586:10:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Seal_$19532_memory",
                            "typeString": "struct NahmiiTypesLib.Seal memory"
                          }
                        },
                        "id": 15977,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "hash",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 19529,
                        "src": "2586:15:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 15978,
                              "name": "payment",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15922,
                              "src": "2603:7:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Payment_$27936_memory_ptr",
                                "typeString": "struct PaymentTypesLib.Payment memory"
                              }
                            },
                            "id": 15979,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "seals",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 27931,
                            "src": "2603:13:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_WalletOperatorSeal_$19537_memory",
                              "typeString": "struct NahmiiTypesLib.WalletOperatorSeal memory"
                            }
                          },
                          "id": 15980,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "operator",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 19536,
                          "src": "2603:22:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Seal_$19532_memory",
                            "typeString": "struct NahmiiTypesLib.Seal memory"
                          }
                        },
                        "id": 15981,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "hash",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 19529,
                        "src": "2603:27:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 15982,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50294,
                          "src": "2632:3:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 15983,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2632:10:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 15974,
                      "name": "ChallengeByDuplicateDriipNonceOfTradeAndPaymentEvent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15909,
                      "src": "2520:52:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,bytes32,address)"
                      }
                    },
                    "id": 15984,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2520:132:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15985,
                  "nodeType": "EmitStatement",
                  "src": "2515:137:39"
                }
              ]
            },
            "documentation": "@notice Submit one trade candidate and one payment candidate in continuous Fraud\n Challenge (FC) to be tested for duplicate driip nonce\n @param trade Trade with duplicate driip nonce\n @param payment Payment with duplicate driip nonce",
            "id": 15987,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 15925,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 15924,
                  "name": "onlyOperationalModeNormal",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5804,
                  "src": "1901:25:39",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1901:25:39"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 15927,
                    "name": "trade",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 15920,
                    "src": "1947:5:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$34547_memory_ptr",
                      "typeString": "struct TradeTypesLib.Trade memory"
                    }
                  }
                ],
                "id": 15928,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 15926,
                  "name": "onlySealedTrade",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 36390,
                  "src": "1931:15:39",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_struct$_Trade_$34547_memory_ptr_$",
                    "typeString": "modifier (struct TradeTypesLib.Trade memory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1931:22:39"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 15930,
                    "name": "payment",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 15922,
                    "src": "1976:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Payment_$27936_memory_ptr",
                      "typeString": "struct PaymentTypesLib.Payment memory"
                    }
                  }
                ],
                "id": 15931,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 15929,
                  "name": "onlySealedPayment",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 36416,
                  "src": "1958:17:39",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_struct$_Payment_$27936_memory_ptr_$",
                    "typeString": "modifier (struct PaymentTypesLib.Payment memory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1958:26:39"
              }
            ],
            "name": "challenge",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15923,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15920,
                  "name": "trade",
                  "nodeType": "VariableDeclaration",
                  "scope": 15987,
                  "src": "1813:25:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Trade_$34547_memory_ptr",
                    "typeString": "struct TradeTypesLib.Trade"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 15919,
                    "name": "TradeTypesLib.Trade",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 34547,
                    "src": "1813:19:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$34547_storage_ptr",
                      "typeString": "struct TradeTypesLib.Trade"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15922,
                  "name": "payment",
                  "nodeType": "VariableDeclaration",
                  "scope": 15987,
                  "src": "1848:31:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Payment_$27936_memory_ptr",
                    "typeString": "struct PaymentTypesLib.Payment"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 15921,
                    "name": "PaymentTypesLib.Payment",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 27936,
                    "src": "1848:23:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Payment_$27936_storage_ptr",
                      "typeString": "struct PaymentTypesLib.Payment"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1803:82:39"
            },
            "payable": false,
            "returnParameters": {
              "id": 15932,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1989:0:39"
            },
            "scope": 15988,
            "src": "1785:874:39",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 15989,
        "src": "731:1930:39"
      }
    ],
    "src": "122:2539:39"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.25+commit.59dbf8f1.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.2",
  "updatedAt": "2019-04-02T06:20:36.941Z"
}