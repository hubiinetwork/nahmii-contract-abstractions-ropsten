{
  "contractName": "FraudChallengeByDuplicateDriipNonceOfTradeAndPayment",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "newFraudChallenge",
          "type": "address"
        }
      ],
      "name": "setFraudChallenge",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newValidator",
          "type": "address"
        }
      ],
      "name": "setValidator",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "triggerSelfDestruction",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "selfDestructionDisabled",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "validator",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "fraudChallenge",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "destructor",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "operator",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newConfiguration",
          "type": "address"
        }
      ],
      "name": "setConfiguration",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newSecurityBond",
          "type": "address"
        }
      ],
      "name": "setSecurityBond",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "securityBond",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "configuration",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "disableSelfDestruction",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newDeployer",
          "type": "address"
        }
      ],
      "name": "setDeployer",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOperator",
          "type": "address"
        }
      ],
      "name": "setOperator",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "deployer",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "deployer",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "tradeHash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "paymentHash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "challenger",
          "type": "address"
        }
      ],
      "name": "ChallengeByDuplicateDriipNonceOfTradeAndPaymentEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "oldSecurityBond",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "newSecurityBond",
          "type": "address"
        }
      ],
      "name": "SetSecurityBondEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "oldValidator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "newValidator",
          "type": "address"
        }
      ],
      "name": "SetValidatorEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "oldConfiguration",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "newConfiguration",
          "type": "address"
        }
      ],
      "name": "SetConfigurationEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "oldFraudChallenge",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "newFraudChallenge",
          "type": "address"
        }
      ],
      "name": "SetFraudChallengeEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "oldDeployer",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "newDeployer",
          "type": "address"
        }
      ],
      "name": "SetDeployerEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "oldOperator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "newOperator",
          "type": "address"
        }
      ],
      "name": "SetOperatorEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "wallet",
          "type": "address"
        }
      ],
      "name": "SelfDestructionDisabledEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "wallet",
          "type": "address"
        }
      ],
      "name": "TriggerSelfDestructionEvent",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "components": [
            {
              "name": "nonce",
              "type": "uint256"
            },
            {
              "name": "amount",
              "type": "int256"
            },
            {
              "components": [
                {
                  "components": [
                    {
                      "name": "ct",
                      "type": "address"
                    },
                    {
                      "name": "id",
                      "type": "uint256"
                    }
                  ],
                  "name": "intended",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "name": "ct",
                      "type": "address"
                    },
                    {
                      "name": "id",
                      "type": "uint256"
                    }
                  ],
                  "name": "conjugate",
                  "type": "tuple"
                }
              ],
              "name": "currencies",
              "type": "tuple"
            },
            {
              "name": "rate",
              "type": "int256"
            },
            {
              "components": [
                {
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "name": "wallet",
                  "type": "address"
                },
                {
                  "name": "rollingVolume",
                  "type": "uint256"
                },
                {
                  "name": "liquidityRole",
                  "type": "uint8"
                },
                {
                  "components": [
                    {
                      "name": "amount",
                      "type": "int256"
                    },
                    {
                      "components": [
                        {
                          "name": "wallet",
                          "type": "bytes32"
                        },
                        {
                          "name": "operator",
                          "type": "bytes32"
                        }
                      ],
                      "name": "hashes",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "name": "current",
                          "type": "int256"
                        },
                        {
                          "name": "previous",
                          "type": "int256"
                        }
                      ],
                      "name": "residuals",
                      "type": "tuple"
                    }
                  ],
                  "name": "order",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "components": [
                        {
                          "name": "current",
                          "type": "int256"
                        },
                        {
                          "name": "previous",
                          "type": "int256"
                        }
                      ],
                      "name": "intended",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "name": "current",
                          "type": "int256"
                        },
                        {
                          "name": "previous",
                          "type": "int256"
                        }
                      ],
                      "name": "conjugate",
                      "type": "tuple"
                    }
                  ],
                  "name": "balances",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "components": [
                        {
                          "name": "amount",
                          "type": "int256"
                        },
                        {
                          "components": [
                            {
                              "name": "ct",
                              "type": "address"
                            },
                            {
                              "name": "id",
                              "type": "uint256"
                            }
                          ],
                          "name": "currency",
                          "type": "tuple"
                        }
                      ],
                      "name": "single",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "name": "originId",
                          "type": "uint256"
                        },
                        {
                          "components": [
                            {
                              "name": "amount",
                              "type": "int256"
                            },
                            {
                              "components": [
                                {
                                  "name": "ct",
                                  "type": "address"
                                },
                                {
                                  "name": "id",
                                  "type": "uint256"
                                }
                              ],
                              "name": "currency",
                              "type": "tuple"
                            }
                          ],
                          "name": "figure",
                          "type": "tuple"
                        }
                      ],
                      "name": "total",
                      "type": "tuple[]"
                    }
                  ],
                  "name": "fees",
                  "type": "tuple"
                }
              ],
              "name": "buyer",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "name": "wallet",
                  "type": "address"
                },
                {
                  "name": "rollingVolume",
                  "type": "uint256"
                },
                {
                  "name": "liquidityRole",
                  "type": "uint8"
                },
                {
                  "components": [
                    {
                      "name": "amount",
                      "type": "int256"
                    },
                    {
                      "components": [
                        {
                          "name": "wallet",
                          "type": "bytes32"
                        },
                        {
                          "name": "operator",
                          "type": "bytes32"
                        }
                      ],
                      "name": "hashes",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "name": "current",
                          "type": "int256"
                        },
                        {
                          "name": "previous",
                          "type": "int256"
                        }
                      ],
                      "name": "residuals",
                      "type": "tuple"
                    }
                  ],
                  "name": "order",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "components": [
                        {
                          "name": "current",
                          "type": "int256"
                        },
                        {
                          "name": "previous",
                          "type": "int256"
                        }
                      ],
                      "name": "intended",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "name": "current",
                          "type": "int256"
                        },
                        {
                          "name": "previous",
                          "type": "int256"
                        }
                      ],
                      "name": "conjugate",
                      "type": "tuple"
                    }
                  ],
                  "name": "balances",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "components": [
                        {
                          "name": "amount",
                          "type": "int256"
                        },
                        {
                          "components": [
                            {
                              "name": "ct",
                              "type": "address"
                            },
                            {
                              "name": "id",
                              "type": "uint256"
                            }
                          ],
                          "name": "currency",
                          "type": "tuple"
                        }
                      ],
                      "name": "single",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "name": "originId",
                          "type": "uint256"
                        },
                        {
                          "components": [
                            {
                              "name": "amount",
                              "type": "int256"
                            },
                            {
                              "components": [
                                {
                                  "name": "ct",
                                  "type": "address"
                                },
                                {
                                  "name": "id",
                                  "type": "uint256"
                                }
                              ],
                              "name": "currency",
                              "type": "tuple"
                            }
                          ],
                          "name": "figure",
                          "type": "tuple"
                        }
                      ],
                      "name": "total",
                      "type": "tuple[]"
                    }
                  ],
                  "name": "fees",
                  "type": "tuple"
                }
              ],
              "name": "seller",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "components": [
                    {
                      "name": "single",
                      "type": "int256"
                    },
                    {
                      "name": "total",
                      "type": "int256"
                    }
                  ],
                  "name": "intended",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "name": "single",
                      "type": "int256"
                    },
                    {
                      "name": "total",
                      "type": "int256"
                    }
                  ],
                  "name": "conjugate",
                  "type": "tuple"
                }
              ],
              "name": "transfers",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "name": "hash",
                  "type": "bytes32"
                },
                {
                  "components": [
                    {
                      "name": "r",
                      "type": "bytes32"
                    },
                    {
                      "name": "s",
                      "type": "bytes32"
                    },
                    {
                      "name": "v",
                      "type": "uint8"
                    }
                  ],
                  "name": "signature",
                  "type": "tuple"
                }
              ],
              "name": "seal",
              "type": "tuple"
            },
            {
              "name": "blockNumber",
              "type": "uint256"
            },
            {
              "name": "operatorId",
              "type": "uint256"
            }
          ],
          "name": "trade",
          "type": "tuple"
        },
        {
          "components": [
            {
              "name": "nonce",
              "type": "uint256"
            },
            {
              "name": "amount",
              "type": "int256"
            },
            {
              "components": [
                {
                  "name": "ct",
                  "type": "address"
                },
                {
                  "name": "id",
                  "type": "uint256"
                }
              ],
              "name": "currency",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "name": "wallet",
                  "type": "address"
                },
                {
                  "components": [
                    {
                      "name": "current",
                      "type": "int256"
                    },
                    {
                      "name": "previous",
                      "type": "int256"
                    }
                  ],
                  "name": "balances",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "components": [
                        {
                          "name": "amount",
                          "type": "int256"
                        },
                        {
                          "components": [
                            {
                              "name": "ct",
                              "type": "address"
                            },
                            {
                              "name": "id",
                              "type": "uint256"
                            }
                          ],
                          "name": "currency",
                          "type": "tuple"
                        }
                      ],
                      "name": "single",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "name": "originId",
                          "type": "uint256"
                        },
                        {
                          "components": [
                            {
                              "name": "amount",
                              "type": "int256"
                            },
                            {
                              "components": [
                                {
                                  "name": "ct",
                                  "type": "address"
                                },
                                {
                                  "name": "id",
                                  "type": "uint256"
                                }
                              ],
                              "name": "currency",
                              "type": "tuple"
                            }
                          ],
                          "name": "figure",
                          "type": "tuple"
                        }
                      ],
                      "name": "total",
                      "type": "tuple[]"
                    }
                  ],
                  "name": "fees",
                  "type": "tuple"
                }
              ],
              "name": "sender",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "name": "wallet",
                  "type": "address"
                },
                {
                  "components": [
                    {
                      "name": "current",
                      "type": "int256"
                    },
                    {
                      "name": "previous",
                      "type": "int256"
                    }
                  ],
                  "name": "balances",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "components": [
                        {
                          "name": "originId",
                          "type": "uint256"
                        },
                        {
                          "components": [
                            {
                              "name": "amount",
                              "type": "int256"
                            },
                            {
                              "components": [
                                {
                                  "name": "ct",
                                  "type": "address"
                                },
                                {
                                  "name": "id",
                                  "type": "uint256"
                                }
                              ],
                              "name": "currency",
                              "type": "tuple"
                            }
                          ],
                          "name": "figure",
                          "type": "tuple"
                        }
                      ],
                      "name": "total",
                      "type": "tuple[]"
                    }
                  ],
                  "name": "fees",
                  "type": "tuple"
                }
              ],
              "name": "recipient",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "name": "single",
                  "type": "int256"
                },
                {
                  "name": "total",
                  "type": "int256"
                }
              ],
              "name": "transfers",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "components": [
                    {
                      "name": "hash",
                      "type": "bytes32"
                    },
                    {
                      "components": [
                        {
                          "name": "r",
                          "type": "bytes32"
                        },
                        {
                          "name": "s",
                          "type": "bytes32"
                        },
                        {
                          "name": "v",
                          "type": "uint8"
                        }
                      ],
                      "name": "signature",
                      "type": "tuple"
                    }
                  ],
                  "name": "wallet",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "name": "hash",
                      "type": "bytes32"
                    },
                    {
                      "components": [
                        {
                          "name": "r",
                          "type": "bytes32"
                        },
                        {
                          "name": "s",
                          "type": "bytes32"
                        },
                        {
                          "name": "v",
                          "type": "uint8"
                        }
                      ],
                      "name": "signature",
                      "type": "tuple"
                    }
                  ],
                  "name": "operator",
                  "type": "tuple"
                }
              ],
              "name": "seals",
              "type": "tuple"
            },
            {
              "name": "blockNumber",
              "type": "uint256"
            },
            {
              "name": "operatorId",
              "type": "uint256"
            }
          ],
          "name": "payment",
          "type": "tuple"
        }
      ],
      "name": "challenge",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "",
  "deployedBytecode": "0x6080604052600436106100d75763ffffffff60e060020a60003504166301370d0681146100dc5780631327d3d8146100fe5780632738a1121461011e5780632f013a00146101335780633a5381b51461015e5780633bd7857f146101805780634476d23b14610195578063570ca735146101b7578063627f09c3146101cc5780636792ce6e146101ec5780636a06219a1461020c5780636b0570d01461022c5780636c70bee91461024157806370327ea114610256578063962147351461026b578063b3ab15fb1461028b578063d5f39488146102ab575b600080fd5b3480156100e857600080fd5b506100fc6100f7366004611468565b6102c0565b005b34801561010a57600080fd5b506100fc610119366004611468565b610368565b34801561012a57600080fd5b506100fc610400565b34801561013f57600080fd5b50610148610466565b6040516101559190611a96565b60405180910390f35b34801561016a57600080fd5b5061017361046f565b6040516101559190611ada565b34801561018c57600080fd5b5061017361047e565b3480156101a157600080fd5b506101aa61048d565b6040516101559190611a3f565b3480156101c357600080fd5b506101aa6104a1565b3480156101d857600080fd5b506100fc6101e7366004611468565b6104b0565b3480156101f857600080fd5b506100fc610207366004611468565b610548565b34801561021857600080fd5b506100fc610227366004611486565b6105e0565b34801561023857600080fd5b50610173610a1d565b34801561024d57600080fd5b50610173610a2c565b34801561026257600080fd5b506100fc610a3b565b34801561027757600080fd5b506100fc610286366004611424565b610a9e565b34801561029757600080fd5b506100fc6102a6366004611424565b610b65565b3480156102b757600080fd5b506101aa610c0f565b60006102ca610c23565b15156102d557600080fd5b81600160a060020a03811615156102eb57600080fd5b6002548390600160a060020a0390811690821681146103615760028054600160a060020a03878116600160a060020a0319831617909255604051911694507f07998fa7be97abe2427246ae4688298c89d6196bbffdf0997b9495a8d27bc673906103589086908890611ae8565b60405180910390a15b5050505050565b6000610372610c23565b151561037d57600080fd5b81600160a060020a038116151561039357600080fd5b6004548390600160a060020a0390811690821681146103615760048054600160a060020a03878116600160a060020a0319831617909255604051911694507f1882af944a16549c3d4f60e3cd26f158b0c7aac3222cf32971fc21375ce05f60906103589086908890611ae8565b3361040961048d565b600160a060020a03161461041c57600080fd5b60005460ff161561042c57600080fd5b7f787a5d936e74f4b564b9153575886059829c78cd9927b1be5e0d976b317ef7363360405161045b9190611a3f565b60405180910390a133ff5b60005460ff1681565b600454600160a060020a031681565b600254600160a060020a031681565b6000546101009004600160a060020a031690565b600154600160a060020a031681565b60006104ba610c23565b15156104c557600080fd5b81600160a060020a03811615156104db57600080fd5b6003548390600160a060020a0390811690821681146103615760038054600160a060020a03878116600160a060020a0319831617909255604051911694507f634f61bf00e14adedce330c80c2823e16e184f189ebe853e1ddecc4a268477ff906103589086908890611ae8565b6000610552610c23565b151561055d57600080fd5b81600160a060020a038116151561057357600080fd5b6005548390600160a060020a0390811690821681146103615760058054600160a060020a03878116600160a060020a0319831617909255604051911694507fc9f3f00c1760fe26985aeacb814a21c56ea289d680562e89b249681b08c30382906103589086908890611ae8565b600360009054906101000a9004600160a060020a0316600160a060020a031663f71e860f6040518163ffffffff1660e060020a028152600401602060405180830381600087803b15801561063357600080fd5b505af1158015610647573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061066b919081019061144a565b151561067657600080fd5b6004805460405160e160020a637211c8c70281528492600160a060020a039092169163e423918e916106aa91859101611b14565b602060405180830381600087803b1580156106c457600080fd5b505af11580156106d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506106fc919081019061144a565b151561070757600080fd5b6004805460405160e060020a63a865476b0281528492600160a060020a039092169163a865476b9161073b91859101611b03565b602060405180830381600087803b15801561075557600080fd5b505af1158015610769573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061078d919081019061144a565b151561079857600080fd5b82518451146107a657600080fd5b600360009054906101000a9004600160a060020a0316600160a060020a031663f8e6e8886040518163ffffffff1660e060020a028152600401600060405180830381600087803b1580156107f957600080fd5b505af115801561080d573d6000803e3d6000fd5b505060025460e08701515160405160e060020a6375d8655b028152600160a060020a0390921693506375d8655b925061084891600401611aa4565b600060405180830381600087803b15801561086257600080fd5b505af1158015610876573d6000803e3d6000fd5b505060025460c0860151602001515160405160e060020a6388cb0a49028152600160a060020a0390921693506388cb0a4992506108b591600401611aa4565b600060405180830381600087803b1580156108cf57600080fd5b505af11580156108e3573d6000803e3d6000fd5b50506005546003546040805160e060020a639699f3370281529051600160a060020a03938416955063760b82929450339390921691639699f337916004808201926020929091908290030181600087803b15801561094057600080fd5b505af1158015610954573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061097891908101906114ed565b60006040518463ffffffff1660e060020a02815260040161099b93929190611a6e565b600060405180830381600087803b1580156109b557600080fd5b505af11580156109c9573d6000803e3d6000fd5b50505060e08501515160c085015160200151516040517fc2f1c7c11d23566143ab8ec3d13174e6794edbd843f956688e18fb079eb50bed9350610a0f9291903390611ab2565b60405180910390a150505050565b600554600160a060020a031681565b600354600160a060020a031681565b33610a4461048d565b600160a060020a031614610a5757600080fd5b6000805460ff191660011790556040517fd5a2a04a775c741c2ca0dc46ea7ce4835190e1aaf1ca018def0e82568ec3361690610a94903390611a3f565b60405180910390a1565b6000610aa8610c23565b1515610ab357600080fd5b81600160a060020a0381161515610ac957600080fd5b600160a060020a038116301415610adf57600080fd5b600054600160a060020a038481166101009092041614610b605760008054600160a060020a0385811661010090810261010060a860020a0319841617909355604051929091041692507f977e5fa58e458501775e0008d275006294c5249e3c08d1d0e3a9f3acad14f6e490610b579084908690611a53565b60405180910390a15b505050565b6000610b6f610c39565b1515610b7a57600080fd5b81600160a060020a0381161515610b9057600080fd5b600160a060020a038116301415610ba657600080fd5b600154600160a060020a03848116911614610b605760018054600160a060020a03858116600160a060020a0319831617909255604051911692507f9f611b789425d0d5b90b920f1b2852907dd865c80074a30b1629aaa041d1812c90610b579084908690611a53565b6000546101009004600160a060020a031681565b6000546101009004600160a060020a0316331490565b600154600160a060020a0316331490565b6000610c568235611b75565b9392505050565b6000601f82018313610c6e57600080fd5b8135610c81610c7c82611b4b565b611b25565b91508181835260208401935060208101905083856080840282011115610ca657600080fd5b60005b83811015610cd45781610cbc8882610e30565b84525060209092019160809190910190600101610ca9565b5050505092915050565b6000610c568251611b81565b6000610c568235611b86565b6000610c568235611b9f565b6000610c568235611baa565b600060408284031215610d2057600080fd5b610d2a6040611b25565b90506000610d388484610c4a565b8252506020610d4984848301610cea565b60208301525092915050565b600060408284031215610d6757600080fd5b610d716040611b25565b90506000610d388484610cea565b600060608284031215610d9157600080fd5b610d9b6040611b25565b90506000610da98484610cea565b8252506020610d4984848301610d0e565b600060808284031215610dcc57600080fd5b610dd66040611b25565b90506000610de48484610d0e565b8252506040610d4984848301610d0e565b600060808284031215610e0757600080fd5b610e116040611b25565b90506000610e1f8484610d55565b8252506040610d4984848301610d55565b600060808284031215610e4257600080fd5b610e4c6040611b25565b90506000610e5a8484610cea565b8252506020610d4984848301610d7f565b600060a08284031215610e7d57600080fd5b610e876080611b25565b90506000610e958484610cea565b8252506020610ea684848301610c4a565b6020830152506040610eba84828501610d55565b60408301525060808201356001604060020a03811115610ed957600080fd5b610ee584828501611155565b60608301525092915050565b600060a08284031215610f0357600080fd5b610f0d6080611b25565b90506000610f1b8484610cea565b8252506020610f2c84848301610c4a565b6020830152506040610f4084828501610d55565b60408301525060808201356001604060020a03811115610f5f57600080fd5b610ee584828501611103565b60006102408284031215610f7e57600080fd5b610f89610120611b25565b90506000610f978484610cea565b8252506020610fa884848301610cea565b6020830152506040610fbc84828501610d0e565b60408301525060808201356001604060020a03811115610fdb57600080fd5b610fe784828501610ef1565b60608301525060a08201356001604060020a0381111561100657600080fd5b61101284828501610e6b565b60808301525060c061102684828501610d55565b60a08301525061010061103b848285016113d0565b60c08301525061020061105084828501610cea565b60e08301525061022061106584828501610cea565b6101008301525092915050565b60006080828403121561108457600080fd5b61108e6040611b25565b9050600061109c8484610cea565b8252506020610d49848483016000606082840312156110ba57600080fd5b6110c46060611b25565b905060006110d28484610cea565b82525060206110e384848301610cea565b60208301525060406110f784828501611418565b60408301525092915050565b60006080828403121561111557600080fd5b61111f6040611b25565b9050600061112d8484610d7f565b82525060608201356001604060020a0381111561114957600080fd5b610d4984828501610c5d565b60006020828403121561116757600080fd5b6111716020611b25565b905081356001604060020a0381111561118957600080fd5b61119584828501610c5d565b82525092915050565b600060a082840312156111b057600080fd5b6111ba6060611b25565b905060006111c88484610cea565b82525060206111d984848301610d55565b60208301525060606110f784828501610d55565b60006101c0828403121561120057600080fd5b61120a60e0611b25565b905060006112188484610cea565b825250602061122984848301610c4a565b602083015250604061123d84828501610cea565b604083015250606061125184828501610d02565b60608301525060806112658482850161119e565b60808301525061012061127a84828501610df5565b60a0830152506101a08201356001604060020a0381111561129a57600080fd5b6112a684828501611103565b60c08301525092915050565b600061026082840312156112c557600080fd5b6112d0610140611b25565b905060006112de8484610cea565b82525060206112ef84848301610cea565b602083015250604061130384828501610dba565b60408301525060c061131784828501610cea565b60608301525060e08201356001604060020a0381111561133657600080fd5b611342848285016111ed565b6080830152506101008201356001604060020a0381111561136257600080fd5b61136e848285016111ed565b60a08301525061012061138384828501610df5565b60c0830152506101a061139884828501611072565b60e0830152506102206113ad84828501610cea565b610100830152506102406113c384828501610cea565b6101208301525092915050565b600061010082840312156113e357600080fd5b6113ed6040611b25565b905060006113fb8484611072565b8252506080610d4984848301611072565b6000610c568251611b86565b6000610c568235611b99565b60006020828403121561143657600080fd5b60006114428484610c4a565b949350505050565b60006020828403121561145c57600080fd5b60006114428484610cde565b60006020828403121561147a57600080fd5b60006114428484610cf6565b6000806040838503121561149957600080fd5b82356001604060020a038111156114af57600080fd5b6114bb858286016112b2565b92505060208301356001604060020a038111156114d757600080fd5b6114e385828601610f6b565b9150509250929050565b6000602082840312156114ff57600080fd5b6000611442848461140c565b61151481611b75565b82525050565b600061152582611b71565b80845260208401935061153783611b6b565b60005b828110156115675761154d868351611645565b61155682611b6b565b60809690960195915060010161153a565b5093949350505050565b61151481611b81565b61151481611b86565b61151481611b9f565b61151481611bb9565b61151481611bc4565b805160408301906115af848261150b565b5060208201516115c2602085018261157a565b50505050565b805160408301906115af848261157a565b805160608301906115ea848261157a565b5060208201516115c2602085018261159e565b8051608083019061160e848261159e565b5060208201516115c2604085018261159e565b8051608083019061163284826115c8565b5060208201516115c260408501826115c8565b80516080830190611656848261157a565b5060208201516115c260208501826115d9565b805160009060a084019061167d858261157a565b506020830151611690602086018261150b565b5060408301516116a360408601826115c8565b50606083015184820360808601526116bb828261185f565b95945050505050565b805160009060a08401906116d8858261157a565b5060208301516116eb602086018261150b565b5060408301516116fe60408601826115c8565b50606083015184820360808601526116bb8282611833565b805160009061024084019061172b858261157a565b50602083015161173e602086018261157a565b506040830151611751604086018261159e565b506060830151848203608086015261176982826116c4565b915050608083015184820360a08601526117838282611669565b91505060a083015161179860c08601826115c8565b5060c08301516117ac610100860182611a11565b5060e08301516117c061020086018261157a565b506101008301516117d561022086018261157a565b509392505050565b805160808301906117ee848261157a565b5060208201516115c260208501828051606083019061180d848261157a565b506020820151611820602085018261157a565b5060408201516115c26040850182611a36565b8051600090608084019061184785826115d9565b50602083015184820360608601526116bb828261151a565b80516020808452600091908401906116bb828261151a565b805160a0830190611888848261157a565b50602082015161189b60208501826115c8565b5060408201516115c260608501826115c8565b80516000906101c08401906118c3858261157a565b5060208301516118d6602086018261150b565b5060408301516118e9604086018261157a565b5060608301516118fc606086018261158c565b50608083015161190f6080860182611877565b5060a0830151611923610120860182611621565b5060c08301518482036101a08601526116bb8282611833565b8051600090610260840190611951858261157a565b506020830151611964602086018261157a565b50604083015161197760408601826115fd565b50606083015161198a60c086018261157a565b50608083015184820360e08601526119a282826118ae565b91505060a08301518482036101008601526119bd82826118ae565b91505060c08301516119d3610120860182611621565b5060e08301516119e76101a08601826117dd565b506101008301516119fc61022086018261157a565b506101208301516117d561024086018261157a565b8051610100830190611a2384826117dd565b5060208201516115c260808501826117dd565b61151481611b99565b60208101611a4d828461150b565b92915050565b60408101611a61828561150b565b610c56602083018461150b565b60608101611a7c828661150b565b611a89602083018561157a565b6114426040830184611595565b60208101611a4d8284611571565b60208101611a4d828461157a565b60608101611ac0828661157a565b611acd602083018561157a565b611442604083018461150b565b60208101611a4d8284611583565b60408101611af68285611583565b610c566020830184611583565b60208082528101610c568184611716565b60208082528101610c56818461193c565b6040518181016001604060020a0381118282101715611b4357600080fd5b604052919050565b60006001604060020a03821115611b6157600080fd5b5060209081020190565b60200190565b5190565b600160a060020a031690565b151590565b90565b600060028210611b9557fe5b5090565b60ff1690565b6000611a4d82611b75565b600060028210611b9557600080fd5b6000611a4d82611b89565b6000611a4d82611b865600a265627a7a72305820eca8c284767240220ea04273701edccfd934a91c1d8bbebc0ceeea061fdef1d46c6578706572696d656e74616cf50037",
  "sourceMap": "646:1914:32:-;;;1208:62;8:9:-1;5:2;;;30:1;27;20:12;5:2;1208:62:32;;;;;;;;;;;;;;;;;;;;;;1246:8;;-1:-1:-1;;;;;673:22:46;;;;665:31;;;;;;-1:-1:-1;;;;;714:25:46;;734:4;714:25;;706:34;;;;;;-1:-1:-1;1097:8:54;:20;;-1:-1:-1;;;;;;1097:20:54;;-1:-1:-1;;;;;1097:20:54;;;;;;;;;;-1:-1:-1;1127:20:54;;-1:-1:-1;;;;;;1127:20:54;;;;;;-1:-1:-1;646:1914:32;;5:122:-1;;83:39;114:6;108:13;83:39;;;74:48;68:59;-1:-1;;;68:59;134:263;;249:2;237:9;228:7;224:23;220:32;217:2;;;265:1;262;255:12;217:2;300:1;317:64;373:7;353:9;317:64;;;307:74;211:186;-1:-1;;;;211:186;404:128;-1:-1;;;;;473:54;;456:76;;646:1914:32;;;;;;",
  "deployedSourceMap": "646:1914:32:-;;;;;;;;;-1:-1:-1;;;646:1914:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1089:430:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1089:430:28;;;;;;;;;;;1063:353:76;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1063:353:76;;;;;;;;;1441:425:63;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1441:425:63;;;;413:35;;8:9:-1;5:2;;;30:1;27;20:12;5:2;413:35:63;;;;;;;;;;;;;;;;;;;;549:26:76;;8:9:-1;5:2;;;30:1;27;20:12;5:2;549:26:76;;;;;;;;;;;;524:36:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;524:36:28;;;;1382:100:54;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1382:100:54;;;;;;;;;;;;555:23;;8:9:-1;5:2;;;30:1;27;20:12;5:2;555:23:54;;;;1060:414:19;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1060:414:19;;;;;;;;;1061:399:62;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1061:399:62;;;;;;;;;1684:874:32;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1684:874:32;;;;;;;;;516:32:62;;8:9:-1;5:2;;;30:1;27;20:12;5:2;516:32:62;;;;506:34:19;;8:9:-1;5:2;;;30:1;27;20:12;5:2;506:34:19;;;;1083:314:63;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1083:314:63;;;;1597:368:54;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1597:368:54;;;;;;;;;2080;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2080:368:54;;;;;;;;;526:23;;8:9:-1;5:2;;;30:1;27;20:12;5:2;526:23:54;;;;1089:430:28;1321:32;3453:12:54;:10;:12::i;:::-;3445:21;;;;;;;;1197:17:28;-1:-1:-1;;;;;450:22:46;;;;442:31;;;;;;1256:14:28;;1237:17;;-1:-1:-1;;;;;1256:14:28;;;;842:22:46;;;;838:41;;1356:14:28;;;-1:-1:-1;;;;;1380:34:28;;;-1:-1:-1;;;;;;1380:34:28;;;;;;1452:60;;1356:14;;;-1:-1:-1;1452:60:28;;;;1356:14;;1397:17;;1452:60;;;;;;;;;;838:41:46;483:1;;3476::54;1089:430:28;;:::o;1063:353:76:-;1258:22;3453:12:54;:10;:12::i;:::-;3445:21;;;;;;;;1156:12:76;-1:-1:-1;;;;;450:22:46;;;;442:31;;;;;;1205:9:76;;1191:12;;-1:-1:-1;;;;;1205:9:76;;;;842:22:46;;;;838:41;;1283:9:76;;;-1:-1:-1;;;;;1302:24:76;;;-1:-1:-1;;;;;;1302:24:76;;;;;;1364:45;;1283:9;;;-1:-1:-1;1364:45:76;;;;1283:9;;1314:12;;1364:45;;1441:425:63;1582:10;1566:12;:10;:12::i;:::-;-1:-1:-1;;;;;1566:26:63;;1558:35;;;;;;1676:23;;;;1675:24;1667:33;;;;;;1738:39;1766:10;1738:39;;;;;;;;;;;;;;;1848:10;1835:24;413:35;;;;;;:::o;549:26:76:-;;;-1:-1:-1;;;;;549:26:76;;:::o;524:36:28:-;;;-1:-1:-1;;;;;524:36:28;;:::o;1382:100:54:-;1437:7;1467:8;;;;-1:-1:-1;;;;;1467:8:54;;1382:100::o;555:23::-;;;-1:-1:-1;;;;;555:23:54;;:::o;1060:414:19:-;1284:30;3453:12:54;:10;:12::i;:::-;3445:21;;;;;;;;1165:16:19;-1:-1:-1;;;;;450:22:46;;;;442:31;;;;;;1222:13:19;;1204:16;;-1:-1:-1;;;;;1222:13:19;;;;842:22:46;;;;838:41;;1317:13:19;;;-1:-1:-1;;;;;1340:32:19;;;-1:-1:-1;;;;;;1340:32:19;;;;;;1410:57;;1317:13;;;-1:-1:-1;1410:57:19;;;;1317:13;;1356:16;;1410:57;;1061:399:62;1278:28;3453:12:54;:10;:12::i;:::-;3445:21;;;;;;;;1163:15:62;-1:-1:-1;;;;;450:22:46;;;;442:31;;;;;;1218:12:62;;1201:15;;-1:-1:-1;;;;;1218:12:62;;;;842:22:46;;;;838:41;;1309:12:62;;;-1:-1:-1;;;;;1331:30:62;;;-1:-1:-1;;;;;;1331:30:62;;;;;;1399:54;;1309:12;;;-1:-1:-1;1399:54:62;;;;1309:12;;1346:15;;1399:54;;1684:874:32;519:13:14;;;;;;;;;-1:-1:-1;;;;;519:13:14;-1:-1:-1;;;;;519:37:14;;:39;;;;;-1:-1:-1;;;519:39:14;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;519:39:14;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;519:39:14;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;519:39:14;;;;;;;;;511:48;;;;;;;;2015:9:76;;;:35;;-1:-1:-1;;;;;2015:35:76;;1846:5:32;;-1:-1:-1;;;;;2015:9:76;;;;:28;;:35;;1846:5:32;;2015:35:76;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2015:35:76;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2015:35:76;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;2015:35:76;;;;;;;;;2007:44;;;;;;;;2309:9;;;:40;;-1:-1:-1;;;;;2309:40:76;;1875:7:32;;-1:-1:-1;;;;;2309:9:76;;;;:31;;:40;;1875:7:32;;2309:40:76;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2309:40:76;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2309:40:76;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;2309:40:76;;;;;;;;;2301:49;;;;;;;;1966:13:32;;1951:11;;:28;1943:37;;;;;;2031:13;;;;;;;;;-1:-1:-1;;;;;2031:13:32;-1:-1:-1;;;;;2031:36:32;;:38;;;;;-1:-1:-1;;;2031:38:32;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2031:38:32;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;2125:14:32;;2163:10;;;;:15;2125:54;;-1:-1:-1;;;;;2125:54:32;;-1:-1:-1;;;;;2125:14:32;;;;-1:-1:-1;2125:37:32;;-1:-1:-1;2125:54:32;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2125:54:32;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;2189:14:32;;2229:13;;;;:22;;;:27;2189:68;;-1:-1:-1;;;;;2189:68:32;;-1:-1:-1;;;;;2189:14:32;;;;-1:-1:-1;2189:39:32;;-1:-1:-1;2189:68:32;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2189:68:32;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;2301:12:32;;2343:13;;:34;;;-1:-1:-1;;;;;2343:34:32;;;;-1:-1:-1;;;;;2301:12:32;;;;-1:-1:-1;2301:29:32;;-1:-1:-1;2331:10:32;;2343:13;;;;:32;;:34;;;;;;;;;;;;;;;2301:12;2343:13;:34;;;5:2:-1;;;;30:1;27;20:12;5:2;2343:34:32;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2343:34:32;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;2343:34:32;;;;;;;;;2379:1;2301:80;;;;;-1:-1:-1;;;2301:80:32;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2301:80:32;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;;2485:10:32;;;;:15;2502:13;;;;:22;;;:27;2419:132;;;;-1:-1:-1;2419:132:32;;2485:15;2502:27;2531:10;;2419:132;;;;;;;;;;2061:1:76;569::14;1684:874:32;;:::o;516:32:62:-;;;-1:-1:-1;;;;;516:32:62;;:::o;506:34:19:-;;;-1:-1:-1;;;;;506:34:19;;:::o;1083:314:63:-;1224:10;1208:12;:10;:12::i;:::-;-1:-1:-1;;;;;1208:26:63;;1200:35;;;;;;1282:23;:30;;-1:-1:-1;;1282:30:63;1308:4;1282:30;;;1350:40;;;;;;1379:10;;1350:40;;;;;;;;;;1083:314::o;1597:368:54:-;1794:19;3453:12;:10;:12::i;:::-;3445:21;;;;;;;;1692:11;-1:-1:-1;;;;;673:22:46;;;;665:31;;;;;;-1:-1:-1;;;;;714:25:46;;734:4;714:25;;706:34;;;;;;1738:8:54;;-1:-1:-1;;;;;1723:23:54;;;1738:8;;;;;1723:23;1719:240;;1816:8;;;-1:-1:-1;;;;;1838:22:54;;;1816:8;1838:22;;;-1:-1:-1;;;;;;1838:22:54;;;;;;1906:42;;1816:8;;;;;;-1:-1:-1;1906:42:54;;;;1816:8;;1849:11;;1906:42;;;;;;;;;;1719:240;3476:1;1597:368;;:::o;2080:::-;2277:19;3611:12;:10;:12::i;:::-;3603:21;;;;;;;;2175:11;-1:-1:-1;;;;;673:22:46;;;;665:31;;;;;;-1:-1:-1;;;;;714:25:46;;734:4;714:25;;706:34;;;;;;2221:8:54;;-1:-1:-1;;;;;2206:23:54;;;2221:8;;2206:23;2202:240;;2299:8;;;-1:-1:-1;;;;;2321:22:54;;;-1:-1:-1;;;;;;2321:22:54;;;;;;2389:42;;2299:8;;;-1:-1:-1;2389:42:54;;;;2299:8;;2332:11;;2389:42;;526:23;;;;;;-1:-1:-1;;;;;526:23:54;;:::o;2577:113::-;2634:4;2675:8;;;;-1:-1:-1;;;;;2675:8:54;2661:10;:22;;2577:113::o;2819:::-;2917:8;;-1:-1:-1;;;;;2917:8:54;2903:10;:22;;2819:113::o;5:118:-1:-;;72:46;110:6;97:20;72:46;;;63:55;57:66;-1:-1;;;57:66;175:780;;308:4;296:17;;292:27;-1:-1;282:2;;333:1;330;323:12;282:2;370:6;357:20;392:103;407:87;487:6;407:87;;;392:103;;;383:112;;512:5;537:6;530:5;523:21;567:4;559:6;555:17;545:27;;589:4;584:3;580:14;573:21;;642:6;689:3;681:4;673:6;669:17;664:3;660:27;657:36;654:2;;;706:1;703;696:12;654:2;731:1;716:233;741:6;738:1;735:13;716:233;;;799:3;821:64;881:3;869:10;821:64;;;809:77;;-1:-1;909:4;900:14;;;;937:4;928:14;;;;;763:1;756:9;716:233;;;720:14;275:680;;;;;;;;963:116;;1038:36;1066:6;1060:13;1038:36;;1086:118;;1153:46;1191:6;1178:20;1153:46;;1211:162;;1300:68;1360:6;1347:20;1300:68;;1885:156;;1971:65;2028:6;2015:20;1971:65;;2210:460;;2322:4;2310:9;2305:3;2301:19;2297:30;2294:2;;;2340:1;2337;2330:12;2294:2;2358:20;2373:4;2358:20;;;2349:29;-1:-1;2426:1;2457:49;2502:3;2482:9;2457:49;;;2433:74;;-1:-1;2566:2;2599:49;2644:3;2620:22;;;2599:49;;;2592:4;2585:5;2581:16;2574:75;2528:132;2288:382;;;;;2727:482;;2852:4;2840:9;2835:3;2831:19;2827:30;2824:2;;;2870:1;2867;2860:12;2824:2;2888:20;2903:4;2888:20;;;2879:29;-1:-1;2961:1;2992:48;3036:3;3016:9;2992:48;;3253:490;;3363:4;3351:9;3346:3;3342:19;3338:30;3335:2;;;3381:1;3378;3371:12;3335:2;3399:20;3414:4;3399:20;;;3390:29;-1:-1;3471:1;3502:48;3546:3;3526:9;3502:48;;;3478:73;;-1:-1;3616:2;3649:72;3717:3;3693:22;;;3649:72;;3804:536;;3933:4;3921:9;3916:3;3912:19;3908:30;3905:2;;;3951:1;3948;3941:12;3905:2;3969:20;3984:4;3969:20;;;3960:29;-1:-1;4043:1;4074:72;4142:3;4122:9;4074:72;;;4050:97;;-1:-1;4213:2;4246:72;4314:3;4290:22;;;4246:72;;4414:575;;4556:4;4544:9;4539:3;4535:19;4531:30;4528:2;;;4574:1;4571;4564:12;4528:2;4592:20;4607:4;4592:20;;;4583:29;-1:-1;4666:1;4697:85;4778:3;4758:9;4697:85;;;4673:110;;-1:-1;4849:2;4882:85;4963:3;4939:22;;;4882:85;;5670:495;;5786:4;5774:9;5769:3;5765:19;5761:30;5758:2;;;5804:1;5801;5794:12;5758:2;5822:20;5837:4;5822:20;;;5813:29;-1:-1;5896:1;5927:49;5972:3;5952:9;5927:49;;;5903:74;;-1:-1;6040:2;6073:70;6139:3;6115:22;;;6073:70;;6222:928;;6347:4;6335:9;6330:3;6326:19;6322:30;6319:2;;;6365:1;6362;6355:12;6319:2;6383:20;6398:4;6383:20;;;6374:29;-1:-1;6454:1;6485:49;6530:3;6510:9;6485:49;;;6461:74;;-1:-1;6598:2;6631:49;6676:3;6652:22;;;6631:49;;;6624:4;6617:5;6613:16;6606:75;6556:136;6746:2;6779:85;6860:3;6851:6;6840:9;6836:22;6779:85;;;6772:4;6765:5;6761:16;6754:111;6702:174;6954:3;6943:9;6939:19;6926:33;-1:-1;;;;;6971:6;6968:30;6965:2;;;7011:1;7008;7001:12;6965:2;7046:82;7124:3;7115:6;7104:9;7100:22;7046:82;;;7039:4;7032:5;7028:16;7021:108;6886:254;6313:837;;;;;7204:937;;7326:4;7314:9;7309:3;7305:19;7301:30;7298:2;;;7344:1;7341;7334:12;7298:2;7362:20;7377:4;7362:20;;;7353:29;-1:-1;7433:1;7464:49;7509:3;7489:9;7464:49;;;7440:74;;-1:-1;7577:2;7610:49;7655:3;7631:22;;;7610:49;;;7603:4;7596:5;7592:16;7585:75;7535:136;7725:2;7758:85;7839:3;7830:6;7819:9;7815:22;7758:85;;;7751:4;7744:5;7740:16;7733:111;7681:174;7933:3;7922:9;7918:19;7905:33;-1:-1;;;;;7950:6;7947:30;7944:2;;;7990:1;7987;7980:12;7944:2;8025:94;8115:3;8106:6;8095:9;8091:22;8025:94;;8184:1845;;8299:5;8287:9;8282:3;8278:19;8274:31;8271:2;;;8318:1;8315;8308:12;8271:2;8336:21;8351:5;8336:21;;;8327:30;-1:-1;8408:1;8439:49;8484:3;8464:9;8439:49;;;8415:74;;-1:-1;8552:2;8585:48;8629:3;8605:22;;;8585:48;;;8578:4;8571:5;8567:16;8560:74;8510:135;8699:2;8732:72;8800:3;8791:6;8780:9;8776:22;8732:72;;;8725:4;8718:5;8714:16;8707:98;8655:161;8896:3;8885:9;8881:19;8868:33;-1:-1;;;;;8913:6;8910:30;8907:2;;;8953:1;8950;8943:12;8907:2;8988:82;9066:3;9057:6;9046:9;9042:22;8988:82;;;8981:4;8974:5;8970:16;8963:108;8826:256;9165:3;9154:9;9150:19;9137:33;-1:-1;;;;;9182:6;9179:30;9176:2;;;9222:1;9219;9212:12;9176:2;9257:85;9338:3;9329:6;9318:9;9314:22;9257:85;;;9250:4;9243:5;9239:16;9232:111;9092:262;9409:3;9443:81;9520:3;9511:6;9500:9;9496:22;9443:81;;;9436:4;9429:5;9425:16;9418:107;9364:172;9587:3;9621:82;9699:3;9690:6;9679:9;9675:22;9621:82;;;9614:4;9607:5;9603:16;9596:108;9546:169;9772:3;9806:49;9851:3;9842:6;9831:9;9827:22;9806:49;;;9799:4;9792:5;9788:16;9781:75;9725:142;9923:3;9958:49;10003:3;9994:6;9983:9;9979:22;9958:49;;;9950:5;9943;9939:17;9932:76;9877:142;8265:1764;;;;;10069:489;;10177:4;10165:9;10160:3;10156:19;10152:30;10149:2;;;10195:1;10192;10185:12;10149:2;10213:20;10228:4;10213:20;;;10204:29;-1:-1;10283:1;10314:49;10359:3;10339:9;10314:49;;;10290:74;;-1:-1;10430:2;10463:73;10532:3;10508:22;;;10603:598;10716:4;10704:9;10699:3;10695:19;10691:30;10688:2;;;10734:1;10731;10724:12;10688:2;10752:20;10767:4;10752:20;;;10743:29;-1:-1;10819:1;10850:49;10895:3;10875:9;10850:49;;;10826:74;;-1:-1;10958:2;10991:49;11036:3;11012:22;;;10991:49;;;10984:4;10977:5;10973:16;10966:75;10921:131;11099:2;11132:47;11175:3;11166:6;11155:9;11151:22;11132:47;;;11125:4;11118:5;11114:16;11107:73;11062:129;10682:519;;;;;11267:644;;11401:4;11389:9;11384:3;11380:19;11376:30;11373:2;;;11419:1;11416;11409:12;11373:2;11437:20;11452:4;11437:20;;;11428:29;-1:-1;11509:1;11540:70;11606:3;11586:9;11540:70;;;11516:95;;-1:-1;11701:2;11686:18;;11673:32;-1:-1;;;;;11714:30;;11711:2;;;11757:1;11754;11747:12;11711:2;11792:97;11885:3;11876:6;11865:9;11861:22;11792:97;;12492:465;;12614:4;12602:9;12597:3;12593:19;12589:30;12586:2;;;12632:1;12629;12622:12;12586:2;12650:20;12665:4;12650:20;;;12641:29;-1:-1;12721:31;;-1:-1;;;;;12761:30;;12758:2;;;12804:1;12801;12794:12;12758:2;12838:97;12931:3;12922:6;12911:9;12907:22;12838:97;;;12814:122;;-1:-1;12825:5;12580:377;-1:-1;;12580:377;13003:689;;13117:4;13105:9;13100:3;13096:19;13092:30;13089:2;;;13135:1;13132;13125:12;13089:2;13153:20;13168:4;13153:20;;;13144:29;-1:-1;13225:1;13256:48;13300:3;13280:9;13256:48;;;13232:73;;-1:-1;13368:2;13401:84;13481:3;13457:22;;;13401:84;;;13394:4;13387:5;13383:16;13376:110;13326:171;13552:2;13585:85;13666:3;13657:6;13646:9;13642:22;13585:85;;13738:1444;;13852:5;13840:9;13835:3;13831:19;13827:31;13824:2;;;13871:1;13868;13861:12;13824:2;13889:20;13904:4;13889:20;;;13880:29;-1:-1;13960:1;13991:49;14036:3;14016:9;13991:49;;;13967:74;;-1:-1;14104:2;14137:49;14182:3;14158:22;;;14137:49;;;14130:4;14123:5;14119:16;14112:75;14062:136;14257:2;14290:49;14335:3;14326:6;14315:9;14311:22;14290:49;;;14283:4;14276:5;14272:16;14265:75;14208:143;14410:2;14443:68;14507:3;14498:6;14487:9;14483:22;14443:68;;;14436:4;14429:5;14425:16;14418:94;14361:162;14574:3;14608:74;14678:3;14669:6;14658:9;14654:22;14608:74;;;14601:4;14594:5;14590:16;14583:100;14533:161;14748:3;14782:102;14880:3;14871:6;14860:9;14856:22;14782:102;;;14775:4;14768:5;14764:16;14757:128;14704:192;14974:3;14963:9;14959:19;14946:33;-1:-1;;;;;14991:6;14988:30;14985:2;;;15031:1;15028;15021:12;14985:2;15066:94;15156:3;15147:6;15136:9;15132:22;15066:94;;;15059:4;15052:5;15048:16;15041:120;14906:266;13818:1364;;;;;15223:1986;;15336:5;15324:9;15319:3;15315:19;15311:31;15308:2;;;15355:1;15352;15345:12;15308:2;15373:21;15388:5;15373:21;;;15364:30;-1:-1;15445:1;15476:49;15521:3;15501:9;15476:49;;;15452:74;;-1:-1;15589:2;15622:48;15666:3;15642:22;;;15622:48;;;15615:4;15608:5;15604:16;15597:74;15547:135;15738:2;15771:89;15856:3;15847:6;15836:9;15832:22;15771:89;;;15764:4;15757:5;15753:16;15746:115;15692:180;15922:3;15956:48;16000:3;15991:6;15980:9;15976:22;15956:48;;;15949:4;15942:5;15938:16;15931:74;15882:134;16095:3;16084:9;16080:19;16067:33;-1:-1;;;;;16112:6;16109:30;16106:2;;;16152:1;16149;16142:12;16106:2;16187:74;16257:3;16248:6;16237:9;16233:22;16187:74;;;16180:4;16173:5;16169:16;16162:100;16026:247;16353:3;16342:9;16338:19;16325:33;-1:-1;;;;;16370:6;16367:30;16364:2;;;16410:1;16407;16400:12;16364:2;16445:74;16515:3;16506:6;16495:9;16491:22;16445:74;;;16438:4;16431:5;16427:16;16420:100;16283:248;16586:3;16620:98;16714:3;16705:6;16694:9;16690:22;16620:98;;;16613:4;16606:5;16602:16;16595:124;16541:189;16780:3;16814:68;16878:3;16869:6;16858:9;16854:22;16814:68;;;16807:4;16800:5;16796:16;16789:94;16740:154;16951:3;16986:49;17031:3;17022:6;17011:9;17007:22;16986:49;;;16978:5;16971;16967:17;16960:76;16904:143;17103:3;17138:49;17183:3;17174:6;17163:9;17159:22;17138:49;;;17130:5;17123;17119:17;17112:76;17057:142;15302:1907;;;;;17801:520;;17923:5;17911:9;17906:3;17902:19;17898:31;17895:2;;;17942:1;17939;17932:12;17895:2;17960:20;17975:4;17960:20;;;17951:29;-1:-1;18032:1;18063:68;18127:3;18107:9;18063:68;;;18039:93;;-1:-1;18197:3;18231:68;18295:3;18271:22;;;18231:68;;18453:122;;18531:39;18562:6;18556:13;18531:39;;18582:114;;18647:44;18683:6;18670:20;18647:44;;18703:241;;18807:2;18795:9;18786:7;18782:23;18778:32;18775:2;;;18823:1;18820;18813:12;18775:2;18858:1;18875:53;18920:7;18900:9;18875:53;;;18865:63;18769:175;-1:-1;;;;18769:175;18951:257;;19063:2;19051:9;19042:7;19038:23;19034:32;19031:2;;;19079:1;19076;19069:12;19031:2;19114:1;19131:61;19184:7;19164:9;19131:61;;19215:285;;19341:2;19329:9;19320:7;19316:23;19312:32;19309:2;;;19357:1;19354;19347:12;19309:2;19392:1;19409:75;19476:7;19456:9;19409:75;;20381:638;;;20552:2;20540:9;20531:7;20527:23;20523:32;20520:2;;;20568:1;20565;20558:12;20520:2;20603:31;;-1:-1;;;;;20643:30;;20640:2;;;20686:1;20683;20676:12;20640:2;20706:77;20775:7;20766:6;20755:9;20751:22;20706:77;;;20696:87;;20582:207;20848:2;20837:9;20833:18;20820:32;-1:-1;;;;;20864:6;20861:30;20858:2;;;20904:1;20901;20894:12;20858:2;20924:79;20995:7;20986:6;20975:9;20971:22;20924:79;;;20914:89;;20799:210;20514:505;;;;;;21026:263;;21141:2;21129:9;21120:7;21116:23;21112:32;21109:2;;;21157:1;21154;21147:12;21109:2;21192:1;21209:64;21265:7;21245:9;21209:64;;21296:110;21369:31;21394:5;21369:31;;;21364:3;21357:44;21351:55;;;21498:767;;21683:77;21754:5;21683:77;;;21778:6;21773:3;21766:19;21802:4;21797:3;21793:14;21786:21;;21847:79;21920:5;21847:79;;;21947:1;21932:311;21957:6;21954:1;21951:13;21932:311;;;21997:111;22104:3;22095:6;22089:13;21997:111;;;22125:83;22201:6;22125:83;;;22231:4;22222:14;;;;;22115:93;-1:-1;21979:1;21972:9;21932:311;;;-1:-1;22256:3;;21662:603;-1:-1;;;;21662:603;22273:101;22340:28;22362:5;22340:28;;22381:110;22454:31;22479:5;22454:31;;22498:160;22593:59;22646:5;22593:59;;23164:150;23254:54;23302:5;23254:54;;23435:132;23516:45;23555:5;23516:45;;23649:488;23849:22;;23782:4;23773:14;;;23883:61;23777:3;23849:22;23883:61;;;23802:154;24030:4;24023:5;24019:16;24013:23;24048:62;24104:4;24099:3;24095:14;24082:11;24048:62;;;23966:156;23755:382;;;;24241:521;24472:22;;24400:4;24391:14;;;24506:59;24395:3;24472:22;24506:59;;24840:542;25040:22;;24969:4;24960:14;;;25074:59;24964:3;25040:22;25074:59;;;24989:156;25225:4;25218:5;25214:16;25208:23;25243:112;25349:4;25344:3;25340:14;25327:11;25243:112;;25494:635;25734:22;;25661:4;25652:14;;;25768:111;25656:3;25734:22;25768:111;;;25681:210;25972:4;25965:5;25961:16;25955:23;25990:112;26096:4;26091:3;26087:14;26074:11;25990:112;;26267:713;26533:22;;26460:4;26451:14;;;26567:137;26455:3;26533:22;26567:137;;;26480:236;26797:4;26790:5;26786:16;26780:23;26815:138;26947:4;26942:3;26938:14;26925:11;26815:138;;27885:552;28099:22;;28026:4;28017:14;;;28133:61;28021:3;28099:22;28133:61;;;28046:160;28284:4;28277:5;28273:16;28267:23;28302:108;28404:4;28399:3;28395:14;28382:11;28302:108;;28541:1069;28778:22;;28541:1069;;28708:4;28699:14;;;28812:61;28703:3;28778:22;28812:61;;;28728:157;28963:4;28956:5;28952:16;28946:23;28981:62;29037:4;29032:3;29028:14;29015:11;28981:62;;;28895:160;29135:4;29128:5;29124:16;29118:23;29153:138;29285:4;29280:3;29276:14;29263:11;29153:138;;;29065:238;29379:4;29372:5;29368:16;29362:23;29430:3;29424:4;29420:14;29413:4;29408:3;29404:14;29397:38;29450:122;29567:4;29554:11;29450:122;;;29442:130;28681:929;-1:-1;;;;;28681:929;29708:1087;29939:22;;29708:1087;;29869:4;29860:14;;;29973:61;29864:3;29939:22;29973:61;;;29889:157;30124:4;30117:5;30113:16;30107:23;30142:62;30198:4;30193:3;30189:14;30176:11;30142:62;;;30056:160;30296:4;30289:5;30285:16;30279:23;30314:138;30446:4;30441:3;30437:14;30424:11;30314:138;;;30226:238;30540:4;30533:5;30529:16;30523:23;30591:3;30585:4;30581:14;30574:4;30569:3;30565:14;30558:38;30611:146;30752:4;30739:11;30611:146;;30871:2145;31085:22;;30871:2145;;31014:5;31005:15;;;31119:61;31009:3;31085:22;31119:61;;;31035:157;31270:4;31263:5;31259:16;31253:23;31288:60;31342:4;31337:3;31333:14;31320:11;31288:60;;;31202:158;31440:4;31433:5;31429:16;31423:23;31458:112;31564:4;31559:3;31555:14;31542:11;31458:112;;;31370:212;31660:4;31653:5;31649:16;31643:23;31711:3;31705:4;31701:14;31694:4;31689:3;31685:14;31678:38;31731:122;31848:4;31835:11;31731:122;;;31723:130;;31592:273;31946:4;31939:5;31935:16;31929:23;31997:3;31991:4;31987:14;31980:4;31975:3;31971:14;31964:38;32017:128;32140:4;32127:11;32017:128;;;32009:136;;31875:282;32238:4;32231:5;32227:16;32221:23;32256:130;32380:4;32375:3;32371:14;32358:11;32256:130;;;32167:231;32475:4;32468:5;32464:16;32458:23;32493:133;32619:5;32614:3;32610:15;32597:11;32493:133;;;32408:230;32721:4;32714:5;32710:16;32704:23;32739:63;32795:5;32790:3;32786:15;32773:11;32739:63;;;32648:166;32896:5;32889;32885:17;32879:24;32915:63;32971:5;32966:3;32962:15;32949:11;32915:63;;;-1:-1;33007:4;30987:2029;-1:-1;;;30987:2029;33086:541;33280:22;;33211:4;33202:14;;;33314:61;33206:3;33280:22;33314:61;;;33231:156;33468:4;33461:5;33457:16;33451:23;33486:114;33594:4;33589:3;33585:14;33572:11;33908:22;;33842:4;33833:14;;;33942:61;33837:3;33908:22;33942:61;;;33862:153;34088:4;34081:5;34077:16;34071:23;34106:62;34162:4;34157:3;34153:14;34140:11;34106:62;;;34025:155;34253:4;34246:5;34242:16;34236:23;34271:58;34323:4;34318:3;34314:14;34301:11;34271:58;;34478:747;34734:22;;34478:747;;34663:4;34654:14;;;34768:107;34658:3;34734:22;34768:107;;;34683:204;34964:4;34957:5;34953:16;34947:23;35015:3;35009:4;35005:14;34998:4;34993:3;34989:14;34982:38;35035:152;35182:4;35169:11;35035:152;;35928:507;36159:22;;36089:4;36193:37;;;35928:507;;36080:14;;;;36245:152;36080:14;36159:22;36245:152;;36517:821;36725:22;;36654:4;36645:14;;;36759:59;36649:3;36725:22;36759:59;;;36674:156;36908:4;36901:5;36897:16;36891:23;36926:136;37056:4;37051:3;37047:14;37034:11;36926:136;;;36840:234;37155:4;37148:5;37144:16;37138:23;37173:138;37305:4;37300:3;37296:14;37283:11;37173:138;;37420:1702;37636:22;;37420:1702;;37565:5;37556:15;;;37670:61;37560:3;37636:22;37670:61;;;37586:157;37821:4;37814:5;37810:16;37804:23;37839:62;37895:4;37890:3;37886:14;37873:11;37839:62;;;37753:160;37998:4;37991:5;37987:16;37981:23;38016:62;38072:4;38067:3;38063:14;38050:11;38016:62;;;37923:167;38175:4;38168:5;38164:16;38158:23;38193:79;38266:4;38261:3;38257:14;38244:11;38193:79;;;38100:184;38361:4;38354:5;38350:16;38344:23;38379:116;38489:4;38484:3;38480:14;38467:11;38379:116;;;38294:213;38587:4;38580:5;38576:16;38570:23;38605:173;38771:5;38766:3;38762:15;38749:11;38605:173;;;38517:273;38866:4;38859:5;38855:16;38849:23;38918:3;38912:4;38908:14;38900:5;38895:3;38891:15;38884:39;38938:146;39079:4;39066:11;38938:146;;39194:2309;39404:22;;39194:2309;;39333:5;39324:15;;;39438:61;39328:3;39404:22;39438:61;;;39354:157;39589:4;39582:5;39578:16;39572:23;39607:60;39661:4;39656:3;39652:14;39639:11;39607:60;;;39521:158;39761:4;39754:5;39750:16;39744:23;39779:146;39919:4;39914:3;39910:14;39897:11;39779:146;;;39689:248;40013:4;40006:5;40002:16;39996:23;40031:60;40085:4;40080:3;40076:14;40063:11;40031:60;;;39947:156;40180:4;40173:5;40169:16;40163:23;40231:3;40225:4;40221:14;40214:4;40209:3;40205:14;40198:38;40251:106;40352:4;40339:11;40251:106;;;40243:114;;40113:256;40447:4;40440:5;40436:16;40430:23;40499:3;40493:4;40489:14;40481:5;40476:3;40472:15;40465:39;40519:106;40620:4;40607:11;40519:106;;;40511:114;;40379:258;40718:4;40711:5;40707:16;40701:23;40736:165;40894:5;40889:3;40885:15;40872:11;40736:165;;;40647:266;40989:4;40982:5;40978:16;40972:23;41007:105;41105:5;41100:3;41096:15;41083:11;41007:105;;;40923:201;41207:5;41200;41196:17;41190:24;41226:63;41282:5;41277:3;41273:15;41260:11;41226:63;;;41134:167;41383:5;41376;41372:17;41366:24;41402:63;41458:5;41453:3;41449:15;41436:11;41402:63;;42225:603;42450:22;;42378:5;42369:15;;;42484:103;42373:3;42450:22;42484:103;;;42399:200;42679:4;42672:5;42668:16;42662:23;42697:104;42795:4;42790:3;42786:14;42773:11;42697:104;;42952;43021:29;43044:5;43021:29;;43063:193;43171:2;43156:18;;43185:61;43160:9;43219:6;43185:61;;;43142:114;;;;;43263:294;43399:2;43384:18;;43413:61;43388:9;43447:6;43413:61;;;43485:62;43543:2;43532:9;43528:18;43519:6;43485:62;;43564:411;43736:2;43721:18;;43750:61;43725:9;43784:6;43750:61;;;43822:62;43880:2;43869:9;43865:18;43856:6;43822:62;;;43895:70;43961:2;43950:9;43946:18;43937:6;43895:70;;43982:181;44084:2;44069:18;;44098:55;44073:9;44126:6;44098:55;;44170:193;44278:2;44263:18;;44292:61;44267:9;44326:6;44292:61;;44370:395;44534:2;44519:18;;44548:61;44523:9;44582:6;44548:61;;;44620:62;44678:2;44667:9;44663:18;44654:6;44620:62;;;44693;44751:2;44740:9;44736:18;44727:6;44693:62;;44772:237;44902:2;44887:18;;44916:83;44891:9;44972:6;44916:83;;45016:382;45196:2;45181:18;;45210:83;45185:9;45266:6;45210:83;;;45304:84;45384:2;45373:9;45369:18;45360:6;45304:84;;47298:345;47458:2;47472:47;;;47443:18;;47533:100;47443:18;47619:6;47533:100;;47650:337;47806:2;47820:47;;;47791:18;;47881:96;47791:18;47963:6;47881:96;;47994:256;48056:2;48050:9;48082:17;;;-1:-1;;;;;48142:34;;48178:22;;;48139:62;48136:2;;;48214:1;48211;48204:12;48136:2;48230;48223:22;48034:216;;-1:-1;48034:216;48257:281;;-1:-1;;;;;48431:6;48428:30;48425:2;;;48471:1;48468;48461:12;48425:2;-1:-1;48500:4;48488:17;;;48518:15;;48362:176;48547:144;48679:4;48667:17;;48648:43;48700:130;48813:12;;48797:33;48991:128;-1:-1;;;;;49060:54;;49043:76;49126:92;49199:13;49192:21;;49175:43;49225:79;49294:5;49277:27;49311:136;;49408:1;49398:12;;49388:2;;49414:9;49388:2;-1:-1;49437:5;49382:65;49625:88;49703:4;49692:16;;49675:38;50040:127;;50131:31;50156:5;50131:31;;50575:139;;50672:1;50662:12;;50652:2;;50688:1;50685;50678:12;51562:151;;51658:50;51702:5;51658:50;;51720:123;;51807:31;51832:5;51807:31;",
  "source": "/*\n * Hubii Nahmii\n *\n * Compliant with the Hubii Nahmii specification v0.12.\n *\n * Copyright (C) 2017-2018 Hubii AS\n */\n\npragma solidity ^0.4.25;\npragma experimental ABIEncoderV2;\n\nimport {Ownable} from \"./Ownable.sol\";\nimport {FraudChallengable} from \"./FraudChallengable.sol\";\nimport {Challenge} from \"./Challenge.sol\";\nimport {Validatable} from \"./Validatable.sol\";\nimport {SecurityBondable} from \"./SecurityBondable.sol\";\nimport {NahmiiTypesLib} from \"./NahmiiTypesLib.sol\";\n\n/**\n * @title FraudChallengeByDuplicateDriipNonceOfTradeAndPayment\n * @notice Where driips are challenged wrt fraud by duplicate drip nonce of trade and payment\n */\ncontract FraudChallengeByDuplicateDriipNonceOfTradeAndPayment is Ownable, FraudChallengable, Challenge, Validatable,\nSecurityBondable {\n    //\n    // Events\n    // -----------------------------------------------------------------------------------------------------------------\n    event ChallengeByDuplicateDriipNonceOfTradeAndPaymentEvent(bytes32 tradeHash,\n        bytes32 paymentHash, address challenger);\n\n    //\n    // Constructor\n    // -----------------------------------------------------------------------------------------------------------------\n    constructor(address deployer) Ownable(deployer) public {\n    }\n\n    //\n    // Functions\n    // -----------------------------------------------------------------------------------------------------------------\n    /// @notice Submit one trade candidate and one payment candidate in continuous Fraud\n    /// Challenge (FC) to be tested for duplicate driip nonce\n    /// @param trade Trade with duplicate driip nonce\n    /// @param payment Payment with duplicate driip nonce\n    function challenge(\n        NahmiiTypesLib.Trade trade,\n        NahmiiTypesLib.Payment payment\n    )\n    public\n    onlyOperationalModeNormal\n    onlySealedTrade(trade)\n    onlySealedPayment(payment)\n    {\n        // Require existence of fraud signal\n        require(trade.nonce == payment.nonce);\n\n        // Toggle operational mode exit\n        configuration.setOperationalModeExit();\n\n        // Tag trades (hashes) as fraudulent\n        fraudChallenge.addFraudulentTradeHash(trade.seal.hash);\n        fraudChallenge.addFraudulentPaymentHash(payment.seals.operator.hash);\n\n        // Reward stake fraction\n        securityBond.rewardFractional(msg.sender, configuration.fraudStakeFraction(), 0);\n\n        // Emit event\n        emit ChallengeByDuplicateDriipNonceOfTradeAndPaymentEvent(\n            trade.seal.hash, payment.seals.operator.hash, msg.sender\n        );\n    }\n}",
  "sourcePath": "/opt/buildagent/work/855e104608380c36/contracts/FraudChallengeByDuplicateDriipNonceOfTradeAndPayment.sol",
  "ast": {
    "absolutePath": "/opt/buildagent/work/855e104608380c36/contracts/FraudChallengeByDuplicateDriipNonceOfTradeAndPayment.sol",
    "exportedSymbols": {
      "FraudChallengeByDuplicateDriipNonceOfTradeAndPayment": [
        13156
      ]
    },
    "id": 13157,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 13046,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".25"
        ],
        "nodeType": "PragmaDirective",
        "src": "122:24:32"
      },
      {
        "id": 13047,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "147:33:32"
      },
      {
        "absolutePath": "/opt/buildagent/work/855e104608380c36/contracts/Ownable.sol",
        "file": "./Ownable.sol",
        "id": 13049,
        "nodeType": "ImportDirective",
        "scope": 13157,
        "sourceUnit": 21114,
        "src": "182:38:32",
        "symbolAliases": [
          {
            "foreign": 13048,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/opt/buildagent/work/855e104608380c36/contracts/FraudChallengable.sol",
        "file": "./FraudChallengable.sol",
        "id": 13051,
        "nodeType": "ImportDirective",
        "scope": 13157,
        "sourceUnit": 12467,
        "src": "221:58:32",
        "symbolAliases": [
          {
            "foreign": 13050,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/opt/buildagent/work/855e104608380c36/contracts/Challenge.sol",
        "file": "./Challenge.sol",
        "id": 13053,
        "nodeType": "ImportDirective",
        "scope": 13157,
        "sourceUnit": 3740,
        "src": "280:42:32",
        "symbolAliases": [
          {
            "foreign": 13052,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/opt/buildagent/work/855e104608380c36/contracts/Validatable.sol",
        "file": "./Validatable.sol",
        "id": 13055,
        "nodeType": "ImportDirective",
        "scope": 13157,
        "sourceUnit": 30868,
        "src": "323:46:32",
        "symbolAliases": [
          {
            "foreign": 13054,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/opt/buildagent/work/855e104608380c36/contracts/SecurityBondable.sol",
        "file": "./SecurityBondable.sol",
        "id": 13057,
        "nodeType": "ImportDirective",
        "scope": 13157,
        "sourceUnit": 26731,
        "src": "370:56:32",
        "symbolAliases": [
          {
            "foreign": 13056,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/opt/buildagent/work/855e104608380c36/contracts/NahmiiTypesLib.sol",
        "file": "./NahmiiTypesLib.sol",
        "id": 13059,
        "nodeType": "ImportDirective",
        "scope": 13157,
        "sourceUnit": 17388,
        "src": "427:52:32",
        "symbolAliases": [
          {
            "foreign": 13058,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 13060,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 21113,
              "src": "711:7:32",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$21113",
                "typeString": "contract Ownable"
              }
            },
            "id": 13061,
            "nodeType": "InheritanceSpecifier",
            "src": "711:7:32"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 13062,
              "name": "FraudChallengable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 12466,
              "src": "720:17:32",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FraudChallengable_$12466",
                "typeString": "contract FraudChallengable"
              }
            },
            "id": 13063,
            "nodeType": "InheritanceSpecifier",
            "src": "720:17:32"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 13064,
              "name": "Challenge",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3739,
              "src": "739:9:32",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Challenge_$3739",
                "typeString": "contract Challenge"
              }
            },
            "id": 13065,
            "nodeType": "InheritanceSpecifier",
            "src": "739:9:32"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 13066,
              "name": "Validatable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 30867,
              "src": "750:11:32",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Validatable_$30867",
                "typeString": "contract Validatable"
              }
            },
            "id": 13067,
            "nodeType": "InheritanceSpecifier",
            "src": "750:11:32"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 13068,
              "name": "SecurityBondable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 26730,
              "src": "763:16:32",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SecurityBondable_$26730",
                "typeString": "contract SecurityBondable"
              }
            },
            "id": 13069,
            "nodeType": "InheritanceSpecifier",
            "src": "763:16:32"
          }
        ],
        "contractDependencies": [
          3739,
          5563,
          12466,
          17125,
          21113,
          26730,
          26796,
          30867
        ],
        "contractKind": "contract",
        "documentation": "@title FraudChallengeByDuplicateDriipNonceOfTradeAndPayment\n@notice Where driips are challenged wrt fraud by duplicate drip nonce of trade and payment",
        "fullyImplemented": true,
        "id": 13156,
        "linearizedBaseContracts": [
          13156,
          26730,
          30867,
          3739,
          5563,
          12466,
          21113,
          26796,
          17125
        ],
        "name": "FraudChallengeByDuplicateDriipNonceOfTradeAndPayment",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": null,
            "id": 13077,
            "name": "ChallengeByDuplicateDriipNonceOfTradeAndPaymentEvent",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 13076,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13071,
                  "indexed": false,
                  "name": "tradeHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 13077,
                  "src": "987:17:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 13070,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "987:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13073,
                  "indexed": false,
                  "name": "paymentHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 13077,
                  "src": "1014:19:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 13072,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1014:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13075,
                  "indexed": false,
                  "name": "challenger",
                  "nodeType": "VariableDeclaration",
                  "scope": 13077,
                  "src": "1035:18:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13074,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1035:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "986:68:32"
            },
            "src": "928:127:32"
          },
          {
            "body": {
              "id": 13085,
              "nodeType": "Block",
              "src": "1263:7:32",
              "statements": []
            },
            "documentation": null,
            "id": 13086,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 13082,
                    "name": "deployer",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 13079,
                    "src": "1246:8:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 13083,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 13081,
                  "name": "Ownable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 21113,
                  "src": "1238:7:32",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Ownable_$21113_$",
                    "typeString": "type(contract Ownable)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1238:17:32"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13080,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13079,
                  "name": "deployer",
                  "nodeType": "VariableDeclaration",
                  "scope": 13086,
                  "src": "1220:16:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13078,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1220:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1219:18:32"
            },
            "payable": false,
            "returnParameters": {
              "id": 13084,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1263:0:32"
            },
            "scope": 13156,
            "src": "1208:62:32",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 13154,
              "nodeType": "Block",
              "src": "1888:670:32",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 13106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 13102,
                            "name": "trade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13088,
                            "src": "1951:5:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$17325_memory_ptr",
                              "typeString": "struct NahmiiTypesLib.Trade memory"
                            }
                          },
                          "id": 13103,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "nonce",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17306,
                          "src": "1951:11:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 13104,
                            "name": "payment",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13090,
                            "src": "1966:7:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Payment_$17362_memory_ptr",
                              "typeString": "struct NahmiiTypesLib.Payment memory"
                            }
                          },
                          "id": 13105,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "nonce",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17345,
                          "src": "1966:13:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1951:28:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 13101,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        42425,
                        42426
                      ],
                      "referencedDeclaration": 42425,
                      "src": "1943:7:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 13107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1943:37:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13108,
                  "nodeType": "ExpressionStatement",
                  "src": "1943:37:32"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 13109,
                        "name": "configuration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5516,
                        "src": "2031:13:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Configuration_$6930",
                          "typeString": "contract Configuration"
                        }
                      },
                      "id": 13111,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setOperationalModeExit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5860,
                      "src": "2031:36:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 13112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2031:38:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13113,
                  "nodeType": "ExpressionStatement",
                  "src": "2031:38:32"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 13117,
                            "name": "trade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13088,
                            "src": "2163:5:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$17325_memory_ptr",
                              "typeString": "struct NahmiiTypesLib.Trade memory"
                            }
                          },
                          "id": 13118,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "seal",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17320,
                          "src": "2163:10:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Seal_$17284_memory",
                            "typeString": "struct NahmiiTypesLib.Seal memory"
                          }
                        },
                        "id": 13119,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "hash",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 17281,
                        "src": "2163:15:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 13114,
                        "name": "fraudChallenge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12419,
                        "src": "2125:14:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FraudChallenge_$12754",
                          "typeString": "contract FraudChallenge"
                        }
                      },
                      "id": 13116,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addFraudulentTradeHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12701,
                      "src": "2125:37:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 13120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2125:54:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13121,
                  "nodeType": "ExpressionStatement",
                  "src": "2125:54:32"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 13125,
                              "name": "payment",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13090,
                              "src": "2229:7:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Payment_$17362_memory_ptr",
                                "typeString": "struct NahmiiTypesLib.Payment memory"
                              }
                            },
                            "id": 13126,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "seals",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 17357,
                            "src": "2229:13:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_WalletOperatorSeal_$17289_memory",
                              "typeString": "struct NahmiiTypesLib.WalletOperatorSeal memory"
                            }
                          },
                          "id": 13127,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "operator",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17288,
                          "src": "2229:22:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Seal_$17284_memory",
                            "typeString": "struct NahmiiTypesLib.Seal memory"
                          }
                        },
                        "id": 13128,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "hash",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 17281,
                        "src": "2229:27:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 13122,
                        "name": "fraudChallenge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12419,
                        "src": "2189:14:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FraudChallenge_$12754",
                          "typeString": "contract FraudChallenge"
                        }
                      },
                      "id": 13124,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addFraudulentPaymentHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12753,
                      "src": "2189:39:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 13129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2189:68:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13130,
                  "nodeType": "ExpressionStatement",
                  "src": "2189:68:32"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 13134,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42422,
                          "src": "2331:3:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 13135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2331:10:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 13136,
                            "name": "configuration",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5516,
                            "src": "2343:13:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Configuration_$6930",
                              "typeString": "contract Configuration"
                            }
                          },
                          "id": 13137,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "fraudStakeFraction",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6702,
                          "src": "2343:32:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 13138,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2343:34:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 13139,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2379:1:32",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 13131,
                        "name": "securityBond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26683,
                        "src": "2301:12:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SecurityBond_$26673",
                          "typeString": "contract SecurityBond"
                        }
                      },
                      "id": 13133,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "rewardFractional",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26073,
                      "src": "2301:29:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256) external"
                      }
                    },
                    "id": 13140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2301:80:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13141,
                  "nodeType": "ExpressionStatement",
                  "src": "2301:80:32"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 13143,
                            "name": "trade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13088,
                            "src": "2485:5:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$17325_memory_ptr",
                              "typeString": "struct NahmiiTypesLib.Trade memory"
                            }
                          },
                          "id": 13144,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "seal",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17320,
                          "src": "2485:10:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Seal_$17284_memory",
                            "typeString": "struct NahmiiTypesLib.Seal memory"
                          }
                        },
                        "id": 13145,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "hash",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 17281,
                        "src": "2485:15:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 13146,
                              "name": "payment",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13090,
                              "src": "2502:7:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Payment_$17362_memory_ptr",
                                "typeString": "struct NahmiiTypesLib.Payment memory"
                              }
                            },
                            "id": 13147,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "seals",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 17357,
                            "src": "2502:13:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_WalletOperatorSeal_$17289_memory",
                              "typeString": "struct NahmiiTypesLib.WalletOperatorSeal memory"
                            }
                          },
                          "id": 13148,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "operator",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17288,
                          "src": "2502:22:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Seal_$17284_memory",
                            "typeString": "struct NahmiiTypesLib.Seal memory"
                          }
                        },
                        "id": 13149,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "hash",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 17281,
                        "src": "2502:27:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 13150,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42422,
                          "src": "2531:3:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 13151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2531:10:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 13142,
                      "name": "ChallengeByDuplicateDriipNonceOfTradeAndPaymentEvent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13077,
                      "src": "2419:52:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,bytes32,address)"
                      }
                    },
                    "id": 13152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2419:132:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13153,
                  "nodeType": "EmitStatement",
                  "src": "2414:137:32"
                }
              ]
            },
            "documentation": "@notice Submit one trade candidate and one payment candidate in continuous Fraud\n Challenge (FC) to be tested for duplicate driip nonce\n @param trade Trade with duplicate driip nonce\n @param payment Payment with duplicate driip nonce",
            "id": 13155,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 13093,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 13092,
                  "name": "onlyOperationalModeNormal",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3738,
                  "src": "1800:25:32",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1800:25:32"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 13095,
                    "name": "trade",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 13088,
                    "src": "1846:5:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$17325_memory_ptr",
                      "typeString": "struct NahmiiTypesLib.Trade memory"
                    }
                  }
                ],
                "id": 13096,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 13094,
                  "name": "onlySealedTrade",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 30792,
                  "src": "1830:15:32",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_struct$_Trade_$17325_memory_ptr_$",
                    "typeString": "modifier (struct NahmiiTypesLib.Trade memory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1830:22:32"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 13098,
                    "name": "payment",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 13090,
                    "src": "1875:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Payment_$17362_memory_ptr",
                      "typeString": "struct NahmiiTypesLib.Payment memory"
                    }
                  }
                ],
                "id": 13099,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 13097,
                  "name": "onlySealedPayment",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 30818,
                  "src": "1857:17:32",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_struct$_Payment_$17362_memory_ptr_$",
                    "typeString": "modifier (struct NahmiiTypesLib.Payment memory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1857:26:32"
              }
            ],
            "name": "challenge",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13091,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13088,
                  "name": "trade",
                  "nodeType": "VariableDeclaration",
                  "scope": 13155,
                  "src": "1712:26:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Trade_$17325_memory_ptr",
                    "typeString": "struct NahmiiTypesLib.Trade"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 13087,
                    "name": "NahmiiTypesLib.Trade",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 17325,
                    "src": "1712:20:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$17325_storage_ptr",
                      "typeString": "struct NahmiiTypesLib.Trade"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13090,
                  "name": "payment",
                  "nodeType": "VariableDeclaration",
                  "scope": 13155,
                  "src": "1748:30:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Payment_$17362_memory_ptr",
                    "typeString": "struct NahmiiTypesLib.Payment"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 13089,
                    "name": "NahmiiTypesLib.Payment",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 17362,
                    "src": "1748:22:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Payment_$17362_storage_ptr",
                      "typeString": "struct NahmiiTypesLib.Payment"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1702:82:32"
            },
            "payable": false,
            "returnParameters": {
              "id": 13100,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1888:0:32"
            },
            "scope": 13156,
            "src": "1684:874:32",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 13157,
        "src": "646:1914:32"
      }
    ],
    "src": "122:2438:32"
  },
  "legacyAST": {
    "absolutePath": "/opt/buildagent/work/855e104608380c36/contracts/FraudChallengeByDuplicateDriipNonceOfTradeAndPayment.sol",
    "exportedSymbols": {
      "FraudChallengeByDuplicateDriipNonceOfTradeAndPayment": [
        13156
      ]
    },
    "id": 13157,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 13046,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".25"
        ],
        "nodeType": "PragmaDirective",
        "src": "122:24:32"
      },
      {
        "id": 13047,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "147:33:32"
      },
      {
        "absolutePath": "/opt/buildagent/work/855e104608380c36/contracts/Ownable.sol",
        "file": "./Ownable.sol",
        "id": 13049,
        "nodeType": "ImportDirective",
        "scope": 13157,
        "sourceUnit": 21114,
        "src": "182:38:32",
        "symbolAliases": [
          {
            "foreign": 13048,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/opt/buildagent/work/855e104608380c36/contracts/FraudChallengable.sol",
        "file": "./FraudChallengable.sol",
        "id": 13051,
        "nodeType": "ImportDirective",
        "scope": 13157,
        "sourceUnit": 12467,
        "src": "221:58:32",
        "symbolAliases": [
          {
            "foreign": 13050,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/opt/buildagent/work/855e104608380c36/contracts/Challenge.sol",
        "file": "./Challenge.sol",
        "id": 13053,
        "nodeType": "ImportDirective",
        "scope": 13157,
        "sourceUnit": 3740,
        "src": "280:42:32",
        "symbolAliases": [
          {
            "foreign": 13052,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/opt/buildagent/work/855e104608380c36/contracts/Validatable.sol",
        "file": "./Validatable.sol",
        "id": 13055,
        "nodeType": "ImportDirective",
        "scope": 13157,
        "sourceUnit": 30868,
        "src": "323:46:32",
        "symbolAliases": [
          {
            "foreign": 13054,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/opt/buildagent/work/855e104608380c36/contracts/SecurityBondable.sol",
        "file": "./SecurityBondable.sol",
        "id": 13057,
        "nodeType": "ImportDirective",
        "scope": 13157,
        "sourceUnit": 26731,
        "src": "370:56:32",
        "symbolAliases": [
          {
            "foreign": 13056,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/opt/buildagent/work/855e104608380c36/contracts/NahmiiTypesLib.sol",
        "file": "./NahmiiTypesLib.sol",
        "id": 13059,
        "nodeType": "ImportDirective",
        "scope": 13157,
        "sourceUnit": 17388,
        "src": "427:52:32",
        "symbolAliases": [
          {
            "foreign": 13058,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 13060,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 21113,
              "src": "711:7:32",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$21113",
                "typeString": "contract Ownable"
              }
            },
            "id": 13061,
            "nodeType": "InheritanceSpecifier",
            "src": "711:7:32"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 13062,
              "name": "FraudChallengable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 12466,
              "src": "720:17:32",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FraudChallengable_$12466",
                "typeString": "contract FraudChallengable"
              }
            },
            "id": 13063,
            "nodeType": "InheritanceSpecifier",
            "src": "720:17:32"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 13064,
              "name": "Challenge",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3739,
              "src": "739:9:32",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Challenge_$3739",
                "typeString": "contract Challenge"
              }
            },
            "id": 13065,
            "nodeType": "InheritanceSpecifier",
            "src": "739:9:32"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 13066,
              "name": "Validatable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 30867,
              "src": "750:11:32",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Validatable_$30867",
                "typeString": "contract Validatable"
              }
            },
            "id": 13067,
            "nodeType": "InheritanceSpecifier",
            "src": "750:11:32"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 13068,
              "name": "SecurityBondable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 26730,
              "src": "763:16:32",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SecurityBondable_$26730",
                "typeString": "contract SecurityBondable"
              }
            },
            "id": 13069,
            "nodeType": "InheritanceSpecifier",
            "src": "763:16:32"
          }
        ],
        "contractDependencies": [
          3739,
          5563,
          12466,
          17125,
          21113,
          26730,
          26796,
          30867
        ],
        "contractKind": "contract",
        "documentation": "@title FraudChallengeByDuplicateDriipNonceOfTradeAndPayment\n@notice Where driips are challenged wrt fraud by duplicate drip nonce of trade and payment",
        "fullyImplemented": true,
        "id": 13156,
        "linearizedBaseContracts": [
          13156,
          26730,
          30867,
          3739,
          5563,
          12466,
          21113,
          26796,
          17125
        ],
        "name": "FraudChallengeByDuplicateDriipNonceOfTradeAndPayment",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": null,
            "id": 13077,
            "name": "ChallengeByDuplicateDriipNonceOfTradeAndPaymentEvent",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 13076,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13071,
                  "indexed": false,
                  "name": "tradeHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 13077,
                  "src": "987:17:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 13070,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "987:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13073,
                  "indexed": false,
                  "name": "paymentHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 13077,
                  "src": "1014:19:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 13072,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1014:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13075,
                  "indexed": false,
                  "name": "challenger",
                  "nodeType": "VariableDeclaration",
                  "scope": 13077,
                  "src": "1035:18:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13074,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1035:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "986:68:32"
            },
            "src": "928:127:32"
          },
          {
            "body": {
              "id": 13085,
              "nodeType": "Block",
              "src": "1263:7:32",
              "statements": []
            },
            "documentation": null,
            "id": 13086,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 13082,
                    "name": "deployer",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 13079,
                    "src": "1246:8:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 13083,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 13081,
                  "name": "Ownable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 21113,
                  "src": "1238:7:32",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Ownable_$21113_$",
                    "typeString": "type(contract Ownable)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1238:17:32"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13080,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13079,
                  "name": "deployer",
                  "nodeType": "VariableDeclaration",
                  "scope": 13086,
                  "src": "1220:16:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13078,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1220:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1219:18:32"
            },
            "payable": false,
            "returnParameters": {
              "id": 13084,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1263:0:32"
            },
            "scope": 13156,
            "src": "1208:62:32",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 13154,
              "nodeType": "Block",
              "src": "1888:670:32",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 13106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 13102,
                            "name": "trade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13088,
                            "src": "1951:5:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$17325_memory_ptr",
                              "typeString": "struct NahmiiTypesLib.Trade memory"
                            }
                          },
                          "id": 13103,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "nonce",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17306,
                          "src": "1951:11:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 13104,
                            "name": "payment",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13090,
                            "src": "1966:7:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Payment_$17362_memory_ptr",
                              "typeString": "struct NahmiiTypesLib.Payment memory"
                            }
                          },
                          "id": 13105,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "nonce",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17345,
                          "src": "1966:13:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1951:28:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 13101,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        42425,
                        42426
                      ],
                      "referencedDeclaration": 42425,
                      "src": "1943:7:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 13107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1943:37:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13108,
                  "nodeType": "ExpressionStatement",
                  "src": "1943:37:32"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 13109,
                        "name": "configuration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5516,
                        "src": "2031:13:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Configuration_$6930",
                          "typeString": "contract Configuration"
                        }
                      },
                      "id": 13111,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setOperationalModeExit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5860,
                      "src": "2031:36:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 13112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2031:38:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13113,
                  "nodeType": "ExpressionStatement",
                  "src": "2031:38:32"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 13117,
                            "name": "trade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13088,
                            "src": "2163:5:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$17325_memory_ptr",
                              "typeString": "struct NahmiiTypesLib.Trade memory"
                            }
                          },
                          "id": 13118,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "seal",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17320,
                          "src": "2163:10:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Seal_$17284_memory",
                            "typeString": "struct NahmiiTypesLib.Seal memory"
                          }
                        },
                        "id": 13119,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "hash",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 17281,
                        "src": "2163:15:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 13114,
                        "name": "fraudChallenge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12419,
                        "src": "2125:14:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FraudChallenge_$12754",
                          "typeString": "contract FraudChallenge"
                        }
                      },
                      "id": 13116,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addFraudulentTradeHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12701,
                      "src": "2125:37:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 13120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2125:54:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13121,
                  "nodeType": "ExpressionStatement",
                  "src": "2125:54:32"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 13125,
                              "name": "payment",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13090,
                              "src": "2229:7:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Payment_$17362_memory_ptr",
                                "typeString": "struct NahmiiTypesLib.Payment memory"
                              }
                            },
                            "id": 13126,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "seals",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 17357,
                            "src": "2229:13:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_WalletOperatorSeal_$17289_memory",
                              "typeString": "struct NahmiiTypesLib.WalletOperatorSeal memory"
                            }
                          },
                          "id": 13127,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "operator",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17288,
                          "src": "2229:22:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Seal_$17284_memory",
                            "typeString": "struct NahmiiTypesLib.Seal memory"
                          }
                        },
                        "id": 13128,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "hash",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 17281,
                        "src": "2229:27:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 13122,
                        "name": "fraudChallenge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12419,
                        "src": "2189:14:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FraudChallenge_$12754",
                          "typeString": "contract FraudChallenge"
                        }
                      },
                      "id": 13124,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addFraudulentPaymentHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12753,
                      "src": "2189:39:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 13129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2189:68:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13130,
                  "nodeType": "ExpressionStatement",
                  "src": "2189:68:32"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 13134,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42422,
                          "src": "2331:3:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 13135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2331:10:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 13136,
                            "name": "configuration",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5516,
                            "src": "2343:13:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Configuration_$6930",
                              "typeString": "contract Configuration"
                            }
                          },
                          "id": 13137,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "fraudStakeFraction",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6702,
                          "src": "2343:32:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 13138,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2343:34:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 13139,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2379:1:32",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 13131,
                        "name": "securityBond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26683,
                        "src": "2301:12:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SecurityBond_$26673",
                          "typeString": "contract SecurityBond"
                        }
                      },
                      "id": 13133,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "rewardFractional",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26073,
                      "src": "2301:29:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256) external"
                      }
                    },
                    "id": 13140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2301:80:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13141,
                  "nodeType": "ExpressionStatement",
                  "src": "2301:80:32"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 13143,
                            "name": "trade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13088,
                            "src": "2485:5:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$17325_memory_ptr",
                              "typeString": "struct NahmiiTypesLib.Trade memory"
                            }
                          },
                          "id": 13144,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "seal",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17320,
                          "src": "2485:10:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Seal_$17284_memory",
                            "typeString": "struct NahmiiTypesLib.Seal memory"
                          }
                        },
                        "id": 13145,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "hash",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 17281,
                        "src": "2485:15:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 13146,
                              "name": "payment",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13090,
                              "src": "2502:7:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Payment_$17362_memory_ptr",
                                "typeString": "struct NahmiiTypesLib.Payment memory"
                              }
                            },
                            "id": 13147,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "seals",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 17357,
                            "src": "2502:13:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_WalletOperatorSeal_$17289_memory",
                              "typeString": "struct NahmiiTypesLib.WalletOperatorSeal memory"
                            }
                          },
                          "id": 13148,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "operator",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17288,
                          "src": "2502:22:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Seal_$17284_memory",
                            "typeString": "struct NahmiiTypesLib.Seal memory"
                          }
                        },
                        "id": 13149,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "hash",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 17281,
                        "src": "2502:27:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 13150,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42422,
                          "src": "2531:3:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 13151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2531:10:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 13142,
                      "name": "ChallengeByDuplicateDriipNonceOfTradeAndPaymentEvent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13077,
                      "src": "2419:52:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,bytes32,address)"
                      }
                    },
                    "id": 13152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2419:132:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13153,
                  "nodeType": "EmitStatement",
                  "src": "2414:137:32"
                }
              ]
            },
            "documentation": "@notice Submit one trade candidate and one payment candidate in continuous Fraud\n Challenge (FC) to be tested for duplicate driip nonce\n @param trade Trade with duplicate driip nonce\n @param payment Payment with duplicate driip nonce",
            "id": 13155,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 13093,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 13092,
                  "name": "onlyOperationalModeNormal",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3738,
                  "src": "1800:25:32",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1800:25:32"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 13095,
                    "name": "trade",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 13088,
                    "src": "1846:5:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$17325_memory_ptr",
                      "typeString": "struct NahmiiTypesLib.Trade memory"
                    }
                  }
                ],
                "id": 13096,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 13094,
                  "name": "onlySealedTrade",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 30792,
                  "src": "1830:15:32",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_struct$_Trade_$17325_memory_ptr_$",
                    "typeString": "modifier (struct NahmiiTypesLib.Trade memory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1830:22:32"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 13098,
                    "name": "payment",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 13090,
                    "src": "1875:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Payment_$17362_memory_ptr",
                      "typeString": "struct NahmiiTypesLib.Payment memory"
                    }
                  }
                ],
                "id": 13099,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 13097,
                  "name": "onlySealedPayment",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 30818,
                  "src": "1857:17:32",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_struct$_Payment_$17362_memory_ptr_$",
                    "typeString": "modifier (struct NahmiiTypesLib.Payment memory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1857:26:32"
              }
            ],
            "name": "challenge",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13091,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13088,
                  "name": "trade",
                  "nodeType": "VariableDeclaration",
                  "scope": 13155,
                  "src": "1712:26:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Trade_$17325_memory_ptr",
                    "typeString": "struct NahmiiTypesLib.Trade"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 13087,
                    "name": "NahmiiTypesLib.Trade",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 17325,
                    "src": "1712:20:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$17325_storage_ptr",
                      "typeString": "struct NahmiiTypesLib.Trade"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13090,
                  "name": "payment",
                  "nodeType": "VariableDeclaration",
                  "scope": 13155,
                  "src": "1748:30:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Payment_$17362_memory_ptr",
                    "typeString": "struct NahmiiTypesLib.Payment"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 13089,
                    "name": "NahmiiTypesLib.Payment",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 17362,
                    "src": "1748:22:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Payment_$17362_storage_ptr",
                      "typeString": "struct NahmiiTypesLib.Payment"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1702:82:32"
            },
            "payable": false,
            "returnParameters": {
              "id": 13100,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1888:0:32"
            },
            "scope": 13156,
            "src": "1684:874:32",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 13157,
        "src": "646:1914:32"
      }
    ],
    "src": "122:2438:32"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.25+commit.59dbf8f1.Emscripten.clang"
  },
  "networks": {
    "3": {
      "events": {
        "0xc2f1c7c11d23566143ab8ec3d13174e6794edbd843f956688e18fb079eb50bed": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "tradeHash",
              "type": "bytes32"
            },
            {
              "indexed": false,
              "name": "paymentHash",
              "type": "bytes32"
            },
            {
              "indexed": false,
              "name": "challenger",
              "type": "address"
            }
          ],
          "name": "ChallengeByDuplicateDriipNonceOfTradeAndPaymentEvent",
          "type": "event"
        },
        "0xc9f3f00c1760fe26985aeacb814a21c56ea289d680562e89b249681b08c30382": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "oldSecurityBond",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "newSecurityBond",
              "type": "address"
            }
          ],
          "name": "SetSecurityBondEvent",
          "type": "event"
        },
        "0x1882af944a16549c3d4f60e3cd26f158b0c7aac3222cf32971fc21375ce05f60": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "oldValidator",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "newValidator",
              "type": "address"
            }
          ],
          "name": "SetValidatorEvent",
          "type": "event"
        },
        "0x634f61bf00e14adedce330c80c2823e16e184f189ebe853e1ddecc4a268477ff": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "oldConfiguration",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "newConfiguration",
              "type": "address"
            }
          ],
          "name": "SetConfigurationEvent",
          "type": "event"
        },
        "0x07998fa7be97abe2427246ae4688298c89d6196bbffdf0997b9495a8d27bc673": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "oldFraudChallenge",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "newFraudChallenge",
              "type": "address"
            }
          ],
          "name": "SetFraudChallengeEvent",
          "type": "event"
        },
        "0x977e5fa58e458501775e0008d275006294c5249e3c08d1d0e3a9f3acad14f6e4": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "oldDeployer",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "newDeployer",
              "type": "address"
            }
          ],
          "name": "SetDeployerEvent",
          "type": "event"
        },
        "0x9f611b789425d0d5b90b920f1b2852907dd865c80074a30b1629aaa041d1812c": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "oldOperator",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "newOperator",
              "type": "address"
            }
          ],
          "name": "SetOperatorEvent",
          "type": "event"
        },
        "0xd5a2a04a775c741c2ca0dc46ea7ce4835190e1aaf1ca018def0e82568ec33616": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "wallet",
              "type": "address"
            }
          ],
          "name": "SelfDestructionDisabledEvent",
          "type": "event"
        },
        "0x787a5d936e74f4b564b9153575886059829c78cd9927b1be5e0d976b317ef736": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "wallet",
              "type": "address"
            }
          ],
          "name": "TriggerSelfDestructionEvent",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x8466aaf0a7dead8deabcd14040d6fcb4454ee25a",
      "transactionHash": "0xb359322eb58adfaaa97df3bcfdf81bf07ead2ff29e827e0dd9b2a03875b6767a"
    }
  },
  "schemaVersion": "2.0.1",
  "updatedAt": "2019-01-31T11:28:29.574Z"
}