{
  "contractName": "FraudChallengeByDuplicateDriipNonceOfTrades",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "newFraudChallenge",
          "type": "address"
        }
      ],
      "name": "setFraudChallenge",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newValidator",
          "type": "address"
        }
      ],
      "name": "setValidator",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "triggerSelfDestruction",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "selfDestructionDisabled",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "validator",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "fraudChallenge",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "destructor",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "operator",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newConfiguration",
          "type": "address"
        }
      ],
      "name": "setConfiguration",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newSecurityBond",
          "type": "address"
        }
      ],
      "name": "setSecurityBond",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "securityBond",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "configuration",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "disableSelfDestruction",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newDeployer",
          "type": "address"
        }
      ],
      "name": "setDeployer",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOperator",
          "type": "address"
        }
      ],
      "name": "setOperator",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "deployer",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "deployer",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "tradeHash1",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "tradeHash2",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "challenger",
          "type": "address"
        }
      ],
      "name": "ChallengeByDuplicateDriipNonceOfTradesEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "oldSecurityBond",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "newSecurityBond",
          "type": "address"
        }
      ],
      "name": "SetSecurityBondEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "oldValidator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "newValidator",
          "type": "address"
        }
      ],
      "name": "SetValidatorEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "oldConfiguration",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "newConfiguration",
          "type": "address"
        }
      ],
      "name": "SetConfigurationEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "oldFraudChallenge",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "newFraudChallenge",
          "type": "address"
        }
      ],
      "name": "SetFraudChallengeEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "oldDeployer",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "newDeployer",
          "type": "address"
        }
      ],
      "name": "SetDeployerEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "oldOperator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "newOperator",
          "type": "address"
        }
      ],
      "name": "SetOperatorEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "wallet",
          "type": "address"
        }
      ],
      "name": "SelfDestructionDisabledEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "wallet",
          "type": "address"
        }
      ],
      "name": "TriggerSelfDestructionEvent",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "components": [
            {
              "name": "nonce",
              "type": "uint256"
            },
            {
              "name": "amount",
              "type": "int256"
            },
            {
              "components": [
                {
                  "components": [
                    {
                      "name": "ct",
                      "type": "address"
                    },
                    {
                      "name": "id",
                      "type": "uint256"
                    }
                  ],
                  "name": "intended",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "name": "ct",
                      "type": "address"
                    },
                    {
                      "name": "id",
                      "type": "uint256"
                    }
                  ],
                  "name": "conjugate",
                  "type": "tuple"
                }
              ],
              "name": "currencies",
              "type": "tuple"
            },
            {
              "name": "rate",
              "type": "int256"
            },
            {
              "components": [
                {
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "name": "wallet",
                  "type": "address"
                },
                {
                  "name": "rollingVolume",
                  "type": "uint256"
                },
                {
                  "name": "liquidityRole",
                  "type": "uint8"
                },
                {
                  "components": [
                    {
                      "name": "amount",
                      "type": "int256"
                    },
                    {
                      "components": [
                        {
                          "name": "wallet",
                          "type": "bytes32"
                        },
                        {
                          "name": "operator",
                          "type": "bytes32"
                        }
                      ],
                      "name": "hashes",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "name": "current",
                          "type": "int256"
                        },
                        {
                          "name": "previous",
                          "type": "int256"
                        }
                      ],
                      "name": "residuals",
                      "type": "tuple"
                    }
                  ],
                  "name": "order",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "components": [
                        {
                          "name": "current",
                          "type": "int256"
                        },
                        {
                          "name": "previous",
                          "type": "int256"
                        }
                      ],
                      "name": "intended",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "name": "current",
                          "type": "int256"
                        },
                        {
                          "name": "previous",
                          "type": "int256"
                        }
                      ],
                      "name": "conjugate",
                      "type": "tuple"
                    }
                  ],
                  "name": "balances",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "components": [
                        {
                          "name": "amount",
                          "type": "int256"
                        },
                        {
                          "components": [
                            {
                              "name": "ct",
                              "type": "address"
                            },
                            {
                              "name": "id",
                              "type": "uint256"
                            }
                          ],
                          "name": "currency",
                          "type": "tuple"
                        }
                      ],
                      "name": "single",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "name": "originId",
                          "type": "uint256"
                        },
                        {
                          "components": [
                            {
                              "name": "amount",
                              "type": "int256"
                            },
                            {
                              "components": [
                                {
                                  "name": "ct",
                                  "type": "address"
                                },
                                {
                                  "name": "id",
                                  "type": "uint256"
                                }
                              ],
                              "name": "currency",
                              "type": "tuple"
                            }
                          ],
                          "name": "figure",
                          "type": "tuple"
                        }
                      ],
                      "name": "total",
                      "type": "tuple[]"
                    }
                  ],
                  "name": "fees",
                  "type": "tuple"
                }
              ],
              "name": "buyer",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "name": "wallet",
                  "type": "address"
                },
                {
                  "name": "rollingVolume",
                  "type": "uint256"
                },
                {
                  "name": "liquidityRole",
                  "type": "uint8"
                },
                {
                  "components": [
                    {
                      "name": "amount",
                      "type": "int256"
                    },
                    {
                      "components": [
                        {
                          "name": "wallet",
                          "type": "bytes32"
                        },
                        {
                          "name": "operator",
                          "type": "bytes32"
                        }
                      ],
                      "name": "hashes",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "name": "current",
                          "type": "int256"
                        },
                        {
                          "name": "previous",
                          "type": "int256"
                        }
                      ],
                      "name": "residuals",
                      "type": "tuple"
                    }
                  ],
                  "name": "order",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "components": [
                        {
                          "name": "current",
                          "type": "int256"
                        },
                        {
                          "name": "previous",
                          "type": "int256"
                        }
                      ],
                      "name": "intended",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "name": "current",
                          "type": "int256"
                        },
                        {
                          "name": "previous",
                          "type": "int256"
                        }
                      ],
                      "name": "conjugate",
                      "type": "tuple"
                    }
                  ],
                  "name": "balances",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "components": [
                        {
                          "name": "amount",
                          "type": "int256"
                        },
                        {
                          "components": [
                            {
                              "name": "ct",
                              "type": "address"
                            },
                            {
                              "name": "id",
                              "type": "uint256"
                            }
                          ],
                          "name": "currency",
                          "type": "tuple"
                        }
                      ],
                      "name": "single",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "name": "originId",
                          "type": "uint256"
                        },
                        {
                          "components": [
                            {
                              "name": "amount",
                              "type": "int256"
                            },
                            {
                              "components": [
                                {
                                  "name": "ct",
                                  "type": "address"
                                },
                                {
                                  "name": "id",
                                  "type": "uint256"
                                }
                              ],
                              "name": "currency",
                              "type": "tuple"
                            }
                          ],
                          "name": "figure",
                          "type": "tuple"
                        }
                      ],
                      "name": "total",
                      "type": "tuple[]"
                    }
                  ],
                  "name": "fees",
                  "type": "tuple"
                }
              ],
              "name": "seller",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "components": [
                    {
                      "name": "single",
                      "type": "int256"
                    },
                    {
                      "name": "total",
                      "type": "int256"
                    }
                  ],
                  "name": "intended",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "name": "single",
                      "type": "int256"
                    },
                    {
                      "name": "total",
                      "type": "int256"
                    }
                  ],
                  "name": "conjugate",
                  "type": "tuple"
                }
              ],
              "name": "transfers",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "name": "hash",
                  "type": "bytes32"
                },
                {
                  "components": [
                    {
                      "name": "r",
                      "type": "bytes32"
                    },
                    {
                      "name": "s",
                      "type": "bytes32"
                    },
                    {
                      "name": "v",
                      "type": "uint8"
                    }
                  ],
                  "name": "signature",
                  "type": "tuple"
                }
              ],
              "name": "seal",
              "type": "tuple"
            },
            {
              "name": "blockNumber",
              "type": "uint256"
            },
            {
              "name": "operatorId",
              "type": "uint256"
            }
          ],
          "name": "trade1",
          "type": "tuple"
        },
        {
          "components": [
            {
              "name": "nonce",
              "type": "uint256"
            },
            {
              "name": "amount",
              "type": "int256"
            },
            {
              "components": [
                {
                  "components": [
                    {
                      "name": "ct",
                      "type": "address"
                    },
                    {
                      "name": "id",
                      "type": "uint256"
                    }
                  ],
                  "name": "intended",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "name": "ct",
                      "type": "address"
                    },
                    {
                      "name": "id",
                      "type": "uint256"
                    }
                  ],
                  "name": "conjugate",
                  "type": "tuple"
                }
              ],
              "name": "currencies",
              "type": "tuple"
            },
            {
              "name": "rate",
              "type": "int256"
            },
            {
              "components": [
                {
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "name": "wallet",
                  "type": "address"
                },
                {
                  "name": "rollingVolume",
                  "type": "uint256"
                },
                {
                  "name": "liquidityRole",
                  "type": "uint8"
                },
                {
                  "components": [
                    {
                      "name": "amount",
                      "type": "int256"
                    },
                    {
                      "components": [
                        {
                          "name": "wallet",
                          "type": "bytes32"
                        },
                        {
                          "name": "operator",
                          "type": "bytes32"
                        }
                      ],
                      "name": "hashes",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "name": "current",
                          "type": "int256"
                        },
                        {
                          "name": "previous",
                          "type": "int256"
                        }
                      ],
                      "name": "residuals",
                      "type": "tuple"
                    }
                  ],
                  "name": "order",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "components": [
                        {
                          "name": "current",
                          "type": "int256"
                        },
                        {
                          "name": "previous",
                          "type": "int256"
                        }
                      ],
                      "name": "intended",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "name": "current",
                          "type": "int256"
                        },
                        {
                          "name": "previous",
                          "type": "int256"
                        }
                      ],
                      "name": "conjugate",
                      "type": "tuple"
                    }
                  ],
                  "name": "balances",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "components": [
                        {
                          "name": "amount",
                          "type": "int256"
                        },
                        {
                          "components": [
                            {
                              "name": "ct",
                              "type": "address"
                            },
                            {
                              "name": "id",
                              "type": "uint256"
                            }
                          ],
                          "name": "currency",
                          "type": "tuple"
                        }
                      ],
                      "name": "single",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "name": "originId",
                          "type": "uint256"
                        },
                        {
                          "components": [
                            {
                              "name": "amount",
                              "type": "int256"
                            },
                            {
                              "components": [
                                {
                                  "name": "ct",
                                  "type": "address"
                                },
                                {
                                  "name": "id",
                                  "type": "uint256"
                                }
                              ],
                              "name": "currency",
                              "type": "tuple"
                            }
                          ],
                          "name": "figure",
                          "type": "tuple"
                        }
                      ],
                      "name": "total",
                      "type": "tuple[]"
                    }
                  ],
                  "name": "fees",
                  "type": "tuple"
                }
              ],
              "name": "buyer",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "name": "wallet",
                  "type": "address"
                },
                {
                  "name": "rollingVolume",
                  "type": "uint256"
                },
                {
                  "name": "liquidityRole",
                  "type": "uint8"
                },
                {
                  "components": [
                    {
                      "name": "amount",
                      "type": "int256"
                    },
                    {
                      "components": [
                        {
                          "name": "wallet",
                          "type": "bytes32"
                        },
                        {
                          "name": "operator",
                          "type": "bytes32"
                        }
                      ],
                      "name": "hashes",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "name": "current",
                          "type": "int256"
                        },
                        {
                          "name": "previous",
                          "type": "int256"
                        }
                      ],
                      "name": "residuals",
                      "type": "tuple"
                    }
                  ],
                  "name": "order",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "components": [
                        {
                          "name": "current",
                          "type": "int256"
                        },
                        {
                          "name": "previous",
                          "type": "int256"
                        }
                      ],
                      "name": "intended",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "name": "current",
                          "type": "int256"
                        },
                        {
                          "name": "previous",
                          "type": "int256"
                        }
                      ],
                      "name": "conjugate",
                      "type": "tuple"
                    }
                  ],
                  "name": "balances",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "components": [
                        {
                          "name": "amount",
                          "type": "int256"
                        },
                        {
                          "components": [
                            {
                              "name": "ct",
                              "type": "address"
                            },
                            {
                              "name": "id",
                              "type": "uint256"
                            }
                          ],
                          "name": "currency",
                          "type": "tuple"
                        }
                      ],
                      "name": "single",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "name": "originId",
                          "type": "uint256"
                        },
                        {
                          "components": [
                            {
                              "name": "amount",
                              "type": "int256"
                            },
                            {
                              "components": [
                                {
                                  "name": "ct",
                                  "type": "address"
                                },
                                {
                                  "name": "id",
                                  "type": "uint256"
                                }
                              ],
                              "name": "currency",
                              "type": "tuple"
                            }
                          ],
                          "name": "figure",
                          "type": "tuple"
                        }
                      ],
                      "name": "total",
                      "type": "tuple[]"
                    }
                  ],
                  "name": "fees",
                  "type": "tuple"
                }
              ],
              "name": "seller",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "components": [
                    {
                      "name": "single",
                      "type": "int256"
                    },
                    {
                      "name": "total",
                      "type": "int256"
                    }
                  ],
                  "name": "intended",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "name": "single",
                      "type": "int256"
                    },
                    {
                      "name": "total",
                      "type": "int256"
                    }
                  ],
                  "name": "conjugate",
                  "type": "tuple"
                }
              ],
              "name": "transfers",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "name": "hash",
                  "type": "bytes32"
                },
                {
                  "components": [
                    {
                      "name": "r",
                      "type": "bytes32"
                    },
                    {
                      "name": "s",
                      "type": "bytes32"
                    },
                    {
                      "name": "v",
                      "type": "uint8"
                    }
                  ],
                  "name": "signature",
                  "type": "tuple"
                }
              ],
              "name": "seal",
              "type": "tuple"
            },
            {
              "name": "blockNumber",
              "type": "uint256"
            },
            {
              "name": "operatorId",
              "type": "uint256"
            }
          ],
          "name": "trade2",
          "type": "tuple"
        }
      ],
      "name": "challenge",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x60806040523480156200001157600080fd5b50604051602080620018d78339810180604052620000339190810190620000b6565b8080600160a060020a03811615156200004b57600080fd5b600160a060020a0381163014156200006257600080fd5b506000805461010060a860020a031916610100600160a060020a039390931692830217905560018054600160a060020a031916909117905550620000eb565b6000620000af8251620000df565b9392505050565b600060208284031215620000c957600080fd5b6000620000d78484620000a1565b949350505050565b600160a060020a031690565b6117dc80620000fb6000396000f3006080604052600436106100d75763ffffffff60e060020a60003504166301370d0681146100dc5780631327d3d8146100fe5780632738a1121461011e5780632f013a00146101335780633a5381b51461015e5780633bd7857f146101805780634476d23b14610195578063570ca735146101b7578063627f09c3146101cc5780636792ce6e146101ec5780636b0570d01461020c5780636c70bee91461022157806370327ea1146102365780638fdcfa841461024b578063962147351461026b578063b3ab15fb1461028b578063d5f39488146102ab575b600080fd5b3480156100e857600080fd5b506100fc6100f73660046111ec565b6102c0565b005b34801561010a57600080fd5b506100fc6101193660046111ec565b610368565b34801561012a57600080fd5b506100fc610400565b34801561013f57600080fd5b50610148610466565b604051610155919061167a565b60405180910390f35b34801561016a57600080fd5b5061017361046f565b60405161015591906116be565b34801561018c57600080fd5b5061017361047e565b3480156101a157600080fd5b506101aa61048d565b6040516101559190611623565b3480156101c357600080fd5b506101aa6104a1565b3480156101d857600080fd5b506100fc6101e73660046111ec565b6104b0565b3480156101f857600080fd5b506100fc6102073660046111ec565b610548565b34801561021857600080fd5b506101736105e0565b34801561022d57600080fd5b506101736105ef565b34801561024257600080fd5b506100fc6105fe565b34801561025757600080fd5b506100fc61026636600461120a565b610661565b34801561027757600080fd5b506100fc6102863660046111a8565b610aae565b34801561029757600080fd5b506100fc6102a63660046111a8565b610b75565b3480156102b757600080fd5b506101aa610c1f565b60006102ca610c33565b15156102d557600080fd5b81600160a060020a03811615156102eb57600080fd5b6002548390600160a060020a0390811690821681146103615760028054600160a060020a03878116600160a060020a0319831617909255604051911694507f07998fa7be97abe2427246ae4688298c89d6196bbffdf0997b9495a8d27bc6739061035890869088906116cc565b60405180910390a15b5050505050565b6000610372610c33565b151561037d57600080fd5b81600160a060020a038116151561039357600080fd5b6004548390600160a060020a0390811690821681146103615760048054600160a060020a03878116600160a060020a0319831617909255604051911694507f1882af944a16549c3d4f60e3cd26f158b0c7aac3222cf32971fc21375ce05f609061035890869088906116cc565b3361040961048d565b600160a060020a03161461041c57600080fd5b60005460ff161561042c57600080fd5b7f787a5d936e74f4b564b9153575886059829c78cd9927b1be5e0d976b317ef7363360405161045b9190611623565b60405180910390a133ff5b60005460ff1681565b600454600160a060020a031681565b600254600160a060020a031681565b6000546101009004600160a060020a031690565b600154600160a060020a031681565b60006104ba610c33565b15156104c557600080fd5b81600160a060020a03811615156104db57600080fd5b6003548390600160a060020a0390811690821681146103615760038054600160a060020a03878116600160a060020a0319831617909255604051911694507f634f61bf00e14adedce330c80c2823e16e184f189ebe853e1ddecc4a268477ff9061035890869088906116cc565b6000610552610c33565b151561055d57600080fd5b81600160a060020a038116151561057357600080fd5b6005548390600160a060020a0390811690821681146103615760058054600160a060020a03878116600160a060020a0319831617909255604051911694507fc9f3f00c1760fe26985aeacb814a21c56ea289d680562e89b249681b08c303829061035890869088906116cc565b600554600160a060020a031681565b600354600160a060020a031681565b3361060761048d565b600160a060020a03161461061a57600080fd5b6000805460ff191660011790556040517fd5a2a04a775c741c2ca0dc46ea7ce4835190e1aaf1ca018def0e82568ec3361690610657903390611623565b60405180910390a1565b600360009054906101000a9004600160a060020a0316600160a060020a031663f71e860f6040518163ffffffff1660e060020a028152600401602060405180830381600087803b1580156106b457600080fd5b505af11580156106c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506106ec91908101906111ce565b15156106f757600080fd5b6004805460405160e160020a637211c8c70281528492600160a060020a039092169163e423918e9161072b918591016116e7565b602060405180830381600087803b15801561074557600080fd5b505af1158015610759573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061077d91908101906111ce565b151561078857600080fd5b6004805460405160e160020a637211c8c70281528492600160a060020a039092169163e423918e916107bc918591016116e7565b602060405180830381600087803b1580156107d657600080fd5b505af11580156107ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061080e91908101906111ce565b151561081957600080fd5b60e08084015151908501515114801590610834575082518451145b151561083f57600080fd5b600360009054906101000a9004600160a060020a0316600160a060020a031663f8e6e8886040518163ffffffff1660e060020a028152600401600060405180830381600087803b15801561089257600080fd5b505af11580156108a6573d6000803e3d6000fd5b505060025460e08701515160405160e060020a6375d8655b028152600160a060020a0390921693506375d8655b92506108e191600401611688565b600060405180830381600087803b1580156108fb57600080fd5b505af115801561090f573d6000803e3d6000fd5b505060025460e08601515160405160e060020a6375d8655b028152600160a060020a0390921693506375d8655b925061094a91600401611688565b600060405180830381600087803b15801561096457600080fd5b505af1158015610978573d6000803e3d6000fd5b50506005546003546040805160e060020a639699f3370281529051600160a060020a03938416955063760b82929450339390921691639699f337916004808201926020929091908290030181600087803b1580156109d557600080fd5b505af11580156109e9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610a0d9190810190611271565b60006040518463ffffffff1660e060020a028152600401610a3093929190611652565b600060405180830381600087803b158015610a4a57600080fd5b505af1158015610a5e573d6000803e3d6000fd5b50505060e0808601515190850151516040517f3fa261522ebe1a6ea6d00a6007382809bd849dd047a12cfd794aa161660ac1619350610aa09291903390611696565b60405180910390a150505050565b6000610ab8610c33565b1515610ac357600080fd5b81600160a060020a0381161515610ad957600080fd5b600160a060020a038116301415610aef57600080fd5b600054600160a060020a038481166101009092041614610b705760008054600160a060020a0385811661010090810261010060a860020a0319841617909355604051929091041692507f977e5fa58e458501775e0008d275006294c5249e3c08d1d0e3a9f3acad14f6e490610b679084908690611637565b60405180910390a15b505050565b6000610b7f610c49565b1515610b8a57600080fd5b81600160a060020a0381161515610ba057600080fd5b600160a060020a038116301415610bb657600080fd5b600154600160a060020a03848116911614610b705760018054600160a060020a03858116600160a060020a0319831617909255604051911692507f9f611b789425d0d5b90b920f1b2852907dd865c80074a30b1629aaa041d1812c90610b679084908690611637565b6000546101009004600160a060020a031681565b6000546101009004600160a060020a0316331490565b600154600160a060020a0316331490565b6000610c668235611748565b9392505050565b6000601f82018313610c7e57600080fd5b8135610c91610c8c8261171e565b6116f8565b91508181835260208401935060208101905083856080840282011115610cb657600080fd5b60005b83811015610ce45781610ccc8882610e40565b84525060209092019160809190910190600101610cb9565b5050505092915050565b6000610c668251611754565b6000610c668235611759565b6000610c668235611772565b6000610c66823561177d565b600060408284031215610d3057600080fd5b610d3a60406116f8565b90506000610d488484610c5a565b8252506020610d5984848301610cfa565b60208301525092915050565b600060408284031215610d7757600080fd5b610d8160406116f8565b90506000610d488484610cfa565b600060608284031215610da157600080fd5b610dab60406116f8565b90506000610db98484610cfa565b8252506020610d5984848301610d1e565b600060808284031215610ddc57600080fd5b610de660406116f8565b90506000610df48484610d1e565b8252506040610d5984848301610d1e565b600060808284031215610e1757600080fd5b610e2160406116f8565b90506000610e2f8484610d65565b8252506040610d5984848301610d65565b600060808284031215610e5257600080fd5b610e5c60406116f8565b90506000610e6a8484610cfa565b8252506020610d5984848301610d8f565b600060808284031215610e8d57600080fd5b610e9760406116f8565b90506000610ea58484610cfa565b8252506020610d5984848301600060608284031215610ec357600080fd5b610ecd60606116f8565b90506000610edb8484610cfa565b8252506020610eec84848301610cfa565b6020830152506040610f008482850161119c565b60408301525092915050565b600060808284031215610f1e57600080fd5b610f2860406116f8565b90506000610f368484610d8f565b82525060608201356001604060020a03811115610f5257600080fd5b610d5984828501610c6d565b600060a08284031215610f7057600080fd5b610f7a60606116f8565b90506000610f888484610cfa565b8252506020610f9984848301610d65565b6020830152506060610f0084828501610d65565b60006101c08284031215610fc057600080fd5b610fca60e06116f8565b90506000610fd88484610cfa565b8252506020610fe984848301610c5a565b6020830152506040610ffd84828501610cfa565b604083015250606061101184828501610d12565b606083015250608061102584828501610f5e565b60808301525061012061103a84828501610e05565b60a0830152506101a08201356001604060020a0381111561105a57600080fd5b61106684828501610f0c565b60c08301525092915050565b6000610260828403121561108557600080fd5b6110906101406116f8565b9050600061109e8484610cfa565b82525060206110af84848301610cfa565b60208301525060406110c384828501610dca565b60408301525060c06110d784828501610cfa565b60608301525060e08201356001604060020a038111156110f657600080fd5b61110284828501610fad565b6080830152506101008201356001604060020a0381111561112257600080fd5b61112e84828501610fad565b60a08301525061012061114384828501610e05565b60c0830152506101a061115884828501610e7b565b60e08301525061022061116d84828501610cfa565b6101008301525061024061118384828501610cfa565b6101208301525092915050565b6000610c668251611759565b6000610c66823561176c565b6000602082840312156111ba57600080fd5b60006111c68484610c5a565b949350505050565b6000602082840312156111e057600080fd5b60006111c68484610cee565b6000602082840312156111fe57600080fd5b60006111c68484610d06565b6000806040838503121561121d57600080fd5b82356001604060020a0381111561123357600080fd5b61123f85828601611072565b92505060208301356001604060020a0381111561125b57600080fd5b61126785828601611072565b9150509250929050565b60006020828403121561128357600080fd5b60006111c68484611190565b61129881611748565b82525050565b60006112a982611744565b8084526020840193506112bb8361173e565b60005b828110156112eb576112d18683516113c9565b6112da8261173e565b6080969096019591506001016112be565b5093949350505050565b61129881611754565b61129881611759565b61129881611772565b6112988161178c565b61129881611797565b80516040830190611333848261128f565b50602082015161134660208501826112fe565b50505050565b8051604083019061133384826112fe565b8051606083019061136e84826112fe565b5060208201516113466020850182611322565b805160808301906113928482611322565b5060208201516113466040850182611322565b805160808301906113b6848261134c565b506020820151611346604085018261134c565b805160808301906113da84826112fe565b506020820151611346602085018261135d565b805160808301906113fe84826112fe565b50602082015161134660208501828051606083019061141d84826112fe565b50602082015161143060208501826112fe565b506040820151611346604085018261161a565b80516000906080840190611457858261135d565b506020830151848203606086015261146f828261129e565b95945050505050565b805160a083019061148984826112fe565b50602082015161149c602085018261134c565b506040820151611346606085018261134c565b80516000906101c08401906114c485826112fe565b5060208301516114d7602086018261128f565b5060408301516114ea60408601826112fe565b5060608301516114fd6060860182611310565b5060808301516115106080860182611478565b5060a08301516115246101208601826113a5565b5060c08301518482036101a086015261146f8282611443565b805160009061026084019061155285826112fe565b50602083015161156560208601826112fe565b5060408301516115786040860182611381565b50606083015161158b60c08601826112fe565b50608083015184820360e08601526115a382826114af565b91505060a08301518482036101008601526115be82826114af565b91505060c08301516115d46101208601826113a5565b5060e08301516115e86101a08601826113ed565b506101008301516115fd6102208601826112fe565b506101208301516116126102408601826112fe565b509392505050565b6112988161176c565b60208101611631828461128f565b92915050565b60408101611645828561128f565b610c66602083018461128f565b60608101611660828661128f565b61166d60208301856112fe565b6111c66040830184611319565b6020810161163182846112f5565b6020810161163182846112fe565b606081016116a482866112fe565b6116b160208301856112fe565b6111c6604083018461128f565b602081016116318284611307565b604081016116da8285611307565b610c666020830184611307565b60208082528101610c66818461153d565b6040518181016001604060020a038111828210171561171657600080fd5b604052919050565b60006001604060020a0382111561173457600080fd5b5060209081020190565b60200190565b5190565b600160a060020a031690565b151590565b90565b60006002821061176857fe5b5090565b60ff1690565b600061163182611748565b60006002821061176857600080fd5b60006116318261175c565b6000611631826117595600a265627a7a723058200adeb015b2f124efffac0e3c1c5f64061ab4c1a1d9184d807d045a79f3aef89f6c6578706572696d656e74616cf50037",
  "deployedBytecode": "0x6080604052600436106100d75763ffffffff60e060020a60003504166301370d0681146100dc5780631327d3d8146100fe5780632738a1121461011e5780632f013a00146101335780633a5381b51461015e5780633bd7857f146101805780634476d23b14610195578063570ca735146101b7578063627f09c3146101cc5780636792ce6e146101ec5780636b0570d01461020c5780636c70bee91461022157806370327ea1146102365780638fdcfa841461024b578063962147351461026b578063b3ab15fb1461028b578063d5f39488146102ab575b600080fd5b3480156100e857600080fd5b506100fc6100f73660046111ec565b6102c0565b005b34801561010a57600080fd5b506100fc6101193660046111ec565b610368565b34801561012a57600080fd5b506100fc610400565b34801561013f57600080fd5b50610148610466565b604051610155919061167a565b60405180910390f35b34801561016a57600080fd5b5061017361046f565b60405161015591906116be565b34801561018c57600080fd5b5061017361047e565b3480156101a157600080fd5b506101aa61048d565b6040516101559190611623565b3480156101c357600080fd5b506101aa6104a1565b3480156101d857600080fd5b506100fc6101e73660046111ec565b6104b0565b3480156101f857600080fd5b506100fc6102073660046111ec565b610548565b34801561021857600080fd5b506101736105e0565b34801561022d57600080fd5b506101736105ef565b34801561024257600080fd5b506100fc6105fe565b34801561025757600080fd5b506100fc61026636600461120a565b610661565b34801561027757600080fd5b506100fc6102863660046111a8565b610aae565b34801561029757600080fd5b506100fc6102a63660046111a8565b610b75565b3480156102b757600080fd5b506101aa610c1f565b60006102ca610c33565b15156102d557600080fd5b81600160a060020a03811615156102eb57600080fd5b6002548390600160a060020a0390811690821681146103615760028054600160a060020a03878116600160a060020a0319831617909255604051911694507f07998fa7be97abe2427246ae4688298c89d6196bbffdf0997b9495a8d27bc6739061035890869088906116cc565b60405180910390a15b5050505050565b6000610372610c33565b151561037d57600080fd5b81600160a060020a038116151561039357600080fd5b6004548390600160a060020a0390811690821681146103615760048054600160a060020a03878116600160a060020a0319831617909255604051911694507f1882af944a16549c3d4f60e3cd26f158b0c7aac3222cf32971fc21375ce05f609061035890869088906116cc565b3361040961048d565b600160a060020a03161461041c57600080fd5b60005460ff161561042c57600080fd5b7f787a5d936e74f4b564b9153575886059829c78cd9927b1be5e0d976b317ef7363360405161045b9190611623565b60405180910390a133ff5b60005460ff1681565b600454600160a060020a031681565b600254600160a060020a031681565b6000546101009004600160a060020a031690565b600154600160a060020a031681565b60006104ba610c33565b15156104c557600080fd5b81600160a060020a03811615156104db57600080fd5b6003548390600160a060020a0390811690821681146103615760038054600160a060020a03878116600160a060020a0319831617909255604051911694507f634f61bf00e14adedce330c80c2823e16e184f189ebe853e1ddecc4a268477ff9061035890869088906116cc565b6000610552610c33565b151561055d57600080fd5b81600160a060020a038116151561057357600080fd5b6005548390600160a060020a0390811690821681146103615760058054600160a060020a03878116600160a060020a0319831617909255604051911694507fc9f3f00c1760fe26985aeacb814a21c56ea289d680562e89b249681b08c303829061035890869088906116cc565b600554600160a060020a031681565b600354600160a060020a031681565b3361060761048d565b600160a060020a03161461061a57600080fd5b6000805460ff191660011790556040517fd5a2a04a775c741c2ca0dc46ea7ce4835190e1aaf1ca018def0e82568ec3361690610657903390611623565b60405180910390a1565b600360009054906101000a9004600160a060020a0316600160a060020a031663f71e860f6040518163ffffffff1660e060020a028152600401602060405180830381600087803b1580156106b457600080fd5b505af11580156106c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506106ec91908101906111ce565b15156106f757600080fd5b6004805460405160e160020a637211c8c70281528492600160a060020a039092169163e423918e9161072b918591016116e7565b602060405180830381600087803b15801561074557600080fd5b505af1158015610759573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061077d91908101906111ce565b151561078857600080fd5b6004805460405160e160020a637211c8c70281528492600160a060020a039092169163e423918e916107bc918591016116e7565b602060405180830381600087803b1580156107d657600080fd5b505af11580156107ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061080e91908101906111ce565b151561081957600080fd5b60e08084015151908501515114801590610834575082518451145b151561083f57600080fd5b600360009054906101000a9004600160a060020a0316600160a060020a031663f8e6e8886040518163ffffffff1660e060020a028152600401600060405180830381600087803b15801561089257600080fd5b505af11580156108a6573d6000803e3d6000fd5b505060025460e08701515160405160e060020a6375d8655b028152600160a060020a0390921693506375d8655b92506108e191600401611688565b600060405180830381600087803b1580156108fb57600080fd5b505af115801561090f573d6000803e3d6000fd5b505060025460e08601515160405160e060020a6375d8655b028152600160a060020a0390921693506375d8655b925061094a91600401611688565b600060405180830381600087803b15801561096457600080fd5b505af1158015610978573d6000803e3d6000fd5b50506005546003546040805160e060020a639699f3370281529051600160a060020a03938416955063760b82929450339390921691639699f337916004808201926020929091908290030181600087803b1580156109d557600080fd5b505af11580156109e9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610a0d9190810190611271565b60006040518463ffffffff1660e060020a028152600401610a3093929190611652565b600060405180830381600087803b158015610a4a57600080fd5b505af1158015610a5e573d6000803e3d6000fd5b50505060e0808601515190850151516040517f3fa261522ebe1a6ea6d00a6007382809bd849dd047a12cfd794aa161660ac1619350610aa09291903390611696565b60405180910390a150505050565b6000610ab8610c33565b1515610ac357600080fd5b81600160a060020a0381161515610ad957600080fd5b600160a060020a038116301415610aef57600080fd5b600054600160a060020a038481166101009092041614610b705760008054600160a060020a0385811661010090810261010060a860020a0319841617909355604051929091041692507f977e5fa58e458501775e0008d275006294c5249e3c08d1d0e3a9f3acad14f6e490610b679084908690611637565b60405180910390a15b505050565b6000610b7f610c49565b1515610b8a57600080fd5b81600160a060020a0381161515610ba057600080fd5b600160a060020a038116301415610bb657600080fd5b600154600160a060020a03848116911614610b705760018054600160a060020a03858116600160a060020a0319831617909255604051911692507f9f611b789425d0d5b90b920f1b2852907dd865c80074a30b1629aaa041d1812c90610b679084908690611637565b6000546101009004600160a060020a031681565b6000546101009004600160a060020a0316331490565b600154600160a060020a0316331490565b6000610c668235611748565b9392505050565b6000601f82018313610c7e57600080fd5b8135610c91610c8c8261171e565b6116f8565b91508181835260208401935060208101905083856080840282011115610cb657600080fd5b60005b83811015610ce45781610ccc8882610e40565b84525060209092019160809190910190600101610cb9565b5050505092915050565b6000610c668251611754565b6000610c668235611759565b6000610c668235611772565b6000610c66823561177d565b600060408284031215610d3057600080fd5b610d3a60406116f8565b90506000610d488484610c5a565b8252506020610d5984848301610cfa565b60208301525092915050565b600060408284031215610d7757600080fd5b610d8160406116f8565b90506000610d488484610cfa565b600060608284031215610da157600080fd5b610dab60406116f8565b90506000610db98484610cfa565b8252506020610d5984848301610d1e565b600060808284031215610ddc57600080fd5b610de660406116f8565b90506000610df48484610d1e565b8252506040610d5984848301610d1e565b600060808284031215610e1757600080fd5b610e2160406116f8565b90506000610e2f8484610d65565b8252506040610d5984848301610d65565b600060808284031215610e5257600080fd5b610e5c60406116f8565b90506000610e6a8484610cfa565b8252506020610d5984848301610d8f565b600060808284031215610e8d57600080fd5b610e9760406116f8565b90506000610ea58484610cfa565b8252506020610d5984848301600060608284031215610ec357600080fd5b610ecd60606116f8565b90506000610edb8484610cfa565b8252506020610eec84848301610cfa565b6020830152506040610f008482850161119c565b60408301525092915050565b600060808284031215610f1e57600080fd5b610f2860406116f8565b90506000610f368484610d8f565b82525060608201356001604060020a03811115610f5257600080fd5b610d5984828501610c6d565b600060a08284031215610f7057600080fd5b610f7a60606116f8565b90506000610f888484610cfa565b8252506020610f9984848301610d65565b6020830152506060610f0084828501610d65565b60006101c08284031215610fc057600080fd5b610fca60e06116f8565b90506000610fd88484610cfa565b8252506020610fe984848301610c5a565b6020830152506040610ffd84828501610cfa565b604083015250606061101184828501610d12565b606083015250608061102584828501610f5e565b60808301525061012061103a84828501610e05565b60a0830152506101a08201356001604060020a0381111561105a57600080fd5b61106684828501610f0c565b60c08301525092915050565b6000610260828403121561108557600080fd5b6110906101406116f8565b9050600061109e8484610cfa565b82525060206110af84848301610cfa565b60208301525060406110c384828501610dca565b60408301525060c06110d784828501610cfa565b60608301525060e08201356001604060020a038111156110f657600080fd5b61110284828501610fad565b6080830152506101008201356001604060020a0381111561112257600080fd5b61112e84828501610fad565b60a08301525061012061114384828501610e05565b60c0830152506101a061115884828501610e7b565b60e08301525061022061116d84828501610cfa565b6101008301525061024061118384828501610cfa565b6101208301525092915050565b6000610c668251611759565b6000610c66823561176c565b6000602082840312156111ba57600080fd5b60006111c68484610c5a565b949350505050565b6000602082840312156111e057600080fd5b60006111c68484610cee565b6000602082840312156111fe57600080fd5b60006111c68484610d06565b6000806040838503121561121d57600080fd5b82356001604060020a0381111561123357600080fd5b61123f85828601611072565b92505060208301356001604060020a0381111561125b57600080fd5b61126785828601611072565b9150509250929050565b60006020828403121561128357600080fd5b60006111c68484611190565b61129881611748565b82525050565b60006112a982611744565b8084526020840193506112bb8361173e565b60005b828110156112eb576112d18683516113c9565b6112da8261173e565b6080969096019591506001016112be565b5093949350505050565b61129881611754565b61129881611759565b61129881611772565b6112988161178c565b61129881611797565b80516040830190611333848261128f565b50602082015161134660208501826112fe565b50505050565b8051604083019061133384826112fe565b8051606083019061136e84826112fe565b5060208201516113466020850182611322565b805160808301906113928482611322565b5060208201516113466040850182611322565b805160808301906113b6848261134c565b506020820151611346604085018261134c565b805160808301906113da84826112fe565b506020820151611346602085018261135d565b805160808301906113fe84826112fe565b50602082015161134660208501828051606083019061141d84826112fe565b50602082015161143060208501826112fe565b506040820151611346604085018261161a565b80516000906080840190611457858261135d565b506020830151848203606086015261146f828261129e565b95945050505050565b805160a083019061148984826112fe565b50602082015161149c602085018261134c565b506040820151611346606085018261134c565b80516000906101c08401906114c485826112fe565b5060208301516114d7602086018261128f565b5060408301516114ea60408601826112fe565b5060608301516114fd6060860182611310565b5060808301516115106080860182611478565b5060a08301516115246101208601826113a5565b5060c08301518482036101a086015261146f8282611443565b805160009061026084019061155285826112fe565b50602083015161156560208601826112fe565b5060408301516115786040860182611381565b50606083015161158b60c08601826112fe565b50608083015184820360e08601526115a382826114af565b91505060a08301518482036101008601526115be82826114af565b91505060c08301516115d46101208601826113a5565b5060e08301516115e86101a08601826113ed565b506101008301516115fd6102208601826112fe565b506101208301516116126102408601826112fe565b509392505050565b6112988161176c565b60208101611631828461128f565b92915050565b60408101611645828561128f565b610c66602083018461128f565b60608101611660828661128f565b61166d60208301856112fe565b6111c66040830184611319565b6020810161163182846112f5565b6020810161163182846112fe565b606081016116a482866112fe565b6116b160208301856112fe565b6111c6604083018461128f565b602081016116318284611307565b604081016116da8285611307565b610c666020830184611307565b60208082528101610c66818461153d565b6040518181016001604060020a038111828210171561171657600080fd5b604052919050565b60006001604060020a0382111561173457600080fd5b5060209081020190565b60200190565b5190565b600160a060020a031690565b151590565b90565b60006002821061176857fe5b5090565b60ff1690565b600061163182611748565b60006002821061176857600080fd5b60006116318261175c565b6000611631826117595600a265627a7a723058200adeb015b2f124efffac0e3c1c5f64061ab4c1a1d9184d807d045a79f3aef89f6c6578706572696d656e74616cf50037",
  "sourceMap": "656:1935:40:-;;;1216:62;8:9:-1;5:2;;;30:1;27;20:12;5:2;1216:62:40;;;;;;;;;;;;;;;;;;;;;;1254:8;;-1:-1:-1;;;;;673:22:51;;;;665:31;;;;;;-1:-1:-1;;;;;714:25:51;;734:4;714:25;;706:34;;;;;;-1:-1:-1;1097:8:63;:20;;-1:-1:-1;;;;;;1097:20:63;;-1:-1:-1;;;;;1097:20:63;;;;;;;;;;-1:-1:-1;1127:20:63;;-1:-1:-1;;;;;;1127:20:63;;;;;;-1:-1:-1;656:1935:40;;5:122:-1;;83:39;114:6;108:13;83:39;;;74:48;68:59;-1:-1;;;68:59;134:263;;249:2;237:9;228:7;224:23;220:32;217:2;;;265:1;262;255:12;217:2;300:1;317:64;373:7;353:9;317:64;;;307:74;211:186;-1:-1;;;;211:186;404:128;-1:-1;;;;;473:54;;456:76;;656:1935:40;;;;;;",
  "deployedSourceMap": "656:1935:40:-;;;;;;;;;-1:-1:-1;;;656:1935:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1089:430:35;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1089:430:35;;;;;;;;;;;1188:357:92;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1188:357:92;;;;;;;;;1441:425:75;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1441:425:75;;;;413:35;;8:9:-1;5:2;;;30:1;27;20:12;5:2;413:35:75;;;;;;;;;;;;;;;;;;;;668:28:92;;8:9:-1;5:2;;;30:1;27;20:12;5:2;668:28:92;;;;;;;;;;;;524:36:35;;8:9:-1;5:2;;;30:1;27;20:12;5:2;524:36:35;;;;1382:100:63;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1382:100:63;;;;;;;;;;;;555:23;;8:9:-1;5:2;;;30:1;27;20:12;5:2;555:23:63;;;;1060:414:19;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1060:414:19;;;;;;;;;1061:399:74;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1061:399:74;;;;;;;;;516:32;;8:9:-1;5:2;;;30:1;27;20:12;5:2;516:32:74;;;;506:34:19;;8:9:-1;5:2;;;30:1;27;20:12;5:2;506:34:19;;;;1083:314:75;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1083:314:75;;;;1678:911:40;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1678:911:40;;;;;;;;;1597:368:63;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1597:368:63;;;;;;;;;2080;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2080:368:63;;;;;;;;;526:23;;8:9:-1;5:2;;;30:1;27;20:12;5:2;526:23:63;;;;1089:430:35;1321:32;3453:12:63;:10;:12::i;:::-;3445:21;;;;;;;;1197:17:35;-1:-1:-1;;;;;450:22:51;;;;442:31;;;;;;1256:14:35;;1237:17;;-1:-1:-1;;;;;1256:14:35;;;;842:22:51;;;;838:41;;1356:14:35;;;-1:-1:-1;;;;;1380:34:35;;;-1:-1:-1;;;;;;1380:34:35;;;;;;1452:60;;1356:14;;;-1:-1:-1;1452:60:35;;;;1356:14;;1397:17;;1452:60;;;;;;;;;;838:41:51;483:1;;3476::63;1089:430:35;;:::o;1188:357:92:-;1385:24;3453:12:63;:10;:12::i;:::-;3445:21;;;;;;;;1283:12:92;-1:-1:-1;;;;;450:22:51;;;;442:31;;;;;;1332:9:92;;1318:12;;-1:-1:-1;;;;;1332:9:92;;;;842:22:51;;;;838:41;;1412:9:92;;;-1:-1:-1;;;;;1431:24:92;;;-1:-1:-1;;;;;;1431:24:92;;;;;;1493:45;;1412:9;;;-1:-1:-1;1493:45:92;;;;1412:9;;1443:12;;1493:45;;1441:425:75;1582:10;1566:12;:10;:12::i;:::-;-1:-1:-1;;;;;1566:26:75;;1558:35;;;;;;1676:23;;;;1675:24;1667:33;;;;;;1738:39;1766:10;1738:39;;;;;;;;;;;;;;;1848:10;1835:24;413:35;;;;;;:::o;668:28:92:-;;;-1:-1:-1;;;;;668:28:92;;:::o;524:36:35:-;;;-1:-1:-1;;;;;524:36:35;;:::o;1382:100:63:-;1437:7;1467:8;;;;-1:-1:-1;;;;;1467:8:63;;1382:100::o;555:23::-;;;-1:-1:-1;;;;;555:23:63;;:::o;1060:414:19:-;1284:30;3453:12:63;:10;:12::i;:::-;3445:21;;;;;;;;1165:16:19;-1:-1:-1;;;;;450:22:51;;;;442:31;;;;;;1222:13:19;;1204:16;;-1:-1:-1;;;;;1222:13:19;;;;842:22:51;;;;838:41;;1317:13:19;;;-1:-1:-1;;;;;1340:32:19;;;-1:-1:-1;;;;;;1340:32:19;;;;;;1410:57;;1317:13;;;-1:-1:-1;1410:57:19;;;;1317:13;;1356:16;;1410:57;;1061:399:74;1278:28;3453:12:63;:10;:12::i;:::-;3445:21;;;;;;;;1163:15:74;-1:-1:-1;;;;;450:22:51;;;;442:31;;;;;;1218:12:74;;1201:15;;-1:-1:-1;;;;;1218:12:74;;;;842:22:51;;;;838:41;;1309:12:74;;;-1:-1:-1;;;;;1331:30:74;;;-1:-1:-1;;;;;;1331:30:74;;;;;;1399:54;;1309:12;;;-1:-1:-1;1399:54:74;;;;1309:12;;1346:15;;1399:54;;516:32;;;-1:-1:-1;;;;;516:32:74;;:::o;506:34:19:-;;;-1:-1:-1;;;;;506:34:19;;:::o;1083:314:75:-;1224:10;1208:12;:10;:12::i;:::-;-1:-1:-1;;;;;1208:26:75;;1200:35;;;;;;1282:23;:30;;-1:-1:-1;;1282:30:75;1308:4;1282:30;;;1350:40;;;;;;1379:10;;1350:40;;;;;;;;;;1083:314::o;1678:911:40:-;574:13:20;;;;;;;;;-1:-1:-1;;;;;574:13:20;-1:-1:-1;;;;;574:37:20;;:39;;;;;-1:-1:-1;;;574:39:20;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;574:39:20;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;574:39:20;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;574:39:20;;;;;;;;;566:48;;;;;;;;2141:9:92;;;:35;;-1:-1:-1;;;;;2141:35:92;;1836:6:40;;-1:-1:-1;;;;;2141:9:92;;;;:28;;:35;;1836:6:40;;2141:35:92;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2141:35:92;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2141:35:92;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;2141:35:92;;;;;;;;;2133:44;;;;;;;;2141:9;;;:35;;-1:-1:-1;;;;;2141:35:92;;1864:6:40;;-1:-1:-1;;;;;2141:9:92;;;;:28;;:35;;1864:6:40;;2141:35:92;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2141:35:92;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2141:35:92;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;2141:35:92;;;;;;;;;2133:44;;;;;;;;1972:11:40;;;;;:16;1952:11;;;;:16;:36;;;;:80;;-1:-1:-1;2020:12:40;;2004;;:28;1952:80;1931:111;;;;;;;;2093:13;;;;;;;;;-1:-1:-1;;;;;2093:13:40;-1:-1:-1;;;;;2093:36:40;;:38;;;;;-1:-1:-1;;;2093:38:40;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2093:38:40;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;2187:14:40;;2225:11;;;;:16;2187:55;;-1:-1:-1;;;;;2187:55:40;;-1:-1:-1;;;;;2187:14:40;;;;-1:-1:-1;2187:37:40;;-1:-1:-1;2187:55:40;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2187:55:40;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;2252:14:40;;2290:11;;;;:16;2252:55;;-1:-1:-1;;;;;2252:55:40;;-1:-1:-1;;;;;2252:14:40;;;;-1:-1:-1;2252:37:40;;-1:-1:-1;2252:55:40;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2252:55:40;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;2351:12:40;;2393:13;;:34;;;-1:-1:-1;;;;;2393:34:40;;;;-1:-1:-1;;;;;2351:12:40;;;;-1:-1:-1;2351:29:40;;-1:-1:-1;2381:10:40;;2393:13;;;;:32;;:34;;;;;;;;;;;;;;;2351:12;2393:13;:34;;;5:2:-1;;;;30:1;27;20:12;5:2;2393:34:40;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2393:34:40;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;2393:34:40;;;;;;;;;2429:1;2351:80;;;;;-1:-1:-1;;;2351:80:40;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2351:80:40;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;;2526:11:40;;;;;:16;2544:11;;;;:16;2469:113;;;;-1:-1:-1;2469:113:40;;2526:16;2544;2562:10;;2469:113;;;;;;;;;;2187:1:92;624::20;1678:911:40;;:::o;1597:368:63:-;1794:19;3453:12;:10;:12::i;:::-;3445:21;;;;;;;;1692:11;-1:-1:-1;;;;;673:22:51;;;;665:31;;;;;;-1:-1:-1;;;;;714:25:51;;734:4;714:25;;706:34;;;;;;1738:8:63;;-1:-1:-1;;;;;1723:23:63;;;1738:8;;;;;1723:23;1719:240;;1816:8;;;-1:-1:-1;;;;;1838:22:63;;;1816:8;1838:22;;;-1:-1:-1;;;;;;1838:22:63;;;;;;1906:42;;1816:8;;;;;;-1:-1:-1;1906:42:63;;;;1816:8;;1849:11;;1906:42;;;;;;;;;;1719:240;3476:1;1597:368;;:::o;2080:::-;2277:19;3611:12;:10;:12::i;:::-;3603:21;;;;;;;;2175:11;-1:-1:-1;;;;;673:22:51;;;;665:31;;;;;;-1:-1:-1;;;;;714:25:51;;734:4;714:25;;706:34;;;;;;2221:8:63;;-1:-1:-1;;;;;2206:23:63;;;2221:8;;2206:23;2202:240;;2299:8;;;-1:-1:-1;;;;;2321:22:63;;;-1:-1:-1;;;;;;2321:22:63;;;;;;2389:42;;2299:8;;;-1:-1:-1;2389:42:63;;;;2299:8;;2332:11;;2389:42;;526:23;;;;;;-1:-1:-1;;;;;526:23:63;;:::o;2577:113::-;2634:4;2675:8;;;;-1:-1:-1;;;;;2675:8:63;2661:10;:22;;2577:113::o;2819:::-;2917:8;;-1:-1:-1;;;;;2917:8:63;2903:10;:22;;2819:113::o;5:118:-1:-;;72:46;110:6;97:20;72:46;;;63:55;57:66;-1:-1;;;57:66;175:780;;308:4;296:17;;292:27;-1:-1;282:2;;333:1;330;323:12;282:2;370:6;357:20;392:103;407:87;487:6;407:87;;;392:103;;;383:112;;512:5;537:6;530:5;523:21;567:4;559:6;555:17;545:27;;589:4;584:3;580:14;573:21;;642:6;689:3;681:4;673:6;669:17;664:3;660:27;657:36;654:2;;;706:1;703;696:12;654:2;731:1;716:233;741:6;738:1;735:13;716:233;;;799:3;821:64;881:3;869:10;821:64;;;809:77;;-1:-1;909:4;900:14;;;;937:4;928:14;;;;;763:1;756:9;716:233;;;720:14;275:680;;;;;;;;963:116;;1038:36;1066:6;1060:13;1038:36;;1086:118;;1153:46;1191:6;1178:20;1153:46;;1211:162;;1300:68;1360:6;1347:20;1300:68;;1889:156;;1975:65;2032:6;2019:20;1975:65;;2214:460;;2326:4;2314:9;2309:3;2305:19;2301:30;2298:2;;;2344:1;2341;2334:12;2298:2;2362:20;2377:4;2362:20;;;2353:29;-1:-1;2430:1;2461:49;2506:3;2486:9;2461:49;;;2437:74;;-1:-1;2570:2;2603:49;2648:3;2624:22;;;2603:49;;;2596:4;2589:5;2585:16;2578:75;2532:132;2292:382;;;;;2731:482;;2856:4;2844:9;2839:3;2835:19;2831:30;2828:2;;;2874:1;2871;2864:12;2828:2;2892:20;2907:4;2892:20;;;2883:29;-1:-1;2965:1;2996:48;3040:3;3020:9;2996:48;;3257:490;;3367:4;3355:9;3350:3;3346:19;3342:30;3339:2;;;3385:1;3382;3375:12;3339:2;3403:20;3418:4;3403:20;;;3394:29;-1:-1;3475:1;3506:48;3550:3;3530:9;3506:48;;;3482:73;;-1:-1;3620:2;3653:72;3721:3;3697:22;;;3653:72;;3808:536;;3937:4;3925:9;3920:3;3916:19;3912:30;3909:2;;;3955:1;3952;3945:12;3909:2;3973:20;3988:4;3973:20;;;3964:29;-1:-1;4047:1;4078:72;4146:3;4126:9;4078:72;;;4054:97;;-1:-1;4217:2;4250:72;4318:3;4294:22;;;4250:72;;4418:575;;4560:4;4548:9;4543:3;4539:19;4535:30;4532:2;;;4578:1;4575;4568:12;4532:2;4596:20;4611:4;4596:20;;;4587:29;-1:-1;4670:1;4701:85;4782:3;4762:9;4701:85;;;4677:110;;-1:-1;4853:2;4886:85;4967:3;4943:22;;;4886:85;;5674:495;;5790:4;5778:9;5773:3;5769:19;5765:30;5762:2;;;5808:1;5805;5798:12;5762:2;5826:20;5841:4;5826:20;;;5817:29;-1:-1;5900:1;5931:49;5976:3;5956:9;5931:49;;;5907:74;;-1:-1;6044:2;6077:70;6143:3;6119:22;;;6077:70;;6209:489;;6317:4;6305:9;6300:3;6296:19;6292:30;6289:2;;;6335:1;6332;6325:12;6289:2;6353:20;6368:4;6353:20;;;6344:29;-1:-1;6423:1;6454:49;6499:3;6479:9;6454:49;;;6430:74;;-1:-1;6570:2;6603:73;6672:3;6648:22;;;6743:598;6856:4;6844:9;6839:3;6835:19;6831:30;6828:2;;;6874:1;6871;6864:12;6828:2;6892:20;6907:4;6892:20;;;6883:29;-1:-1;6959:1;6990:49;7035:3;7015:9;6990:49;;;6966:74;;-1:-1;7098:2;7131:49;7176:3;7152:22;;;7131:49;;;7124:4;7117:5;7113:16;7106:75;7061:131;7239:2;7272:47;7315:3;7306:6;7295:9;7291:22;7272:47;;;7265:4;7258:5;7254:16;7247:73;7202:129;6822:519;;;;;7407:644;;7541:4;7529:9;7524:3;7520:19;7516:30;7513:2;;;7559:1;7556;7549:12;7513:2;7577:20;7592:4;7577:20;;;7568:29;-1:-1;7649:1;7680:70;7746:3;7726:9;7680:70;;;7656:95;;-1:-1;7841:2;7826:18;;7813:32;-1:-1;;;;;7854:30;;7851:2;;;7897:1;7894;7887:12;7851:2;7932:97;8025:3;8016:6;8005:9;8001:22;7932:97;;8623:689;;8737:4;8725:9;8720:3;8716:19;8712:30;8709:2;;;8755:1;8752;8745:12;8709:2;8773:20;8788:4;8773:20;;;8764:29;-1:-1;8845:1;8876:48;8920:3;8900:9;8876:48;;;8852:73;;-1:-1;8988:2;9021:84;9101:3;9077:22;;;9021:84;;;9014:4;9007:5;9003:16;8996:110;8946:171;9172:2;9205:85;9286:3;9277:6;9266:9;9262:22;9205:85;;9357:1444;;9471:5;9459:9;9454:3;9450:19;9446:31;9443:2;;;9490:1;9487;9480:12;9443:2;9508:20;9523:4;9508:20;;;9499:29;-1:-1;9579:1;9610:49;9655:3;9635:9;9610:49;;;9586:74;;-1:-1;9723:2;9756:49;9801:3;9777:22;;;9756:49;;;9749:4;9742:5;9738:16;9731:75;9681:136;9876:2;9909:49;9954:3;9945:6;9934:9;9930:22;9909:49;;;9902:4;9895:5;9891:16;9884:75;9827:143;10029:2;10062:68;10126:3;10117:6;10106:9;10102:22;10062:68;;;10055:4;10048:5;10044:16;10037:94;9980:162;10193:3;10227:74;10297:3;10288:6;10277:9;10273:22;10227:74;;;10220:4;10213:5;10209:16;10202:100;10152:161;10367:3;10401:102;10499:3;10490:6;10479:9;10475:22;10401:102;;;10394:4;10387:5;10383:16;10376:128;10323:192;10593:3;10582:9;10578:19;10565:33;-1:-1;;;;;10610:6;10607:30;10604:2;;;10650:1;10647;10640:12;10604:2;10685:94;10775:3;10766:6;10755:9;10751:22;10685:94;;;10678:4;10671:5;10667:16;10660:120;10525:266;9437:1364;;;;;10841:1986;;10954:5;10942:9;10937:3;10933:19;10929:31;10926:2;;;10973:1;10970;10963:12;10926:2;10991:21;11006:5;10991:21;;;10982:30;-1:-1;11063:1;11094:49;11139:3;11119:9;11094:49;;;11070:74;;-1:-1;11207:2;11240:48;11284:3;11260:22;;;11240:48;;;11233:4;11226:5;11222:16;11215:74;11165:135;11356:2;11389:89;11474:3;11465:6;11454:9;11450:22;11389:89;;;11382:4;11375:5;11371:16;11364:115;11310:180;11540:3;11574:48;11618:3;11609:6;11598:9;11594:22;11574:48;;;11567:4;11560:5;11556:16;11549:74;11500:134;11713:3;11702:9;11698:19;11685:33;-1:-1;;;;;11730:6;11727:30;11724:2;;;11770:1;11767;11760:12;11724:2;11805:74;11875:3;11866:6;11855:9;11851:22;11805:74;;;11798:4;11791:5;11787:16;11780:100;11644:247;11971:3;11960:9;11956:19;11943:33;-1:-1;;;;;11988:6;11985:30;11982:2;;;12028:1;12025;12018:12;11982:2;12063:74;12133:3;12124:6;12113:9;12109:22;12063:74;;;12056:4;12049:5;12045:16;12038:100;11901:248;12204:3;12238:98;12332:3;12323:6;12312:9;12308:22;12238:98;;;12231:4;12224:5;12220:16;12213:124;12159:189;12398:3;12432:68;12496:3;12487:6;12476:9;12472:22;12432:68;;;12425:4;12418:5;12414:16;12407:94;12358:154;12569:3;12604:49;12649:3;12640:6;12629:9;12625:22;12604:49;;;12596:5;12589;12585:17;12578:76;12522:143;12721:3;12756:49;12801:3;12792:6;12781:9;12777:22;12756:49;;;12748:5;12741;12737:17;12730:76;12675:142;10920:1907;;;;;13497:122;;13575:39;13606:6;13600:13;13575:39;;13626:114;;13691:44;13727:6;13714:20;13691:44;;13747:241;;13851:2;13839:9;13830:7;13826:23;13822:32;13819:2;;;13867:1;13864;13857:12;13819:2;13902:1;13919:53;13964:7;13944:9;13919:53;;;13909:63;13813:175;-1:-1;;;;13813:175;13995:257;;14107:2;14095:9;14086:7;14082:23;14078:32;14075:2;;;14123:1;14120;14113:12;14075:2;14158:1;14175:61;14228:7;14208:9;14175:61;;14259:285;;14385:2;14373:9;14364:7;14360:23;14356:32;14353:2;;;14401:1;14398;14391:12;14353:2;14436:1;14453:75;14520:7;14500:9;14453:75;;15429:634;;;15598:2;15586:9;15577:7;15573:23;15569:32;15566:2;;;15614:1;15611;15604:12;15566:2;15649:31;;-1:-1;;;;;15689:30;;15686:2;;;15732:1;15729;15722:12;15686:2;15752:77;15821:7;15812:6;15801:9;15797:22;15752:77;;;15742:87;;15628:207;15894:2;15883:9;15879:18;15866:32;-1:-1;;;;;15910:6;15907:30;15904:2;;;15950:1;15947;15940:12;15904:2;15970:77;16039:7;16030:6;16019:9;16015:22;15970:77;;;15960:87;;15845:208;15560:503;;;;;;16070:263;;16185:2;16173:9;16164:7;16160:23;16156:32;16153:2;;;16201:1;16198;16191:12;16153:2;16236:1;16253:64;16309:7;16289:9;16253:64;;16340:110;16413:31;16438:5;16413:31;;;16408:3;16401:44;16395:55;;;16542:767;;16727:77;16798:5;16727:77;;;16822:6;16817:3;16810:19;16846:4;16841:3;16837:14;16830:21;;16891:79;16964:5;16891:79;;;16991:1;16976:311;17001:6;16998:1;16995:13;16976:311;;;17041:111;17148:3;17139:6;17133:13;17041:111;;;17169:83;17245:6;17169:83;;;17275:4;17266:14;;;;;17159:93;-1:-1;17023:1;17016:9;16976:311;;;-1:-1;17300:3;;16706:603;-1:-1;;;;16706:603;17317:101;17384:28;17406:5;17384:28;;17425:110;17498:31;17523:5;17498:31;;17542:160;17637:59;17690:5;17637:59;;18212:150;18302:54;18350:5;18302:54;;18483:132;18564:45;18603:5;18564:45;;18697:488;18897:22;;18830:4;18821:14;;;18931:61;18825:3;18897:22;18931:61;;;18850:154;19078:4;19071:5;19067:16;19061:23;19096:62;19152:4;19147:3;19143:14;19130:11;19096:62;;;19014:156;18803:382;;;;19289:521;19520:22;;19448:4;19439:14;;;19554:59;19443:3;19520:22;19554:59;;19888:542;20088:22;;20017:4;20008:14;;;20122:59;20012:3;20088:22;20122:59;;;20037:156;20273:4;20266:5;20262:16;20256:23;20291:112;20397:4;20392:3;20388:14;20375:11;20291:112;;20542:635;20782:22;;20709:4;20700:14;;;20816:111;20704:3;20782:22;20816:111;;;20729:210;21020:4;21013:5;21009:16;21003:23;21038:112;21144:4;21139:3;21135:14;21122:11;21038:112;;21315:713;21581:22;;21508:4;21499:14;;;21615:137;21503:3;21581:22;21615:137;;;21528:236;21845:4;21838:5;21834:16;21828:23;21863:138;21995:4;21990:3;21986:14;21973:11;21863:138;;22933:552;23147:22;;23074:4;23065:14;;;23181:61;23069:3;23147:22;23181:61;;;23094:160;23332:4;23325:5;23321:16;23315:23;23350:108;23452:4;23447:3;23443:14;23430:11;23350:108;;23555:541;23749:22;;23680:4;23671:14;;;23783:61;23675:3;23749:22;23783:61;;;23700:156;23937:4;23930:5;23926:16;23920:23;23955:114;24063:4;24058:3;24054:14;24041:11;24377:22;;24311:4;24302:14;;;24411:61;24306:3;24377:22;24411:61;;;24331:153;24557:4;24550:5;24546:16;24540:23;24575:62;24631:4;24626:3;24622:14;24609:11;24575:62;;;24494:155;24722:4;24715:5;24711:16;24705:23;24740:58;24792:4;24787:3;24783:14;24770:11;24740:58;;24947:747;25203:22;;24947:747;;25132:4;25123:14;;;25237:107;25127:3;25203:22;25237:107;;;25152:204;25433:4;25426:5;25422:16;25416:23;25484:3;25478:4;25474:14;25467:4;25462:3;25458:14;25451:38;25504:152;25651:4;25638:11;25504:152;;;25496:160;25105:589;-1:-1;;;;;25105:589;26379:821;26587:22;;26516:4;26507:14;;;26621:59;26511:3;26587:22;26621:59;;;26536:156;26770:4;26763:5;26759:16;26753:23;26788:136;26918:4;26913:3;26909:14;26896:11;26788:136;;;26702:234;27017:4;27010:5;27006:16;27000:23;27035:138;27167:4;27162:3;27158:14;27145:11;27035:138;;27280:1702;27496:22;;27280:1702;;27425:5;27416:15;;;27530:61;27420:3;27496:22;27530:61;;;27446:157;27681:4;27674:5;27670:16;27664:23;27699:62;27755:4;27750:3;27746:14;27733:11;27699:62;;;27613:160;27858:4;27851:5;27847:16;27841:23;27876:62;27932:4;27927:3;27923:14;27910:11;27876:62;;;27783:167;28035:4;28028:5;28024:16;28018:23;28053:79;28126:4;28121:3;28117:14;28104:11;28053:79;;;27960:184;28221:4;28214:5;28210:16;28204:23;28239:116;28349:4;28344:3;28340:14;28327:11;28239:116;;;28154:213;28447:4;28440:5;28436:16;28430:23;28465:173;28631:5;28626:3;28622:15;28609:11;28465:173;;;28377:273;28726:4;28719:5;28715:16;28709:23;28778:3;28772:4;28768:14;28760:5;28755:3;28751:15;28744:39;28798:146;28939:4;28926:11;28798:146;;29052:2309;29262:22;;29052:2309;;29191:5;29182:15;;;29296:61;29186:3;29262:22;29296:61;;;29212:157;29447:4;29440:5;29436:16;29430:23;29465:60;29519:4;29514:3;29510:14;29497:11;29465:60;;;29379:158;29619:4;29612:5;29608:16;29602:23;29637:146;29777:4;29772:3;29768:14;29755:11;29637:146;;;29547:248;29871:4;29864:5;29860:16;29854:23;29889:60;29943:4;29938:3;29934:14;29921:11;29889:60;;;29805:156;30038:4;30031:5;30027:16;30021:23;30089:3;30083:4;30079:14;30072:4;30067:3;30063:14;30056:38;30109:106;30210:4;30197:11;30109:106;;;30101:114;;29971:256;30305:4;30298:5;30294:16;30288:23;30357:3;30351:4;30347:14;30339:5;30334:3;30330:15;30323:39;30377:106;30478:4;30465:11;30377:106;;;30369:114;;30237:258;30576:4;30569:5;30565:16;30559:23;30594:165;30752:5;30747:3;30743:15;30730:11;30594:165;;;30505:266;30847:4;30840:5;30836:16;30830:23;30865:105;30963:5;30958:3;30954:15;30941:11;30865:105;;;30781:201;31065:5;31058;31054:17;31048:24;31084:63;31140:5;31135:3;31131:15;31118:11;31084:63;;;30992:167;31241:5;31234;31230:17;31224:24;31260:63;31316:5;31311:3;31307:15;31294:11;31260:63;;;-1:-1;31352:4;29164:2197;-1:-1;;;29164:2197;32109:104;32178:29;32201:5;32178:29;;32220:193;32328:2;32313:18;;32342:61;32317:9;32376:6;32342:61;;;32299:114;;;;;32420:294;32556:2;32541:18;;32570:61;32545:9;32604:6;32570:61;;;32642:62;32700:2;32689:9;32685:18;32676:6;32642:62;;32721:411;32893:2;32878:18;;32907:61;32882:9;32941:6;32907:61;;;32979:62;33037:2;33026:9;33022:18;33013:6;32979:62;;;33052:70;33118:2;33107:9;33103:18;33094:6;33052:70;;33139:181;33241:2;33226:18;;33255:55;33230:9;33283:6;33255:55;;33327:193;33435:2;33420:18;;33449:61;33424:9;33483:6;33449:61;;33527:395;33691:2;33676:18;;33705:61;33680:9;33739:6;33705:61;;;33777:62;33835:2;33824:9;33820:18;33811:6;33777:62;;;33850;33908:2;33897:9;33893:18;33884:6;33850:62;;33929:237;34059:2;34044:18;;34073:83;34048:9;34129:6;34073:83;;34173:382;34353:2;34338:18;;34367:83;34342:9;34423:6;34367:83;;;34461:84;34541:2;34530:9;34526:18;34517:6;34461:84;;36467:337;36623:2;36637:47;;;36608:18;;36698:96;36608:18;36780:6;36698:96;;36811:256;36873:2;36867:9;36899:17;;;-1:-1;;;;;36959:34;;36995:22;;;36956:62;36953:2;;;37031:1;37028;37021:12;36953:2;37047;37040:22;36851:216;;-1:-1;36851:216;37074:281;;-1:-1;;;;;37248:6;37245:30;37242:2;;;37288:1;37285;37278:12;37242:2;-1:-1;37317:4;37305:17;;;37335:15;;37179:176;37364:144;37496:4;37484:17;;37465:43;37517:130;37630:12;;37614:33;37808:128;-1:-1;;;;;37877:54;;37860:76;37943:92;38016:13;38009:21;;37992:43;38042:79;38111:5;38094:27;38128:136;;38225:1;38215:12;;38205:2;;38231:9;38205:2;-1:-1;38254:5;38199:65;38442:88;38520:4;38509:16;;38492:38;38857:127;;38948:31;38973:5;38948:31;;39394:139;;39491:1;39481:12;;39471:2;;39507:1;39504;39497:12;40383:151;;40479:50;40523:5;40479:50;;40541:123;;40628:31;40653:5;40628:31;",
  "source": "/*\n * Hubii Nahmii\n *\n * Compliant with the Hubii Nahmii specification v0.12.\n *\n * Copyright (C) 2017-2018 Hubii AS\n */\n\npragma solidity ^0.4.25;\npragma experimental ABIEncoderV2;\n\nimport {Ownable} from \"./Ownable.sol\";\nimport {FraudChallengable} from \"./FraudChallengable.sol\";\nimport {ConfigurableOperational} from \"./ConfigurableOperational.sol\";\nimport {ValidatableV2} from \"./ValidatableV2.sol\";\nimport {SecurityBondable} from \"./SecurityBondable.sol\";\nimport {TradeTypesLib} from \"./TradeTypesLib.sol\";\n\n/**\n * @title FraudChallengeByDuplicateDriipNonceOfTrades\n * @notice Where driips are challenged wrt fraud by duplicate drip nonce of trades\n */\ncontract FraudChallengeByDuplicateDriipNonceOfTrades is Ownable, FraudChallengable, ConfigurableOperational, ValidatableV2,\nSecurityBondable {\n    //\n    // Events\n    // -----------------------------------------------------------------------------------------------------------------\n    event ChallengeByDuplicateDriipNonceOfTradesEvent(bytes32 tradeHash1,\n        bytes32 tradeHash2, address challenger);\n\n    //\n    // Constructor\n    // -----------------------------------------------------------------------------------------------------------------\n    constructor(address deployer) Ownable(deployer) public {\n    }\n\n    //\n    // Functions\n    // -----------------------------------------------------------------------------------------------------------------\n    /// @notice Submit two trade candidates in continuous Fraud Challenge (FC) to be tested for\n    /// duplicate driip nonce\n    /// @param trade1 First trade with duplicate driip nonce\n    /// @param trade2 Second trade with duplicate driip nonce\n    function challenge(\n        TradeTypesLib.Trade trade1,\n        TradeTypesLib.Trade trade2\n    )\n    public\n    onlyOperationalModeNormal\n    onlySealedTrade(trade1)\n    onlySealedTrade(trade2)\n    {\n        // Require existence of fraud signal\n        require(\n            trade1.seal.hash != trade2.seal.hash &&\n            trade1.nonce == trade2.nonce\n        );\n\n        // Toggle operational mode exit\n        configuration.setOperationalModeExit();\n\n        // Tag trades (hashes) as fraudulent\n        fraudChallenge.addFraudulentTradeHash(trade1.seal.hash);\n        fraudChallenge.addFraudulentTradeHash(trade2.seal.hash);\n\n        // Reward stake fraction\n        securityBond.rewardFractional(msg.sender, configuration.fraudStakeFraction(), 0);\n\n        // Emit event\n        emit ChallengeByDuplicateDriipNonceOfTradesEvent(\n            trade1.seal.hash, trade2.seal.hash, msg.sender\n        );\n    }\n}",
  "sourcePath": "/opt/buildagent/work/855e104608380c36/contracts/FraudChallengeByDuplicateDriipNonceOfTrades.sol",
  "ast": {
    "absolutePath": "/opt/buildagent/work/855e104608380c36/contracts/FraudChallengeByDuplicateDriipNonceOfTrades.sol",
    "exportedSymbols": {
      "FraudChallengeByDuplicateDriipNonceOfTrades": [
        16106
      ]
    },
    "id": 16107,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 15990,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".25"
        ],
        "nodeType": "PragmaDirective",
        "src": "122:24:40"
      },
      {
        "id": 15991,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "147:33:40"
      },
      {
        "absolutePath": "/opt/buildagent/work/855e104608380c36/contracts/Ownable.sol",
        "file": "./Ownable.sol",
        "id": 15993,
        "nodeType": "ImportDirective",
        "scope": 16107,
        "sourceUnit": 25427,
        "src": "182:38:40",
        "symbolAliases": [
          {
            "foreign": 15992,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/opt/buildagent/work/855e104608380c36/contracts/FraudChallengable.sol",
        "file": "./FraudChallengable.sol",
        "id": 15995,
        "nodeType": "ImportDirective",
        "scope": 16107,
        "sourceUnit": 15297,
        "src": "221:58:40",
        "symbolAliases": [
          {
            "foreign": 15994,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/opt/buildagent/work/855e104608380c36/contracts/ConfigurableOperational.sol",
        "file": "./ConfigurableOperational.sol",
        "id": 15997,
        "nodeType": "ImportDirective",
        "scope": 16107,
        "sourceUnit": 5806,
        "src": "280:70:40",
        "symbolAliases": [
          {
            "foreign": 15996,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/opt/buildagent/work/855e104608380c36/contracts/ValidatableV2.sol",
        "file": "./ValidatableV2.sol",
        "id": 15999,
        "nodeType": "ImportDirective",
        "scope": 16107,
        "sourceUnit": 36466,
        "src": "351:50:40",
        "symbolAliases": [
          {
            "foreign": 15998,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/opt/buildagent/work/855e104608380c36/contracts/SecurityBondable.sol",
        "file": "./SecurityBondable.sol",
        "id": 16001,
        "nodeType": "ImportDirective",
        "scope": 16107,
        "sourceUnit": 31548,
        "src": "402:56:40",
        "symbolAliases": [
          {
            "foreign": 16000,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/opt/buildagent/work/855e104608380c36/contracts/TradeTypesLib.sol",
        "file": "./TradeTypesLib.sol",
        "id": 16003,
        "nodeType": "ImportDirective",
        "scope": 16107,
        "sourceUnit": 34565,
        "src": "459:50:40",
        "symbolAliases": [
          {
            "foreign": 16002,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 16004,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 25426,
              "src": "712:7:40",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$25426",
                "typeString": "contract Ownable"
              }
            },
            "id": 16005,
            "nodeType": "InheritanceSpecifier",
            "src": "712:7:40"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 16006,
              "name": "FraudChallengable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 15296,
              "src": "721:17:40",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FraudChallengable_$15296",
                "typeString": "contract FraudChallengable"
              }
            },
            "id": 16007,
            "nodeType": "InheritanceSpecifier",
            "src": "721:17:40"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 16008,
              "name": "ConfigurableOperational",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5805,
              "src": "740:23:40",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ConfigurableOperational_$5805",
                "typeString": "contract ConfigurableOperational"
              }
            },
            "id": 16009,
            "nodeType": "InheritanceSpecifier",
            "src": "740:23:40"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 16010,
              "name": "ValidatableV2",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 36465,
              "src": "765:13:40",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ValidatableV2_$36465",
                "typeString": "contract ValidatableV2"
              }
            },
            "id": 16011,
            "nodeType": "InheritanceSpecifier",
            "src": "765:13:40"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 16012,
              "name": "SecurityBondable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 31547,
              "src": "780:16:40",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SecurityBondable_$31547",
                "typeString": "contract SecurityBondable"
              }
            },
            "id": 16013,
            "nodeType": "InheritanceSpecifier",
            "src": "780:16:40"
          }
        ],
        "contractDependencies": [
          5788,
          5805,
          15296,
          19393,
          25426,
          31547,
          31613,
          36465
        ],
        "contractKind": "contract",
        "documentation": "@title FraudChallengeByDuplicateDriipNonceOfTrades\n@notice Where driips are challenged wrt fraud by duplicate drip nonce of trades",
        "fullyImplemented": true,
        "id": 16106,
        "linearizedBaseContracts": [
          16106,
          31547,
          36465,
          5805,
          5788,
          15296,
          25426,
          31613,
          19393
        ],
        "name": "FraudChallengeByDuplicateDriipNonceOfTrades",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": null,
            "id": 16021,
            "name": "ChallengeByDuplicateDriipNonceOfTradesEvent",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 16020,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16015,
                  "indexed": false,
                  "name": "tradeHash1",
                  "nodeType": "VariableDeclaration",
                  "scope": 16021,
                  "src": "995:18:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 16014,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "995:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16017,
                  "indexed": false,
                  "name": "tradeHash2",
                  "nodeType": "VariableDeclaration",
                  "scope": 16021,
                  "src": "1023:18:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 16016,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1023:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16019,
                  "indexed": false,
                  "name": "challenger",
                  "nodeType": "VariableDeclaration",
                  "scope": 16021,
                  "src": "1043:18:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16018,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1043:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "994:68:40"
            },
            "src": "945:118:40"
          },
          {
            "body": {
              "id": 16029,
              "nodeType": "Block",
              "src": "1271:7:40",
              "statements": []
            },
            "documentation": null,
            "id": 16030,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 16026,
                    "name": "deployer",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 16023,
                    "src": "1254:8:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 16027,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 16025,
                  "name": "Ownable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 25426,
                  "src": "1246:7:40",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Ownable_$25426_$",
                    "typeString": "type(contract Ownable)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1246:17:40"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 16024,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16023,
                  "name": "deployer",
                  "nodeType": "VariableDeclaration",
                  "scope": 16030,
                  "src": "1228:16:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16022,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1228:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1227:18:40"
            },
            "payable": false,
            "returnParameters": {
              "id": 16028,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1271:0:40"
            },
            "scope": 16106,
            "src": "1216:62:40",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 16104,
              "nodeType": "Block",
              "src": "1876:713:40",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 16058,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "id": 16052,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 16046,
                                "name": "trade1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 16032,
                                "src": "1952:6:40",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Trade_$34547_memory_ptr",
                                  "typeString": "struct TradeTypesLib.Trade memory"
                                }
                              },
                              "id": 16047,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "seal",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 34542,
                              "src": "1952:11:40",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Seal_$19532_memory",
                                "typeString": "struct NahmiiTypesLib.Seal memory"
                              }
                            },
                            "id": 16048,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "hash",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 19529,
                            "src": "1952:16:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 16049,
                                "name": "trade2",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 16034,
                                "src": "1972:6:40",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Trade_$34547_memory_ptr",
                                  "typeString": "struct TradeTypesLib.Trade memory"
                                }
                              },
                              "id": 16050,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "seal",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 34542,
                              "src": "1972:11:40",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Seal_$19532_memory",
                                "typeString": "struct NahmiiTypesLib.Seal memory"
                              }
                            },
                            "id": 16051,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "hash",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 19529,
                            "src": "1972:16:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "1952:36:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 16057,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 16053,
                              "name": "trade1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16032,
                              "src": "2004:6:40",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$34547_memory_ptr",
                                "typeString": "struct TradeTypesLib.Trade memory"
                              }
                            },
                            "id": 16054,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "nonce",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 34528,
                            "src": "2004:12:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 16055,
                              "name": "trade2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16034,
                              "src": "2020:6:40",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$34547_memory_ptr",
                                "typeString": "struct TradeTypesLib.Trade memory"
                              }
                            },
                            "id": 16056,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "nonce",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 34528,
                            "src": "2020:12:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2004:28:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1952:80:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 16045,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        50297,
                        50298
                      ],
                      "referencedDeclaration": 50297,
                      "src": "1931:7:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 16059,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1931:111:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16060,
                  "nodeType": "ExpressionStatement",
                  "src": "1931:111:40"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 16061,
                        "name": "configuration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5741,
                        "src": "2093:13:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Configuration_$7172",
                          "typeString": "contract Configuration"
                        }
                      },
                      "id": 16063,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setOperationalModeExit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6102,
                      "src": "2093:36:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 16064,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2093:38:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16065,
                  "nodeType": "ExpressionStatement",
                  "src": "2093:38:40"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 16069,
                            "name": "trade1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16032,
                            "src": "2225:6:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$34547_memory_ptr",
                              "typeString": "struct TradeTypesLib.Trade memory"
                            }
                          },
                          "id": 16070,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "seal",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 34542,
                          "src": "2225:11:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Seal_$19532_memory",
                            "typeString": "struct NahmiiTypesLib.Seal memory"
                          }
                        },
                        "id": 16071,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "hash",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 19529,
                        "src": "2225:16:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 16066,
                        "name": "fraudChallenge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15249,
                        "src": "2187:14:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FraudChallenge_$15584",
                          "typeString": "contract FraudChallenge"
                        }
                      },
                      "id": 16068,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addFraudulentTradeHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15531,
                      "src": "2187:37:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 16072,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2187:55:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16073,
                  "nodeType": "ExpressionStatement",
                  "src": "2187:55:40"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 16077,
                            "name": "trade2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16034,
                            "src": "2290:6:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$34547_memory_ptr",
                              "typeString": "struct TradeTypesLib.Trade memory"
                            }
                          },
                          "id": 16078,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "seal",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 34542,
                          "src": "2290:11:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Seal_$19532_memory",
                            "typeString": "struct NahmiiTypesLib.Seal memory"
                          }
                        },
                        "id": 16079,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "hash",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 19529,
                        "src": "2290:16:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 16074,
                        "name": "fraudChallenge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15249,
                        "src": "2252:14:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FraudChallenge_$15584",
                          "typeString": "contract FraudChallenge"
                        }
                      },
                      "id": 16076,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addFraudulentTradeHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15531,
                      "src": "2252:37:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 16080,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2252:55:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16081,
                  "nodeType": "ExpressionStatement",
                  "src": "2252:55:40"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 16085,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50294,
                          "src": "2381:3:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 16086,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2381:10:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 16087,
                            "name": "configuration",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5741,
                            "src": "2393:13:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Configuration_$7172",
                              "typeString": "contract Configuration"
                            }
                          },
                          "id": 16088,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "fraudStakeFraction",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6944,
                          "src": "2393:32:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 16089,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2393:34:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 16090,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2429:1:40",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 16082,
                        "name": "securityBond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31500,
                        "src": "2351:12:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SecurityBond_$31490",
                          "typeString": "contract SecurityBond"
                        }
                      },
                      "id": 16084,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "rewardFractional",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30890,
                      "src": "2351:29:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256) external"
                      }
                    },
                    "id": 16091,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2351:80:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16092,
                  "nodeType": "ExpressionStatement",
                  "src": "2351:80:40"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 16094,
                            "name": "trade1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16032,
                            "src": "2526:6:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$34547_memory_ptr",
                              "typeString": "struct TradeTypesLib.Trade memory"
                            }
                          },
                          "id": 16095,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "seal",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 34542,
                          "src": "2526:11:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Seal_$19532_memory",
                            "typeString": "struct NahmiiTypesLib.Seal memory"
                          }
                        },
                        "id": 16096,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "hash",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 19529,
                        "src": "2526:16:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 16097,
                            "name": "trade2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16034,
                            "src": "2544:6:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$34547_memory_ptr",
                              "typeString": "struct TradeTypesLib.Trade memory"
                            }
                          },
                          "id": 16098,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "seal",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 34542,
                          "src": "2544:11:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Seal_$19532_memory",
                            "typeString": "struct NahmiiTypesLib.Seal memory"
                          }
                        },
                        "id": 16099,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "hash",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 19529,
                        "src": "2544:16:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 16100,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50294,
                          "src": "2562:3:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 16101,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2562:10:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 16093,
                      "name": "ChallengeByDuplicateDriipNonceOfTradesEvent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16021,
                      "src": "2469:43:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,bytes32,address)"
                      }
                    },
                    "id": 16102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2469:113:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16103,
                  "nodeType": "EmitStatement",
                  "src": "2464:118:40"
                }
              ]
            },
            "documentation": "@notice Submit two trade candidates in continuous Fraud Challenge (FC) to be tested for\n duplicate driip nonce\n @param trade1 First trade with duplicate driip nonce\n @param trade2 Second trade with duplicate driip nonce",
            "id": 16105,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 16037,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 16036,
                  "name": "onlyOperationalModeNormal",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5804,
                  "src": "1790:25:40",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1790:25:40"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 16039,
                    "name": "trade1",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 16032,
                    "src": "1836:6:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$34547_memory_ptr",
                      "typeString": "struct TradeTypesLib.Trade memory"
                    }
                  }
                ],
                "id": 16040,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 16038,
                  "name": "onlySealedTrade",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 36390,
                  "src": "1820:15:40",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_struct$_Trade_$34547_memory_ptr_$",
                    "typeString": "modifier (struct TradeTypesLib.Trade memory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1820:23:40"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 16042,
                    "name": "trade2",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 16034,
                    "src": "1864:6:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$34547_memory_ptr",
                      "typeString": "struct TradeTypesLib.Trade memory"
                    }
                  }
                ],
                "id": 16043,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 16041,
                  "name": "onlySealedTrade",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 36390,
                  "src": "1848:15:40",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_struct$_Trade_$34547_memory_ptr_$",
                    "typeString": "modifier (struct TradeTypesLib.Trade memory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1848:23:40"
              }
            ],
            "name": "challenge",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 16035,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16032,
                  "name": "trade1",
                  "nodeType": "VariableDeclaration",
                  "scope": 16105,
                  "src": "1706:26:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Trade_$34547_memory_ptr",
                    "typeString": "struct TradeTypesLib.Trade"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 16031,
                    "name": "TradeTypesLib.Trade",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 34547,
                    "src": "1706:19:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$34547_storage_ptr",
                      "typeString": "struct TradeTypesLib.Trade"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16034,
                  "name": "trade2",
                  "nodeType": "VariableDeclaration",
                  "scope": 16105,
                  "src": "1742:26:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Trade_$34547_memory_ptr",
                    "typeString": "struct TradeTypesLib.Trade"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 16033,
                    "name": "TradeTypesLib.Trade",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 34547,
                    "src": "1742:19:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$34547_storage_ptr",
                      "typeString": "struct TradeTypesLib.Trade"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1696:78:40"
            },
            "payable": false,
            "returnParameters": {
              "id": 16044,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1876:0:40"
            },
            "scope": 16106,
            "src": "1678:911:40",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 16107,
        "src": "656:1935:40"
      }
    ],
    "src": "122:2469:40"
  },
  "legacyAST": {
    "absolutePath": "/opt/buildagent/work/855e104608380c36/contracts/FraudChallengeByDuplicateDriipNonceOfTrades.sol",
    "exportedSymbols": {
      "FraudChallengeByDuplicateDriipNonceOfTrades": [
        16106
      ]
    },
    "id": 16107,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 15990,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".25"
        ],
        "nodeType": "PragmaDirective",
        "src": "122:24:40"
      },
      {
        "id": 15991,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "147:33:40"
      },
      {
        "absolutePath": "/opt/buildagent/work/855e104608380c36/contracts/Ownable.sol",
        "file": "./Ownable.sol",
        "id": 15993,
        "nodeType": "ImportDirective",
        "scope": 16107,
        "sourceUnit": 25427,
        "src": "182:38:40",
        "symbolAliases": [
          {
            "foreign": 15992,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/opt/buildagent/work/855e104608380c36/contracts/FraudChallengable.sol",
        "file": "./FraudChallengable.sol",
        "id": 15995,
        "nodeType": "ImportDirective",
        "scope": 16107,
        "sourceUnit": 15297,
        "src": "221:58:40",
        "symbolAliases": [
          {
            "foreign": 15994,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/opt/buildagent/work/855e104608380c36/contracts/ConfigurableOperational.sol",
        "file": "./ConfigurableOperational.sol",
        "id": 15997,
        "nodeType": "ImportDirective",
        "scope": 16107,
        "sourceUnit": 5806,
        "src": "280:70:40",
        "symbolAliases": [
          {
            "foreign": 15996,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/opt/buildagent/work/855e104608380c36/contracts/ValidatableV2.sol",
        "file": "./ValidatableV2.sol",
        "id": 15999,
        "nodeType": "ImportDirective",
        "scope": 16107,
        "sourceUnit": 36466,
        "src": "351:50:40",
        "symbolAliases": [
          {
            "foreign": 15998,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/opt/buildagent/work/855e104608380c36/contracts/SecurityBondable.sol",
        "file": "./SecurityBondable.sol",
        "id": 16001,
        "nodeType": "ImportDirective",
        "scope": 16107,
        "sourceUnit": 31548,
        "src": "402:56:40",
        "symbolAliases": [
          {
            "foreign": 16000,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/opt/buildagent/work/855e104608380c36/contracts/TradeTypesLib.sol",
        "file": "./TradeTypesLib.sol",
        "id": 16003,
        "nodeType": "ImportDirective",
        "scope": 16107,
        "sourceUnit": 34565,
        "src": "459:50:40",
        "symbolAliases": [
          {
            "foreign": 16002,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 16004,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 25426,
              "src": "712:7:40",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$25426",
                "typeString": "contract Ownable"
              }
            },
            "id": 16005,
            "nodeType": "InheritanceSpecifier",
            "src": "712:7:40"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 16006,
              "name": "FraudChallengable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 15296,
              "src": "721:17:40",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FraudChallengable_$15296",
                "typeString": "contract FraudChallengable"
              }
            },
            "id": 16007,
            "nodeType": "InheritanceSpecifier",
            "src": "721:17:40"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 16008,
              "name": "ConfigurableOperational",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5805,
              "src": "740:23:40",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ConfigurableOperational_$5805",
                "typeString": "contract ConfigurableOperational"
              }
            },
            "id": 16009,
            "nodeType": "InheritanceSpecifier",
            "src": "740:23:40"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 16010,
              "name": "ValidatableV2",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 36465,
              "src": "765:13:40",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ValidatableV2_$36465",
                "typeString": "contract ValidatableV2"
              }
            },
            "id": 16011,
            "nodeType": "InheritanceSpecifier",
            "src": "765:13:40"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 16012,
              "name": "SecurityBondable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 31547,
              "src": "780:16:40",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SecurityBondable_$31547",
                "typeString": "contract SecurityBondable"
              }
            },
            "id": 16013,
            "nodeType": "InheritanceSpecifier",
            "src": "780:16:40"
          }
        ],
        "contractDependencies": [
          5788,
          5805,
          15296,
          19393,
          25426,
          31547,
          31613,
          36465
        ],
        "contractKind": "contract",
        "documentation": "@title FraudChallengeByDuplicateDriipNonceOfTrades\n@notice Where driips are challenged wrt fraud by duplicate drip nonce of trades",
        "fullyImplemented": true,
        "id": 16106,
        "linearizedBaseContracts": [
          16106,
          31547,
          36465,
          5805,
          5788,
          15296,
          25426,
          31613,
          19393
        ],
        "name": "FraudChallengeByDuplicateDriipNonceOfTrades",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": null,
            "id": 16021,
            "name": "ChallengeByDuplicateDriipNonceOfTradesEvent",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 16020,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16015,
                  "indexed": false,
                  "name": "tradeHash1",
                  "nodeType": "VariableDeclaration",
                  "scope": 16021,
                  "src": "995:18:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 16014,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "995:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16017,
                  "indexed": false,
                  "name": "tradeHash2",
                  "nodeType": "VariableDeclaration",
                  "scope": 16021,
                  "src": "1023:18:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 16016,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1023:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16019,
                  "indexed": false,
                  "name": "challenger",
                  "nodeType": "VariableDeclaration",
                  "scope": 16021,
                  "src": "1043:18:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16018,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1043:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "994:68:40"
            },
            "src": "945:118:40"
          },
          {
            "body": {
              "id": 16029,
              "nodeType": "Block",
              "src": "1271:7:40",
              "statements": []
            },
            "documentation": null,
            "id": 16030,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 16026,
                    "name": "deployer",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 16023,
                    "src": "1254:8:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 16027,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 16025,
                  "name": "Ownable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 25426,
                  "src": "1246:7:40",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Ownable_$25426_$",
                    "typeString": "type(contract Ownable)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1246:17:40"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 16024,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16023,
                  "name": "deployer",
                  "nodeType": "VariableDeclaration",
                  "scope": 16030,
                  "src": "1228:16:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16022,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1228:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1227:18:40"
            },
            "payable": false,
            "returnParameters": {
              "id": 16028,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1271:0:40"
            },
            "scope": 16106,
            "src": "1216:62:40",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 16104,
              "nodeType": "Block",
              "src": "1876:713:40",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 16058,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "id": 16052,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 16046,
                                "name": "trade1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 16032,
                                "src": "1952:6:40",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Trade_$34547_memory_ptr",
                                  "typeString": "struct TradeTypesLib.Trade memory"
                                }
                              },
                              "id": 16047,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "seal",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 34542,
                              "src": "1952:11:40",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Seal_$19532_memory",
                                "typeString": "struct NahmiiTypesLib.Seal memory"
                              }
                            },
                            "id": 16048,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "hash",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 19529,
                            "src": "1952:16:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 16049,
                                "name": "trade2",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 16034,
                                "src": "1972:6:40",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Trade_$34547_memory_ptr",
                                  "typeString": "struct TradeTypesLib.Trade memory"
                                }
                              },
                              "id": 16050,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "seal",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 34542,
                              "src": "1972:11:40",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Seal_$19532_memory",
                                "typeString": "struct NahmiiTypesLib.Seal memory"
                              }
                            },
                            "id": 16051,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "hash",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 19529,
                            "src": "1972:16:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "1952:36:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 16057,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 16053,
                              "name": "trade1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16032,
                              "src": "2004:6:40",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$34547_memory_ptr",
                                "typeString": "struct TradeTypesLib.Trade memory"
                              }
                            },
                            "id": 16054,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "nonce",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 34528,
                            "src": "2004:12:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 16055,
                              "name": "trade2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16034,
                              "src": "2020:6:40",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$34547_memory_ptr",
                                "typeString": "struct TradeTypesLib.Trade memory"
                              }
                            },
                            "id": 16056,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "nonce",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 34528,
                            "src": "2020:12:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2004:28:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1952:80:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 16045,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        50297,
                        50298
                      ],
                      "referencedDeclaration": 50297,
                      "src": "1931:7:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 16059,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1931:111:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16060,
                  "nodeType": "ExpressionStatement",
                  "src": "1931:111:40"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 16061,
                        "name": "configuration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5741,
                        "src": "2093:13:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Configuration_$7172",
                          "typeString": "contract Configuration"
                        }
                      },
                      "id": 16063,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setOperationalModeExit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6102,
                      "src": "2093:36:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 16064,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2093:38:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16065,
                  "nodeType": "ExpressionStatement",
                  "src": "2093:38:40"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 16069,
                            "name": "trade1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16032,
                            "src": "2225:6:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$34547_memory_ptr",
                              "typeString": "struct TradeTypesLib.Trade memory"
                            }
                          },
                          "id": 16070,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "seal",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 34542,
                          "src": "2225:11:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Seal_$19532_memory",
                            "typeString": "struct NahmiiTypesLib.Seal memory"
                          }
                        },
                        "id": 16071,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "hash",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 19529,
                        "src": "2225:16:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 16066,
                        "name": "fraudChallenge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15249,
                        "src": "2187:14:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FraudChallenge_$15584",
                          "typeString": "contract FraudChallenge"
                        }
                      },
                      "id": 16068,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addFraudulentTradeHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15531,
                      "src": "2187:37:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 16072,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2187:55:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16073,
                  "nodeType": "ExpressionStatement",
                  "src": "2187:55:40"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 16077,
                            "name": "trade2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16034,
                            "src": "2290:6:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$34547_memory_ptr",
                              "typeString": "struct TradeTypesLib.Trade memory"
                            }
                          },
                          "id": 16078,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "seal",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 34542,
                          "src": "2290:11:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Seal_$19532_memory",
                            "typeString": "struct NahmiiTypesLib.Seal memory"
                          }
                        },
                        "id": 16079,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "hash",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 19529,
                        "src": "2290:16:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 16074,
                        "name": "fraudChallenge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15249,
                        "src": "2252:14:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FraudChallenge_$15584",
                          "typeString": "contract FraudChallenge"
                        }
                      },
                      "id": 16076,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addFraudulentTradeHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15531,
                      "src": "2252:37:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 16080,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2252:55:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16081,
                  "nodeType": "ExpressionStatement",
                  "src": "2252:55:40"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 16085,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50294,
                          "src": "2381:3:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 16086,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2381:10:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 16087,
                            "name": "configuration",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5741,
                            "src": "2393:13:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Configuration_$7172",
                              "typeString": "contract Configuration"
                            }
                          },
                          "id": 16088,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "fraudStakeFraction",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6944,
                          "src": "2393:32:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 16089,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2393:34:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 16090,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2429:1:40",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 16082,
                        "name": "securityBond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31500,
                        "src": "2351:12:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SecurityBond_$31490",
                          "typeString": "contract SecurityBond"
                        }
                      },
                      "id": 16084,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "rewardFractional",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30890,
                      "src": "2351:29:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256) external"
                      }
                    },
                    "id": 16091,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2351:80:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16092,
                  "nodeType": "ExpressionStatement",
                  "src": "2351:80:40"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 16094,
                            "name": "trade1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16032,
                            "src": "2526:6:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$34547_memory_ptr",
                              "typeString": "struct TradeTypesLib.Trade memory"
                            }
                          },
                          "id": 16095,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "seal",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 34542,
                          "src": "2526:11:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Seal_$19532_memory",
                            "typeString": "struct NahmiiTypesLib.Seal memory"
                          }
                        },
                        "id": 16096,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "hash",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 19529,
                        "src": "2526:16:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 16097,
                            "name": "trade2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16034,
                            "src": "2544:6:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$34547_memory_ptr",
                              "typeString": "struct TradeTypesLib.Trade memory"
                            }
                          },
                          "id": 16098,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "seal",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 34542,
                          "src": "2544:11:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Seal_$19532_memory",
                            "typeString": "struct NahmiiTypesLib.Seal memory"
                          }
                        },
                        "id": 16099,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "hash",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 19529,
                        "src": "2544:16:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 16100,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50294,
                          "src": "2562:3:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 16101,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2562:10:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 16093,
                      "name": "ChallengeByDuplicateDriipNonceOfTradesEvent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16021,
                      "src": "2469:43:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,bytes32,address)"
                      }
                    },
                    "id": 16102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2469:113:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16103,
                  "nodeType": "EmitStatement",
                  "src": "2464:118:40"
                }
              ]
            },
            "documentation": "@notice Submit two trade candidates in continuous Fraud Challenge (FC) to be tested for\n duplicate driip nonce\n @param trade1 First trade with duplicate driip nonce\n @param trade2 Second trade with duplicate driip nonce",
            "id": 16105,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 16037,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 16036,
                  "name": "onlyOperationalModeNormal",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5804,
                  "src": "1790:25:40",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1790:25:40"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 16039,
                    "name": "trade1",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 16032,
                    "src": "1836:6:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$34547_memory_ptr",
                      "typeString": "struct TradeTypesLib.Trade memory"
                    }
                  }
                ],
                "id": 16040,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 16038,
                  "name": "onlySealedTrade",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 36390,
                  "src": "1820:15:40",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_struct$_Trade_$34547_memory_ptr_$",
                    "typeString": "modifier (struct TradeTypesLib.Trade memory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1820:23:40"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 16042,
                    "name": "trade2",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 16034,
                    "src": "1864:6:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$34547_memory_ptr",
                      "typeString": "struct TradeTypesLib.Trade memory"
                    }
                  }
                ],
                "id": 16043,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 16041,
                  "name": "onlySealedTrade",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 36390,
                  "src": "1848:15:40",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_struct$_Trade_$34547_memory_ptr_$",
                    "typeString": "modifier (struct TradeTypesLib.Trade memory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1848:23:40"
              }
            ],
            "name": "challenge",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 16035,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16032,
                  "name": "trade1",
                  "nodeType": "VariableDeclaration",
                  "scope": 16105,
                  "src": "1706:26:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Trade_$34547_memory_ptr",
                    "typeString": "struct TradeTypesLib.Trade"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 16031,
                    "name": "TradeTypesLib.Trade",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 34547,
                    "src": "1706:19:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$34547_storage_ptr",
                      "typeString": "struct TradeTypesLib.Trade"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16034,
                  "name": "trade2",
                  "nodeType": "VariableDeclaration",
                  "scope": 16105,
                  "src": "1742:26:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Trade_$34547_memory_ptr",
                    "typeString": "struct TradeTypesLib.Trade"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 16033,
                    "name": "TradeTypesLib.Trade",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 34547,
                    "src": "1742:19:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$34547_storage_ptr",
                      "typeString": "struct TradeTypesLib.Trade"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1696:78:40"
            },
            "payable": false,
            "returnParameters": {
              "id": 16044,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1876:0:40"
            },
            "scope": 16106,
            "src": "1678:911:40",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 16107,
        "src": "656:1935:40"
      }
    ],
    "src": "122:2469:40"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.25+commit.59dbf8f1.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.2",
  "updatedAt": "2019-04-02T06:20:36.942Z"
}