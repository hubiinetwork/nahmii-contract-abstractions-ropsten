{
  "contractName": "MockedNullSettlementDisputeByTrade",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "_challengeByTradeCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "_reset",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "int256",
              "name": "amount",
              "type": "int256"
            },
            {
              "components": [
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "ct",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct MonetaryTypesLib.Currency",
                  "name": "intended",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "ct",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct MonetaryTypesLib.Currency",
                  "name": "conjugate",
                  "type": "tuple"
                }
              ],
              "internalType": "struct NahmiiTypesLib.IntendedConjugateCurrency",
              "name": "currencies",
              "type": "tuple"
            },
            {
              "internalType": "int256",
              "name": "rate",
              "type": "int256"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "wallet",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "rollingVolume",
                  "type": "uint256"
                },
                {
                  "internalType": "enum TradeTypesLib.LiquidityRole",
                  "name": "liquidityRole",
                  "type": "uint8"
                },
                {
                  "components": [
                    {
                      "internalType": "int256",
                      "name": "amount",
                      "type": "int256"
                    },
                    {
                      "components": [
                        {
                          "internalType": "bytes32",
                          "name": "wallet",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "operator",
                          "type": "bytes32"
                        }
                      ],
                      "internalType": "struct NahmiiTypesLib.WalletOperatorHashes",
                      "name": "hashes",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "int256",
                          "name": "current",
                          "type": "int256"
                        },
                        {
                          "internalType": "int256",
                          "name": "previous",
                          "type": "int256"
                        }
                      ],
                      "internalType": "struct NahmiiTypesLib.CurrentPreviousInt256",
                      "name": "residuals",
                      "type": "tuple"
                    }
                  ],
                  "internalType": "struct TradeTypesLib.TradeOrder",
                  "name": "order",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "components": [
                        {
                          "internalType": "int256",
                          "name": "current",
                          "type": "int256"
                        },
                        {
                          "internalType": "int256",
                          "name": "previous",
                          "type": "int256"
                        }
                      ],
                      "internalType": "struct NahmiiTypesLib.CurrentPreviousInt256",
                      "name": "intended",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "int256",
                          "name": "current",
                          "type": "int256"
                        },
                        {
                          "internalType": "int256",
                          "name": "previous",
                          "type": "int256"
                        }
                      ],
                      "internalType": "struct NahmiiTypesLib.CurrentPreviousInt256",
                      "name": "conjugate",
                      "type": "tuple"
                    }
                  ],
                  "internalType": "struct NahmiiTypesLib.IntendedConjugateCurrentPreviousInt256",
                  "name": "balances",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "components": [
                        {
                          "internalType": "int256",
                          "name": "amount",
                          "type": "int256"
                        },
                        {
                          "components": [
                            {
                              "internalType": "address",
                              "name": "ct",
                              "type": "address"
                            },
                            {
                              "internalType": "uint256",
                              "name": "id",
                              "type": "uint256"
                            }
                          ],
                          "internalType": "struct MonetaryTypesLib.Currency",
                          "name": "currency",
                          "type": "tuple"
                        }
                      ],
                      "internalType": "struct MonetaryTypesLib.Figure",
                      "name": "single",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "originId",
                          "type": "uint256"
                        },
                        {
                          "components": [
                            {
                              "internalType": "int256",
                              "name": "amount",
                              "type": "int256"
                            },
                            {
                              "components": [
                                {
                                  "internalType": "address",
                                  "name": "ct",
                                  "type": "address"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "id",
                                  "type": "uint256"
                                }
                              ],
                              "internalType": "struct MonetaryTypesLib.Currency",
                              "name": "currency",
                              "type": "tuple"
                            }
                          ],
                          "internalType": "struct MonetaryTypesLib.Figure",
                          "name": "figure",
                          "type": "tuple"
                        }
                      ],
                      "internalType": "struct NahmiiTypesLib.OriginFigure[]",
                      "name": "total",
                      "type": "tuple[]"
                    }
                  ],
                  "internalType": "struct NahmiiTypesLib.SingleFigureTotalOriginFigures",
                  "name": "fees",
                  "type": "tuple"
                }
              ],
              "internalType": "struct TradeTypesLib.TradeParty",
              "name": "buyer",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "wallet",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "rollingVolume",
                  "type": "uint256"
                },
                {
                  "internalType": "enum TradeTypesLib.LiquidityRole",
                  "name": "liquidityRole",
                  "type": "uint8"
                },
                {
                  "components": [
                    {
                      "internalType": "int256",
                      "name": "amount",
                      "type": "int256"
                    },
                    {
                      "components": [
                        {
                          "internalType": "bytes32",
                          "name": "wallet",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "operator",
                          "type": "bytes32"
                        }
                      ],
                      "internalType": "struct NahmiiTypesLib.WalletOperatorHashes",
                      "name": "hashes",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "int256",
                          "name": "current",
                          "type": "int256"
                        },
                        {
                          "internalType": "int256",
                          "name": "previous",
                          "type": "int256"
                        }
                      ],
                      "internalType": "struct NahmiiTypesLib.CurrentPreviousInt256",
                      "name": "residuals",
                      "type": "tuple"
                    }
                  ],
                  "internalType": "struct TradeTypesLib.TradeOrder",
                  "name": "order",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "components": [
                        {
                          "internalType": "int256",
                          "name": "current",
                          "type": "int256"
                        },
                        {
                          "internalType": "int256",
                          "name": "previous",
                          "type": "int256"
                        }
                      ],
                      "internalType": "struct NahmiiTypesLib.CurrentPreviousInt256",
                      "name": "intended",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "int256",
                          "name": "current",
                          "type": "int256"
                        },
                        {
                          "internalType": "int256",
                          "name": "previous",
                          "type": "int256"
                        }
                      ],
                      "internalType": "struct NahmiiTypesLib.CurrentPreviousInt256",
                      "name": "conjugate",
                      "type": "tuple"
                    }
                  ],
                  "internalType": "struct NahmiiTypesLib.IntendedConjugateCurrentPreviousInt256",
                  "name": "balances",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "components": [
                        {
                          "internalType": "int256",
                          "name": "amount",
                          "type": "int256"
                        },
                        {
                          "components": [
                            {
                              "internalType": "address",
                              "name": "ct",
                              "type": "address"
                            },
                            {
                              "internalType": "uint256",
                              "name": "id",
                              "type": "uint256"
                            }
                          ],
                          "internalType": "struct MonetaryTypesLib.Currency",
                          "name": "currency",
                          "type": "tuple"
                        }
                      ],
                      "internalType": "struct MonetaryTypesLib.Figure",
                      "name": "single",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "originId",
                          "type": "uint256"
                        },
                        {
                          "components": [
                            {
                              "internalType": "int256",
                              "name": "amount",
                              "type": "int256"
                            },
                            {
                              "components": [
                                {
                                  "internalType": "address",
                                  "name": "ct",
                                  "type": "address"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "id",
                                  "type": "uint256"
                                }
                              ],
                              "internalType": "struct MonetaryTypesLib.Currency",
                              "name": "currency",
                              "type": "tuple"
                            }
                          ],
                          "internalType": "struct MonetaryTypesLib.Figure",
                          "name": "figure",
                          "type": "tuple"
                        }
                      ],
                      "internalType": "struct NahmiiTypesLib.OriginFigure[]",
                      "name": "total",
                      "type": "tuple[]"
                    }
                  ],
                  "internalType": "struct NahmiiTypesLib.SingleFigureTotalOriginFigures",
                  "name": "fees",
                  "type": "tuple"
                }
              ],
              "internalType": "struct TradeTypesLib.TradeParty",
              "name": "seller",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "components": [
                    {
                      "internalType": "int256",
                      "name": "single",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "total",
                      "type": "int256"
                    }
                  ],
                  "internalType": "struct NahmiiTypesLib.SingleTotalInt256",
                  "name": "intended",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "int256",
                      "name": "single",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "total",
                      "type": "int256"
                    }
                  ],
                  "internalType": "struct NahmiiTypesLib.SingleTotalInt256",
                  "name": "conjugate",
                  "type": "tuple"
                }
              ],
              "internalType": "struct NahmiiTypesLib.IntendedConjugateSingleTotalInt256",
              "name": "transfers",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "hash",
                  "type": "bytes32"
                },
                {
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "r",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "s",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint8",
                      "name": "v",
                      "type": "uint8"
                    }
                  ],
                  "internalType": "struct NahmiiTypesLib.Signature",
                  "name": "signature",
                  "type": "tuple"
                }
              ],
              "internalType": "struct NahmiiTypesLib.Seal",
              "name": "seal",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "blockNumber",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "operatorId",
              "type": "uint256"
            }
          ],
          "internalType": "struct TradeTypesLib.Trade",
          "name": "",
          "type": "tuple"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "challengeByTrade",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b50610720806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80631592f0ab1461004657806332f4058914610050578063922726071461006e575b600080fd5b61004e610081565b005b610058610087565b6040516100659190610633565b60405180910390f35b61004e61007c3660046105c0565b61008d565b60008055565b60005481565b505060008054600101905550565b80356100a6816106a7565b92915050565b600082601f8301126100bd57600080fd5b81356100d06100cb82610667565b610641565b915081818352602084019350602081019050838560808402820111156100f557600080fd5b60005b83811015610123578161010b8882610265565b845250602090920191608091909101906001016100f8565b5050505092915050565b80356100a6816106be565b80356100a6816106c7565b60006040828403121561015557600080fd5b61015f6040610641565b9050600061016d848461009b565b825250602061017e8484830161012d565b60208301525092915050565b60006040828403121561019c57600080fd5b6101a66040610641565b9050600061016d848461012d565b6000606082840312156101c657600080fd5b6101d06040610641565b905060006101de848461012d565b825250602061017e84848301610143565b60006080828403121561020157600080fd5b61020b6040610641565b905060006102198484610143565b825250604061017e84848301610143565b60006080828403121561023c57600080fd5b6102466040610641565b90506000610254848461018a565b825250604061017e8484830161018a565b60006080828403121561027757600080fd5b6102816040610641565b9050600061028f848461012d565b825250602061017e848483016101b4565b6000608082840312156102b257600080fd5b6102bc6040610641565b905060006102ca848461012d565b825250602061017e848483016000606082840312156102e857600080fd5b6102f26060610641565b90506000610300848461012d565b82525060206103118484830161012d565b6020830152506040610325848285016105b5565b60408301525092915050565b60006080828403121561034357600080fd5b61034d6040610641565b9050600061035b84846101b4565b82525060608201356001600160401b0381111561037757600080fd5b61017e848285016100ac565b600060a0828403121561039557600080fd5b61039f6060610641565b905060006103ad848461012d565b82525060206103be8484830161018a565b60208301525060606103258482850161018a565b60006101c082840312156103e557600080fd5b6103ef60e0610641565b905060006103fd848461012d565b825250602061040e8484830161009b565b60208301525060406104228482850161012d565b604083015250606061043684828501610138565b606083015250608061044a84828501610383565b60808301525061012061045f8482850161022a565b60a0830152506101a08201356001600160401b0381111561047f57600080fd5b61048b84828501610331565b60c08301525092915050565b600061026082840312156104aa57600080fd5b6104b5610140610641565b905060006104c3848461012d565b82525060206104d48484830161012d565b60208301525060406104e8848285016101ef565b60408301525060c06104fc8482850161012d565b60608301525060e08201356001600160401b0381111561051b57600080fd5b610527848285016103d2565b6080830152506101008201356001600160401b0381111561054757600080fd5b610553848285016103d2565b60a0830152506101206105688482850161022a565b60c0830152506101a061057d848285016102a0565b60e0830152506102206105928482850161012d565b610100830152506102406105a88482850161012d565b6101208301525092915050565b80356100a6816106d4565b6000806000606084860312156105d557600080fd5b60006105e1868661009b565b93505060208401356001600160401b038111156105fd57600080fd5b61060986828701610497565b925050604061061a8682870161009b565b9150509250925092565b61062d81610692565b82525050565b602081016100a68284610624565b6040518181016001600160401b038111828210171561065f57600080fd5b604052919050565b60006001600160401b0382111561067d57600080fd5b5060209081020190565b60006100a682610695565b90565b6001600160a01b031690565b60ff1690565b6106b081610687565b81146106bb57600080fd5b50565b6106b081610692565b600281106106bb57600080fd5b6106b0816106a156fea365627a7a72315820a5b0fba357e864508246958e50b406cb16979dfcbf55ece15df4e597de5904696c6578706572696d656e74616cf564736f6c634300050c0040",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c80631592f0ab1461004657806332f4058914610050578063922726071461006e575b600080fd5b61004e610081565b005b610058610087565b6040516100659190610633565b60405180910390f35b61004e61007c3660046105c0565b61008d565b60008055565b60005481565b505060008054600101905550565b80356100a6816106a7565b92915050565b600082601f8301126100bd57600080fd5b81356100d06100cb82610667565b610641565b915081818352602084019350602081019050838560808402820111156100f557600080fd5b60005b83811015610123578161010b8882610265565b845250602090920191608091909101906001016100f8565b5050505092915050565b80356100a6816106be565b80356100a6816106c7565b60006040828403121561015557600080fd5b61015f6040610641565b9050600061016d848461009b565b825250602061017e8484830161012d565b60208301525092915050565b60006040828403121561019c57600080fd5b6101a66040610641565b9050600061016d848461012d565b6000606082840312156101c657600080fd5b6101d06040610641565b905060006101de848461012d565b825250602061017e84848301610143565b60006080828403121561020157600080fd5b61020b6040610641565b905060006102198484610143565b825250604061017e84848301610143565b60006080828403121561023c57600080fd5b6102466040610641565b90506000610254848461018a565b825250604061017e8484830161018a565b60006080828403121561027757600080fd5b6102816040610641565b9050600061028f848461012d565b825250602061017e848483016101b4565b6000608082840312156102b257600080fd5b6102bc6040610641565b905060006102ca848461012d565b825250602061017e848483016000606082840312156102e857600080fd5b6102f26060610641565b90506000610300848461012d565b82525060206103118484830161012d565b6020830152506040610325848285016105b5565b60408301525092915050565b60006080828403121561034357600080fd5b61034d6040610641565b9050600061035b84846101b4565b82525060608201356001600160401b0381111561037757600080fd5b61017e848285016100ac565b600060a0828403121561039557600080fd5b61039f6060610641565b905060006103ad848461012d565b82525060206103be8484830161018a565b60208301525060606103258482850161018a565b60006101c082840312156103e557600080fd5b6103ef60e0610641565b905060006103fd848461012d565b825250602061040e8484830161009b565b60208301525060406104228482850161012d565b604083015250606061043684828501610138565b606083015250608061044a84828501610383565b60808301525061012061045f8482850161022a565b60a0830152506101a08201356001600160401b0381111561047f57600080fd5b61048b84828501610331565b60c08301525092915050565b600061026082840312156104aa57600080fd5b6104b5610140610641565b905060006104c3848461012d565b82525060206104d48484830161012d565b60208301525060406104e8848285016101ef565b60408301525060c06104fc8482850161012d565b60608301525060e08201356001600160401b0381111561051b57600080fd5b610527848285016103d2565b6080830152506101008201356001600160401b0381111561054757600080fd5b610553848285016103d2565b60a0830152506101206105688482850161022a565b60c0830152506101a061057d848285016102a0565b60e0830152506102206105928482850161012d565b610100830152506102406105a88482850161012d565b6101208301525092915050565b80356100a6816106d4565b6000806000606084860312156105d557600080fd5b60006105e1868661009b565b93505060208401356001600160401b038111156105fd57600080fd5b61060986828701610497565b925050604061061a8682870161009b565b9150509250925092565b61062d81610692565b82525050565b602081016100a68284610624565b6040518181016001600160401b038111828210171561065f57600080fd5b604052919050565b60006001600160401b0382111561067d57600080fd5b5060209081020190565b60006100a682610695565b90565b6001600160a01b031690565b60ff1690565b6106b081610687565b81146106bb57600080fd5b50565b6106b081610692565b600281106106bb57600080fd5b6106b0816106a156fea365627a7a72315820a5b0fba357e864508246958e50b406cb16979dfcbf55ece15df4e597de5904696c6578706572696d656e74616cf564736f6c634300050c0040",
  "sourceMap": "374:306:121:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;374:306:121;;;;;;;",
  "deployedSourceMap": "374:306:121:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;374:306:121;;;;;;;;;;;;;;;;;;;;;;;;;;;;;468:76;;;:::i;:::-;;424:37;;;:::i;:::-;;;;;;;;;;;;;;;;550:128;;;;;;;;;:::i;468:76::-;536:1;511:26;;468:76::o;424:37::-;;;;:::o;550:128::-;-1:-1:-1;;647:22:121;:24;;;;;;-1:-1:-1;550:128:121:o;5:130:-1:-;72:20;;97:33;72:20;97:33;;;57:78;;;;;187:780;;327:3;320:4;312:6;308:17;304:27;294:2;;345:1;342;335:12;294:2;382:6;369:20;404:103;419:87;499:6;419:87;;;404:103;;;395:112;;524:5;549:6;542:5;535:21;579:4;571:6;567:17;557:27;;601:4;596:3;592:14;585:21;;654:6;701:3;693:4;685:6;681:17;676:3;672:27;669:36;666:2;;;718:1;715;708:12;666:2;743:1;728:233;753:6;750:1;747:13;728:233;;;811:3;833:64;893:3;881:10;833:64;;;821:77;;-1:-1;921:4;912:14;;;;949:4;940:14;;;;;775:1;768:9;728:233;;;732:14;287:680;;;;;;;;975:130;1042:20;;1067:33;1042:20;1067:33;;1112:168;1198:20;;1223:52;1198:20;1223:52;;1461:460;;1573:4;1561:9;1556:3;1552:19;1548:30;1545:2;;;1591:1;1588;1581:12;1545:2;1609:20;1624:4;1609:20;;;1600:29;-1:-1;1677:1;1708:49;1753:3;1733:9;1708:49;;;1684:74;;-1:-1;1817:2;1850:49;1895:3;1871:22;;;1850:49;;;1843:4;1836:5;1832:16;1825:75;1779:132;1539:382;;;;;1978:482;;2103:4;2091:9;2086:3;2082:19;2078:30;2075:2;;;2121:1;2118;2111:12;2075:2;2139:20;2154:4;2139:20;;;2130:29;-1:-1;2212:1;2243:48;2287:3;2267:9;2243:48;;2504:490;;2614:4;2602:9;2597:3;2593:19;2589:30;2586:2;;;2632:1;2629;2622:12;2586:2;2650:20;2665:4;2650:20;;;2641:29;-1:-1;2722:1;2753:48;2797:3;2777:9;2753:48;;;2729:73;;-1:-1;2867:2;2900:72;2968:3;2944:22;;;2900:72;;3055:536;;3184:4;3172:9;3167:3;3163:19;3159:30;3156:2;;;3202:1;3199;3192:12;3156:2;3220:20;3235:4;3220:20;;;3211:29;-1:-1;3294:1;3325:72;3393:3;3373:9;3325:72;;;3301:97;;-1:-1;3464:2;3497:72;3565:3;3541:22;;;3497:72;;3665:575;;3807:4;3795:9;3790:3;3786:19;3782:30;3779:2;;;3825:1;3822;3815:12;3779:2;3843:20;3858:4;3843:20;;;3834:29;-1:-1;3917:1;3948:85;4029:3;4009:9;3948:85;;;3924:110;;-1:-1;4100:2;4133:85;4214:3;4190:22;;;4133:85;;4921:495;;5037:4;5025:9;5020:3;5016:19;5012:30;5009:2;;;5055:1;5052;5045:12;5009:2;5073:20;5088:4;5073:20;;;5064:29;-1:-1;5147:1;5178:49;5223:3;5203:9;5178:49;;;5154:74;;-1:-1;5291:2;5324:70;5390:3;5366:22;;;5324:70;;5456:489;;5564:4;5552:9;5547:3;5543:19;5539:30;5536:2;;;5582:1;5579;5572:12;5536:2;5600:20;5615:4;5600:20;;;5591:29;-1:-1;5670:1;5701:49;5746:3;5726:9;5701:49;;;5677:74;;-1:-1;5817:2;5850:73;5919:3;5895:22;;;5990:598;6103:4;6091:9;6086:3;6082:19;6078:30;6075:2;;;6121:1;6118;6111:12;6075:2;6139:20;6154:4;6139:20;;;6130:29;-1:-1;6206:1;6237:49;6282:3;6262:9;6237:49;;;6213:74;;-1:-1;6345:2;6378:49;6423:3;6399:22;;;6378:49;;;6371:4;6364:5;6360:16;6353:75;6308:131;6486:2;6519:47;6562:3;6553:6;6542:9;6538:22;6519:47;;;6512:4;6505:5;6501:16;6494:73;6449:129;6069:519;;;;;6654:644;;6788:4;6776:9;6771:3;6767:19;6763:30;6760:2;;;6806:1;6803;6796:12;6760:2;6824:20;6839:4;6824:20;;;6815:29;-1:-1;6896:1;6927:70;6993:3;6973:9;6927:70;;;6903:95;;-1:-1;7088:2;7073:18;;7060:32;-1:-1;;;;;7101:30;;7098:2;;;7144:1;7141;7134:12;7098:2;7179:97;7272:3;7263:6;7252:9;7248:22;7179:97;;7870:689;;7984:4;7972:9;7967:3;7963:19;7959:30;7956:2;;;8002:1;7999;7992:12;7956:2;8020:20;8035:4;8020:20;;;8011:29;-1:-1;8092:1;8123:48;8167:3;8147:9;8123:48;;;8099:73;;-1:-1;8235:2;8268:84;8348:3;8324:22;;;8268:84;;;8261:4;8254:5;8250:16;8243:110;8193:171;8419:2;8452:85;8533:3;8524:6;8513:9;8509:22;8452:85;;8604:1444;;8718:5;8706:9;8701:3;8697:19;8693:31;8690:2;;;8737:1;8734;8727:12;8690:2;8755:20;8770:4;8755:20;;;8746:29;-1:-1;8826:1;8857:49;8902:3;8882:9;8857:49;;;8833:74;;-1:-1;8970:2;9003:49;9048:3;9024:22;;;9003:49;;;8996:4;8989:5;8985:16;8978:75;8928:136;9123:2;9156:49;9201:3;9192:6;9181:9;9177:22;9156:49;;;9149:4;9142:5;9138:16;9131:75;9074:143;9276:2;9309:68;9373:3;9364:6;9353:9;9349:22;9309:68;;;9302:4;9295:5;9291:16;9284:94;9227:162;9440:3;9474:74;9544:3;9535:6;9524:9;9520:22;9474:74;;;9467:4;9460:5;9456:16;9449:100;9399:161;9614:3;9648:102;9746:3;9737:6;9726:9;9722:22;9648:102;;;9641:4;9634:5;9630:16;9623:128;9570:192;9840:3;9829:9;9825:19;9812:33;-1:-1;;;;;9857:6;9854:30;9851:2;;;9897:1;9894;9887:12;9851:2;9932:94;10022:3;10013:6;10002:9;9998:22;9932:94;;;9925:4;9918:5;9914:16;9907:120;9772:266;8684:1364;;;;;10088:1986;;10201:5;10189:9;10184:3;10180:19;10176:31;10173:2;;;10220:1;10217;10210:12;10173:2;10238:21;10253:5;10238:21;;;10229:30;-1:-1;10310:1;10341:49;10386:3;10366:9;10341:49;;;10317:74;;-1:-1;10454:2;10487:48;10531:3;10507:22;;;10487:48;;;10480:4;10473:5;10469:16;10462:74;10412:135;10603:2;10636:89;10721:3;10712:6;10701:9;10697:22;10636:89;;;10629:4;10622:5;10618:16;10611:115;10557:180;10787:3;10821:48;10865:3;10856:6;10845:9;10841:22;10821:48;;;10814:4;10807:5;10803:16;10796:74;10747:134;10960:3;10949:9;10945:19;10932:33;-1:-1;;;;;10977:6;10974:30;10971:2;;;11017:1;11014;11007:12;10971:2;11052:74;11122:3;11113:6;11102:9;11098:22;11052:74;;;11045:4;11038:5;11034:16;11027:100;10891:247;11218:3;11207:9;11203:19;11190:33;-1:-1;;;;;11235:6;11232:30;11229:2;;;11275:1;11272;11265:12;11229:2;11310:74;11380:3;11371:6;11360:9;11356:22;11310:74;;;11303:4;11296:5;11292:16;11285:100;11148:248;11451:3;11485:98;11579:3;11570:6;11559:9;11555:22;11485:98;;;11478:4;11471:5;11467:16;11460:124;11406:189;11645:3;11679:68;11743:3;11734:6;11723:9;11719:22;11679:68;;;11672:4;11665:5;11661:16;11654:94;11605:154;11816:3;11851:49;11896:3;11887:6;11876:9;11872:22;11851:49;;;11843:5;11836;11832:17;11825:76;11769:143;11968:3;12003:49;12048:3;12039:6;12028:9;12024:22;12003:49;;;11995:5;11988;11984:17;11977:76;11922:142;10167:1907;;;;;12756:126;12821:20;;12846:31;12821:20;12846:31;;12889:625;;;;13051:2;13039:9;13030:7;13026:23;13022:32;13019:2;;;13067:1;13064;13057:12;13019:2;13102:1;13119:53;13164:7;13144:9;13119:53;;;13109:63;;13081:97;13237:2;13226:9;13222:18;13209:32;-1:-1;;;;;13253:6;13250:30;13247:2;;;13293:1;13290;13283:12;13247:2;13313:77;13382:7;13373:6;13362:9;13358:22;13313:77;;;13303:87;;13188:208;13427:2;13445:53;13490:7;13481:6;13470:9;13466:22;13445:53;;;13435:63;;13406:98;13013:501;;;;;;13521:113;13604:24;13622:5;13604:24;;;13599:3;13592:37;13586:48;;;13641:213;13759:2;13744:18;;13773:71;13748:9;13817:6;13773:71;;13861:256;13923:2;13917:9;13949:17;;;-1:-1;;;;;14009:34;;14045:22;;;14006:62;14003:2;;;14081:1;14078;14071:12;14003:2;14097;14090:22;13901:216;;-1:-1;13901:216;14124:327;;-1:-1;;;;;14298:6;14295:30;14292:2;;;14338:1;14335;14328:12;14292:2;-1:-1;14373:4;14361:17;;;14426:15;;14229:222;14458:91;;14520:24;14538:5;14520:24;;14556:72;14618:5;14601:27;14713:121;-1:-1;;;;;14775:54;;14758:76;14920:81;14991:4;14980:16;;14963:38;15008:117;15077:24;15095:5;15077:24;;;15070:5;15067:35;15057:2;;15116:1;15113;15106:12;15057:2;15051:74;;15132:117;15201:24;15219:5;15201:24;;15256:113;15344:1;15337:5;15334:12;15324:2;;15360:1;15357;15350:12;15622:113;15689:22;15705:5;15689:22;",
  "source": "/*\n * Hubii Nahmii\n *\n * Compliant with the Hubii Nahmii specification v0.12.\n *\n * Copyright (C) 2017-2018 Hubii AS\n */\n\npragma solidity >=0.4.25 <0.6.0;\npragma experimental ABIEncoderV2;\n\nimport {TradeTypesLib} from \"../TradeTypesLib.sol\";\n\n/**\n * @title MockedNullSettlementDisputeByTrade\n * @notice Mocked implementation of null settlement dispute by trade contract\n */\ncontract MockedNullSettlementDisputeByTrade {\n    uint256 public _challengeByTradeCount;\n\n    function _reset()\n    public\n    {\n        _challengeByTradeCount = 0;\n    }\n\n    function challengeByTrade(address, TradeTypesLib.Trade memory, address)\n    public\n    {\n        _challengeByTradeCount++;\n    }\n}",
  "sourcePath": "/opt/buildagent/work/855e104608380c36/contracts/test/MockedNullSettlementDisputeByTrade.sol",
  "ast": {
    "absolutePath": "/opt/buildagent/work/855e104608380c36/contracts/test/MockedNullSettlementDisputeByTrade.sol",
    "exportedSymbols": {
      "MockedNullSettlementDisputeByTrade": [
        51853
      ]
    },
    "id": 51854,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 51826,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".25",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "122:32:121"
      },
      {
        "id": 51827,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "155:33:121"
      },
      {
        "absolutePath": "/opt/buildagent/work/855e104608380c36/contracts/TradeTypesLib.sol",
        "file": "../TradeTypesLib.sol",
        "id": 51829,
        "nodeType": "ImportDirective",
        "scope": 51854,
        "sourceUnit": 40380,
        "src": "190:51:121",
        "symbolAliases": [
          {
            "foreign": 51828,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title MockedNullSettlementDisputeByTrade\n@notice Mocked implementation of null settlement dispute by trade contract",
        "fullyImplemented": true,
        "id": 51853,
        "linearizedBaseContracts": [
          51853
        ],
        "name": "MockedNullSettlementDisputeByTrade",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 51831,
            "name": "_challengeByTradeCount",
            "nodeType": "VariableDeclaration",
            "scope": 51853,
            "src": "424:37:121",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 51830,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "424:7:121",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 51838,
              "nodeType": "Block",
              "src": "501:43:121",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 51836,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 51834,
                      "name": "_challengeByTradeCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51831,
                      "src": "511:22:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 51835,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "536:1:121",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "511:26:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 51837,
                  "nodeType": "ExpressionStatement",
                  "src": "511:26:121"
                }
              ]
            },
            "documentation": null,
            "id": 51839,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_reset",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 51832,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "483:2:121"
            },
            "returnParameters": {
              "id": 51833,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "501:0:121"
            },
            "scope": 51853,
            "src": "468:76:121",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 51851,
              "nodeType": "Block",
              "src": "637:41:121",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 51849,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "647:24:121",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 51848,
                      "name": "_challengeByTradeCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51831,
                      "src": "647:22:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 51850,
                  "nodeType": "ExpressionStatement",
                  "src": "647:24:121"
                }
              ]
            },
            "documentation": null,
            "id": 51852,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "challengeByTrade",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 51846,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51841,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 51852,
                  "src": "576:7:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 51840,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "576:7:121",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51843,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 51852,
                  "src": "585:26:121",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                    "typeString": "struct TradeTypesLib.Trade"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 51842,
                    "name": "TradeTypesLib.Trade",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 40362,
                    "src": "585:19:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$40362_storage_ptr",
                      "typeString": "struct TradeTypesLib.Trade"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51845,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 51852,
                  "src": "613:7:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 51844,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "613:7:121",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "575:46:121"
            },
            "returnParameters": {
              "id": 51847,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "637:0:121"
            },
            "scope": 51853,
            "src": "550:128:121",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 51854,
        "src": "374:306:121"
      }
    ],
    "src": "122:558:121"
  },
  "legacyAST": {
    "absolutePath": "/opt/buildagent/work/855e104608380c36/contracts/test/MockedNullSettlementDisputeByTrade.sol",
    "exportedSymbols": {
      "MockedNullSettlementDisputeByTrade": [
        51853
      ]
    },
    "id": 51854,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 51826,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".25",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "122:32:121"
      },
      {
        "id": 51827,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "155:33:121"
      },
      {
        "absolutePath": "/opt/buildagent/work/855e104608380c36/contracts/TradeTypesLib.sol",
        "file": "../TradeTypesLib.sol",
        "id": 51829,
        "nodeType": "ImportDirective",
        "scope": 51854,
        "sourceUnit": 40380,
        "src": "190:51:121",
        "symbolAliases": [
          {
            "foreign": 51828,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title MockedNullSettlementDisputeByTrade\n@notice Mocked implementation of null settlement dispute by trade contract",
        "fullyImplemented": true,
        "id": 51853,
        "linearizedBaseContracts": [
          51853
        ],
        "name": "MockedNullSettlementDisputeByTrade",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 51831,
            "name": "_challengeByTradeCount",
            "nodeType": "VariableDeclaration",
            "scope": 51853,
            "src": "424:37:121",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 51830,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "424:7:121",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 51838,
              "nodeType": "Block",
              "src": "501:43:121",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 51836,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 51834,
                      "name": "_challengeByTradeCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51831,
                      "src": "511:22:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 51835,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "536:1:121",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "511:26:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 51837,
                  "nodeType": "ExpressionStatement",
                  "src": "511:26:121"
                }
              ]
            },
            "documentation": null,
            "id": 51839,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_reset",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 51832,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "483:2:121"
            },
            "returnParameters": {
              "id": 51833,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "501:0:121"
            },
            "scope": 51853,
            "src": "468:76:121",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 51851,
              "nodeType": "Block",
              "src": "637:41:121",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 51849,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "647:24:121",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 51848,
                      "name": "_challengeByTradeCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51831,
                      "src": "647:22:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 51850,
                  "nodeType": "ExpressionStatement",
                  "src": "647:24:121"
                }
              ]
            },
            "documentation": null,
            "id": 51852,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "challengeByTrade",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 51846,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51841,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 51852,
                  "src": "576:7:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 51840,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "576:7:121",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51843,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 51852,
                  "src": "585:26:121",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                    "typeString": "struct TradeTypesLib.Trade"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 51842,
                    "name": "TradeTypesLib.Trade",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 40362,
                    "src": "585:19:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$40362_storage_ptr",
                      "typeString": "struct TradeTypesLib.Trade"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51845,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 51852,
                  "src": "613:7:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 51844,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "613:7:121",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "575:46:121"
            },
            "returnParameters": {
              "id": 51847,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "637:0:121"
            },
            "scope": 51853,
            "src": "550:128:121",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 51854,
        "src": "374:306:121"
      }
    ],
    "src": "122:558:121"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.12+commit.7709ece9.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.3",
  "updatedAt": "2019-10-22T21:00:29.588Z"
}