{
  "contractName": "FraudChallengeByTrade",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "deployer",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "tradeHash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "challenger",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "lockedBuyer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "lockedSeller",
          "type": "address"
        }
      ],
      "name": "ChallengeByTradeEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "FreezeWalletLockerEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "wallet",
          "type": "address"
        }
      ],
      "name": "SelfDestructionDisabledEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract Configuration",
          "name": "oldConfiguration",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract Configuration",
          "name": "newConfiguration",
          "type": "address"
        }
      ],
      "name": "SetConfigurationEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldDeployer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newDeployer",
          "type": "address"
        }
      ],
      "name": "SetDeployerEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract FraudChallenge",
          "name": "oldFraudChallenge",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract FraudChallenge",
          "name": "newFraudChallenge",
          "type": "address"
        }
      ],
      "name": "SetFraudChallengeEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldOperator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newOperator",
          "type": "address"
        }
      ],
      "name": "SetOperatorEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract SecurityBond",
          "name": "oldSecurityBond",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract SecurityBond",
          "name": "newSecurityBond",
          "type": "address"
        }
      ],
      "name": "SetSecurityBondEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract ValidatorV2",
          "name": "oldValidator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract ValidatorV2",
          "name": "newValidator",
          "type": "address"
        }
      ],
      "name": "SetValidatorEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract WalletLocker",
          "name": "oldWalletLocker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract WalletLocker",
          "name": "newWalletLocker",
          "type": "address"
        }
      ],
      "name": "SetWalletLockerEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "wallet",
          "type": "address"
        }
      ],
      "name": "TriggerSelfDestructionEvent",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "configuration",
      "outputs": [
        {
          "internalType": "contract Configuration",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "deployer",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "destructor",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "disableSelfDestruction",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "fraudChallenge",
      "outputs": [
        {
          "internalType": "contract FraudChallenge",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "freezeWalletLocker",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "operator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "securityBond",
      "outputs": [
        {
          "internalType": "contract SecurityBond",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "selfDestructionDisabled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "contract Configuration",
          "name": "newConfiguration",
          "type": "address"
        }
      ],
      "name": "setConfiguration",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newDeployer",
          "type": "address"
        }
      ],
      "name": "setDeployer",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "contract FraudChallenge",
          "name": "newFraudChallenge",
          "type": "address"
        }
      ],
      "name": "setFraudChallenge",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOperator",
          "type": "address"
        }
      ],
      "name": "setOperator",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "contract SecurityBond",
          "name": "newSecurityBond",
          "type": "address"
        }
      ],
      "name": "setSecurityBond",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "contract ValidatorV2",
          "name": "newValidator",
          "type": "address"
        }
      ],
      "name": "setValidator",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "contract WalletLocker",
          "name": "newWalletLocker",
          "type": "address"
        }
      ],
      "name": "setWalletLocker",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "triggerSelfDestruction",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "validator",
      "outputs": [
        {
          "internalType": "contract ValidatorV2",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "walletLocker",
      "outputs": [
        {
          "internalType": "contract WalletLocker",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "walletLockerFrozen",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "int256",
              "name": "amount",
              "type": "int256"
            },
            {
              "components": [
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "ct",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct MonetaryTypesLib.Currency",
                  "name": "intended",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "ct",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct MonetaryTypesLib.Currency",
                  "name": "conjugate",
                  "type": "tuple"
                }
              ],
              "internalType": "struct NahmiiTypesLib.IntendedConjugateCurrency",
              "name": "currencies",
              "type": "tuple"
            },
            {
              "internalType": "int256",
              "name": "rate",
              "type": "int256"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "wallet",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "rollingVolume",
                  "type": "uint256"
                },
                {
                  "internalType": "enum TradeTypesLib.LiquidityRole",
                  "name": "liquidityRole",
                  "type": "uint8"
                },
                {
                  "components": [
                    {
                      "internalType": "int256",
                      "name": "amount",
                      "type": "int256"
                    },
                    {
                      "components": [
                        {
                          "internalType": "bytes32",
                          "name": "wallet",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "operator",
                          "type": "bytes32"
                        }
                      ],
                      "internalType": "struct NahmiiTypesLib.WalletOperatorHashes",
                      "name": "hashes",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "int256",
                          "name": "current",
                          "type": "int256"
                        },
                        {
                          "internalType": "int256",
                          "name": "previous",
                          "type": "int256"
                        }
                      ],
                      "internalType": "struct NahmiiTypesLib.CurrentPreviousInt256",
                      "name": "residuals",
                      "type": "tuple"
                    }
                  ],
                  "internalType": "struct TradeTypesLib.TradeOrder",
                  "name": "order",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "components": [
                        {
                          "internalType": "int256",
                          "name": "current",
                          "type": "int256"
                        },
                        {
                          "internalType": "int256",
                          "name": "previous",
                          "type": "int256"
                        }
                      ],
                      "internalType": "struct NahmiiTypesLib.CurrentPreviousInt256",
                      "name": "intended",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "int256",
                          "name": "current",
                          "type": "int256"
                        },
                        {
                          "internalType": "int256",
                          "name": "previous",
                          "type": "int256"
                        }
                      ],
                      "internalType": "struct NahmiiTypesLib.CurrentPreviousInt256",
                      "name": "conjugate",
                      "type": "tuple"
                    }
                  ],
                  "internalType": "struct NahmiiTypesLib.IntendedConjugateCurrentPreviousInt256",
                  "name": "balances",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "components": [
                        {
                          "internalType": "int256",
                          "name": "amount",
                          "type": "int256"
                        },
                        {
                          "components": [
                            {
                              "internalType": "address",
                              "name": "ct",
                              "type": "address"
                            },
                            {
                              "internalType": "uint256",
                              "name": "id",
                              "type": "uint256"
                            }
                          ],
                          "internalType": "struct MonetaryTypesLib.Currency",
                          "name": "currency",
                          "type": "tuple"
                        }
                      ],
                      "internalType": "struct MonetaryTypesLib.Figure",
                      "name": "single",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "originId",
                          "type": "uint256"
                        },
                        {
                          "components": [
                            {
                              "internalType": "int256",
                              "name": "amount",
                              "type": "int256"
                            },
                            {
                              "components": [
                                {
                                  "internalType": "address",
                                  "name": "ct",
                                  "type": "address"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "id",
                                  "type": "uint256"
                                }
                              ],
                              "internalType": "struct MonetaryTypesLib.Currency",
                              "name": "currency",
                              "type": "tuple"
                            }
                          ],
                          "internalType": "struct MonetaryTypesLib.Figure",
                          "name": "figure",
                          "type": "tuple"
                        }
                      ],
                      "internalType": "struct NahmiiTypesLib.OriginFigure[]",
                      "name": "total",
                      "type": "tuple[]"
                    }
                  ],
                  "internalType": "struct NahmiiTypesLib.SingleFigureTotalOriginFigures",
                  "name": "fees",
                  "type": "tuple"
                }
              ],
              "internalType": "struct TradeTypesLib.TradeParty",
              "name": "buyer",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "wallet",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "rollingVolume",
                  "type": "uint256"
                },
                {
                  "internalType": "enum TradeTypesLib.LiquidityRole",
                  "name": "liquidityRole",
                  "type": "uint8"
                },
                {
                  "components": [
                    {
                      "internalType": "int256",
                      "name": "amount",
                      "type": "int256"
                    },
                    {
                      "components": [
                        {
                          "internalType": "bytes32",
                          "name": "wallet",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "operator",
                          "type": "bytes32"
                        }
                      ],
                      "internalType": "struct NahmiiTypesLib.WalletOperatorHashes",
                      "name": "hashes",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "int256",
                          "name": "current",
                          "type": "int256"
                        },
                        {
                          "internalType": "int256",
                          "name": "previous",
                          "type": "int256"
                        }
                      ],
                      "internalType": "struct NahmiiTypesLib.CurrentPreviousInt256",
                      "name": "residuals",
                      "type": "tuple"
                    }
                  ],
                  "internalType": "struct TradeTypesLib.TradeOrder",
                  "name": "order",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "components": [
                        {
                          "internalType": "int256",
                          "name": "current",
                          "type": "int256"
                        },
                        {
                          "internalType": "int256",
                          "name": "previous",
                          "type": "int256"
                        }
                      ],
                      "internalType": "struct NahmiiTypesLib.CurrentPreviousInt256",
                      "name": "intended",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "int256",
                          "name": "current",
                          "type": "int256"
                        },
                        {
                          "internalType": "int256",
                          "name": "previous",
                          "type": "int256"
                        }
                      ],
                      "internalType": "struct NahmiiTypesLib.CurrentPreviousInt256",
                      "name": "conjugate",
                      "type": "tuple"
                    }
                  ],
                  "internalType": "struct NahmiiTypesLib.IntendedConjugateCurrentPreviousInt256",
                  "name": "balances",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "components": [
                        {
                          "internalType": "int256",
                          "name": "amount",
                          "type": "int256"
                        },
                        {
                          "components": [
                            {
                              "internalType": "address",
                              "name": "ct",
                              "type": "address"
                            },
                            {
                              "internalType": "uint256",
                              "name": "id",
                              "type": "uint256"
                            }
                          ],
                          "internalType": "struct MonetaryTypesLib.Currency",
                          "name": "currency",
                          "type": "tuple"
                        }
                      ],
                      "internalType": "struct MonetaryTypesLib.Figure",
                      "name": "single",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "originId",
                          "type": "uint256"
                        },
                        {
                          "components": [
                            {
                              "internalType": "int256",
                              "name": "amount",
                              "type": "int256"
                            },
                            {
                              "components": [
                                {
                                  "internalType": "address",
                                  "name": "ct",
                                  "type": "address"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "id",
                                  "type": "uint256"
                                }
                              ],
                              "internalType": "struct MonetaryTypesLib.Currency",
                              "name": "currency",
                              "type": "tuple"
                            }
                          ],
                          "internalType": "struct MonetaryTypesLib.Figure",
                          "name": "figure",
                          "type": "tuple"
                        }
                      ],
                      "internalType": "struct NahmiiTypesLib.OriginFigure[]",
                      "name": "total",
                      "type": "tuple[]"
                    }
                  ],
                  "internalType": "struct NahmiiTypesLib.SingleFigureTotalOriginFigures",
                  "name": "fees",
                  "type": "tuple"
                }
              ],
              "internalType": "struct TradeTypesLib.TradeParty",
              "name": "seller",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "components": [
                    {
                      "internalType": "int256",
                      "name": "single",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "total",
                      "type": "int256"
                    }
                  ],
                  "internalType": "struct NahmiiTypesLib.SingleTotalInt256",
                  "name": "intended",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "int256",
                      "name": "single",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "total",
                      "type": "int256"
                    }
                  ],
                  "internalType": "struct NahmiiTypesLib.SingleTotalInt256",
                  "name": "conjugate",
                  "type": "tuple"
                }
              ],
              "internalType": "struct NahmiiTypesLib.IntendedConjugateSingleTotalInt256",
              "name": "transfers",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "hash",
                  "type": "bytes32"
                },
                {
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "r",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "s",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint8",
                      "name": "v",
                      "type": "uint8"
                    }
                  ],
                  "internalType": "struct NahmiiTypesLib.Signature",
                  "name": "signature",
                  "type": "tuple"
                }
              ],
              "internalType": "struct NahmiiTypesLib.Seal",
              "name": "seal",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "blockNumber",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "operatorId",
              "type": "uint256"
            }
          ],
          "internalType": "struct TradeTypesLib.Trade",
          "name": "trade",
          "type": "tuple"
        }
      ],
      "name": "challenge",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620021e6380380620021e68339810160408190526200003491620000b3565b80806001600160a01b0381166200004a57600080fd5b6001600160a01b0381163014156200006157600080fd5b5060008054610100600160a81b0319166101006001600160a01b0393909316928302179055600180546001600160a01b03191690911790555062000108565b8051620000ad81620000ee565b92915050565b600060208284031215620000c657600080fd5b6000620000d48484620000a0565b949350505050565b60006001600160a01b038216620000ad565b620000f981620000dc565b81146200010557600080fd5b50565b6120ce80620001186000396000f3fe608060405234801561001057600080fd5b50600436106101075760003560e01c806301370d061461010c5780631327d3d81461012157806316cabd4714610134578063240625d8146101475780632738a112146101655780632f013a001461016d5780633a5381b5146101755780633bd7857f1461018a5780634476d23b14610192578063570ca735146101a75780635dc60def146101af578063627f09c3146101b75780636792ce6e146101ca5780636b0570d0146101dd5780636c70bee9146101e557806370327ea1146101ed578063892860b2146101f55780639621473514610208578063b3ab15fb1461021b578063d5f394881461022e578063e8ae41e314610236575b600080fd5b61011f61011a3660046118ec565b61023e565b005b61011f61012f3660046118ec565b6102df565b61011f61014236600461190a565b610370565b61014f610e48565b60405161015c9190611ec5565b60405180910390f35b61011f610e58565b61014f610ebe565b61017d610ec7565b60405161015c9190611f16565b61017d610ed6565b61019a610ee5565b60405161015c9190611e05565b61019a610ef9565b61011f610f08565b61011f6101c53660046118ec565b610f57565b61011f6101d83660046118ec565b610fe8565b61017d611079565b61017d611088565b61011f611097565b61011f6102033660046118ec565b6110fa565b61011f6102163660046118a8565b6111b5565b61011f6102293660046118a8565b611275565b61019a611318565b61017d61132c565b61024661133b565b61024f57600080fd5b806001600160a01b03811661026357600080fd5b60025482906001600160a01b0390811690821681146102d957600280546001600160a01b038681166001600160a01b03198316179092556040519116907f07998fa7be97abe2427246ae4688298c89d6196bbffdf0997b9495a8d27bc673906102cf9083908890611f24565b60405180910390a1505b50505050565b6102e761133b565b6102f057600080fd5b806001600160a01b03811661030457600080fd5b60045482906001600160a01b0390811690821681146102d957600480546001600160a01b038681166001600160a01b03198316179092556040519116907f1882af944a16549c3d4f60e3cd26f158b0c7aac3222cf32971fc21375ce05f60906102cf9083908890611f24565b600360009054906101000a90046001600160a01b03166001600160a01b031663f71e860f6040518163ffffffff1660e01b815260040160206040518083038186803b1580156103be57600080fd5b505afa1580156103d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506103f691908101906118ce565b61041b5760405162461bcd60e51b815260040161041290611f3f565b60405180910390fd5b60048054604051637211c8c760e11b815283926001600160a01b039092169163e423918e9161044c91859101611f6f565b60206040518083038186803b15801561046457600080fd5b505afa158015610478573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061049c91908101906118ce565b6104b85760405162461bcd60e51b815260040161041290611f4f565b6004805460405163d587271760e01b81526000926001600160a01b039092169163d5872717916104ea91879101611f6f565b60206040518083038186803b15801561050257600080fd5b505afa158015610516573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061053a91908101906118ce565b6106485760048054604051632b1a3a1960e11b81526001600160a01b039091169163563474329161056d91879101611f6f565b60206040518083038186803b15801561058557600080fd5b505afa158015610599573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506105bd91908101906118ce565b8015610643575060048054604051633427a68760e21b81526001600160a01b039091169163d09e9a1c916105f391879101611f6f565b60206040518083038186803b15801561060b57600080fd5b505afa15801561061f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061064391908101906118ce565b61074d565b600480546040516349c3fc7760e11b81526001600160a01b0390911691639387f8ee9161067791879101611f6f565b60206040518083038186803b15801561068f57600080fd5b505afa1580156106a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506106c791908101906118ce565b801561074d57506004805460405163b0ee5a5b60e01b81526001600160a01b039091169163b0ee5a5b916106fd91879101611f6f565b60206040518083038186803b15801561071557600080fd5b505afa158015610729573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061074d91908101906118ce565b60048054604051637105512560e11b81529293506000926001600160a01b039091169163e20aa24a9161078291889101611f6f565b60206040518083038186803b15801561079a57600080fd5b505afa1580156107ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506107d291908101906118ce565b6108e057600480546040516377a901cd60e01b81526001600160a01b03909116916377a901cd9161080591889101611f6f565b60206040518083038186803b15801561081d57600080fd5b505afa158015610831573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061085591908101906118ce565b80156108db575060048054604051630e88468f60e21b81526001600160a01b0390911691633a211a3c9161088b91889101611f6f565b60206040518083038186803b1580156108a357600080fd5b505afa1580156108b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506108db91908101906118ce565b6109e5565b6004805460405163095f4df760e41b81526001600160a01b03909116916395f4df709161090f91889101611f6f565b60206040518083038186803b15801561092757600080fd5b505afa15801561093b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061095f91908101906118ce565b80156109e557506004805460405163d2e362a160e01b81526001600160a01b039091169163d2e362a19161099591889101611f6f565b60206040518083038186803b1580156109ad57600080fd5b505afa1580156109c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506109e591908101906118ce565b90508180156109f15750805b156109fb57600080fd5b600360009054906101000a90046001600160a01b03166001600160a01b031663f8e6e8886040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610a4b57600080fd5b505af1158015610a5f573d6000803e3d6000fd5b505060025460e0870151516040516375d8655b60e01b81526001600160a01b0390921693506375d8655b9250610a9791600401611ed3565b600060405180830381600087803b158015610ab157600080fd5b505af1158015610ac5573d6000803e3d6000fd5b505060055460035460408051639699f33760e01b815290516001600160a01b03938416955063760b82929450339390921691639699f33791600480820192602092909190829003018186803b158015610b1d57600080fd5b505afa158015610b31573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610b55919081019061193e565b60006040518463ffffffff1660e01b8152600401610b7593929190611e21565b600060405180830381600087803b158015610b8f57600080fd5b505af1158015610ba3573d6000803e3d6000fd5b5050505081610cbd57600654608085015160208082015160a09092015151516040808901515180519301519051634d2a299160e11b81526001600160a01b0390951694639a54532294610c0194909333939092600090600401611e6b565b600060405180830381600087803b158015610c1b57600080fd5b505af1158015610c2f573d6000803e3d6000fd5b5050600654608087015160208082015160a090920151810151516040808b015183015180519301519051634d2a299160e11b81526001600160a01b039095169650639a5453229550610c8a9433939190600090600401611e6b565b600060405180830381600087803b158015610ca457600080fd5b505af1158015610cb8573d6000803e3d6000fd5b505050505b80610dd55760065460a080860151602080820151919092015151516040808901515180519401519051634d2a299160e11b81526001600160a01b0390951694639a54532294610d16949333939092600090600401611e6b565b600060405180830381600087803b158015610d3057600080fd5b505af1158015610d44573d6000803e3d6000fd5b505060065460a0808801516020808201519190920151820151516040808b015184015180519401519051634d2a299160e11b81526001600160a01b039095169650639a5453229550610da29492933393909190600090600401611e6b565b600060405180830381600087803b158015610dbc57600080fd5b505af1158015610dd0573d6000803e3d6000fd5b505050505b60e0840151517f4b1c77e1b2b1e3866c73bbddcaf9f4cad172b890bfab938da442005e1234d407903384610e1157866080015160200151610e14565b60005b84610e27578760a0015160200151610e2a565b60005b604051610e3a9493929190611ee1565b60405180910390a150505050565b600654600160a01b900460ff1681565b33610e61610ee5565b6001600160a01b031614610e7457600080fd5b60005460ff1615610e8457600080fd5b7f787a5d936e74f4b564b9153575886059829c78cd9927b1be5e0d976b317ef73633604051610eb39190611e13565b60405180910390a133ff5b60005460ff1681565b6004546001600160a01b031681565b6002546001600160a01b031681565b60005461010090046001600160a01b031690565b6001546001600160a01b031681565b610f1061133b565b610f1957600080fd5b6006805460ff60a01b1916600160a01b1790556040517f56ec8900b9c4bf84f4b715a53068ca06961dd49084c07b481931e2c2045346e690600090a1565b610f5f61133b565b610f6857600080fd5b806001600160a01b038116610f7c57600080fd5b60035482906001600160a01b0390811690821681146102d957600380546001600160a01b038681166001600160a01b03198316179092556040519116907f634f61bf00e14adedce330c80c2823e16e184f189ebe853e1ddecc4a268477ff906102cf9083908890611f24565b610ff061133b565b610ff957600080fd5b806001600160a01b03811661100d57600080fd5b60055482906001600160a01b0390811690821681146102d957600580546001600160a01b038681166001600160a01b03198316179092556040519116907fc9f3f00c1760fe26985aeacb814a21c56ea289d680562e89b249681b08c30382906102cf9083908890611f24565b6005546001600160a01b031681565b6003546001600160a01b031681565b336110a0610ee5565b6001600160a01b0316146110b357600080fd5b6000805460ff191660011790556040517fd5a2a04a775c741c2ca0dc46ea7ce4835190e1aaf1ca018def0e82568ec33616906110f0903390611e13565b60405180910390a1565b61110261133b565b61110b57600080fd5b806001600160a01b03811661111f57600080fd5b60065482906001600160a01b0390811690821681146102d957600654600160a01b900460ff16156111625760405162461bcd60e51b815260040161041290611f5f565b600680546001600160a01b038681166001600160a01b03198316179092556040519116907fa44d361e26327b72a7ccbeae801b3c5cd7677ea4fa74168b289e273c46bfecfc906102cf9083908890611f24565b6111bd61133b565b6111c657600080fd5b806001600160a01b0381166111da57600080fd5b6001600160a01b0381163014156111f057600080fd5b6000546001600160a01b03838116610100909204161461127157600080546001600160a01b03848116610100908102610100600160a81b03198416179093556040519290910416907f977e5fa58e458501775e0008d275006294c5249e3c08d1d0e3a9f3acad14f6e4906112679083908690611e49565b60405180910390a1505b5050565b61127d611351565b61128657600080fd5b806001600160a01b03811661129a57600080fd5b6001600160a01b0381163014156112b057600080fd5b6001546001600160a01b0383811691161461127157600180546001600160a01b038481166001600160a01b03198316179092556040519116907f9f611b789425d0d5b90b920f1b2852907dd865c80074a30b1629aaa041d1812c906112679083908690611e49565b60005461010090046001600160a01b031681565b6006546001600160a01b031681565b60005461010090046001600160a01b0316331490565b6001546001600160a01b0316331490565b803561136d81612046565b92915050565b600082601f83011261138457600080fd5b813561139761139282611fa6565b611f80565b915081818352602084019350602081019050838560808402820111156113bc57600080fd5b60005b838110156113ea57816113d28882611542565b845250602090920191608091909101906001016113bf565b5050505092915050565b805161136d8161205a565b803561136d81612063565b803561136d8161206c565b803561136d81612075565b60006040828403121561143257600080fd5b61143c6040611f80565b9050600061144a8484611362565b825250602061145b848483016113ff565b60208301525092915050565b60006040828403121561147957600080fd5b6114836040611f80565b9050600061144a84846113ff565b6000606082840312156114a357600080fd5b6114ad6040611f80565b905060006114bb84846113ff565b825250602061145b84848301611420565b6000608082840312156114de57600080fd5b6114e86040611f80565b905060006114f68484611420565b825250604061145b84848301611420565b60006080828403121561151957600080fd5b6115236040611f80565b905060006115318484611467565b825250604061145b84848301611467565b60006080828403121561155457600080fd5b61155e6040611f80565b9050600061156c84846113ff565b825250602061145b84848301611491565b60006080828403121561158f57600080fd5b6115996040611f80565b905060006115a784846113ff565b825250602061145b848483016000606082840312156115c557600080fd5b6115cf6060611f80565b905060006115dd84846113ff565b82525060206115ee848483016113ff565b60208301525060406116028482850161189d565b60408301525092915050565b60006080828403121561162057600080fd5b61162a6040611f80565b905060006116388484611491565b82525060608201356001600160401b0381111561165457600080fd5b61145b84828501611373565b600060a0828403121561167257600080fd5b61167c6060611f80565b9050600061168a84846113ff565b825250602061169b84848301611467565b602083015250606061160284828501611467565b60006101c082840312156116c257600080fd5b6116cc60e0611f80565b905060006116da84846113ff565b82525060206116eb84848301611362565b60208301525060406116ff848285016113ff565b604083015250606061171384828501611415565b606083015250608061172784828501611660565b60808301525061012061173c84828501611507565b60a0830152506101a08201356001600160401b0381111561175c57600080fd5b6117688482850161160e565b60c08301525092915050565b6000610260828403121561178757600080fd5b611792610140611f80565b905060006117a084846113ff565b82525060206117b1848483016113ff565b60208301525060406117c5848285016114cc565b60408301525060c06117d9848285016113ff565b60608301525060e08201356001600160401b038111156117f857600080fd5b611804848285016116af565b6080830152506101008201356001600160401b0381111561182457600080fd5b611830848285016116af565b60a08301525061012061184584828501611507565b60c0830152506101a061185a8482850161157d565b60e08301525061022061186f848285016113ff565b61010083015250610240611885848285016113ff565b6101208301525092915050565b805161136d81612063565b803561136d81612082565b6000602082840312156118ba57600080fd5b60006118c68484611362565b949350505050565b6000602082840312156118e057600080fd5b60006118c684846113f4565b6000602082840312156118fe57600080fd5b60006118c6848461140a565b60006020828403121561191c57600080fd5b81356001600160401b0381111561193257600080fd5b6118c684828501611774565b60006020828403121561195057600080fd5b60006118c68484611892565b60006119688383611bab565b505060800190565b61197981612018565b82525050565b61197981611fd9565b600061199382611fcc565b61199d8185611fd0565b93506119a883611fc6565b8060005b838110156119d65781516119c0888261195c565b97506119cb83611fc6565b9250506001016119ac565b509495945050505050565b61197981611fe4565b61197981611fe9565b61197981611fec565b61197981612023565b6119798161202e565b6000611a1b603f83611fd0565b7f4f7065726174696f6e616c206d6f6465206973206e6f74206e6f726d616c205b81527f436f6e666967757261626c654f7065726174696f6e616c2e736f6c3a32325d00602082015260400192915050565b6000611a7a602d83611fd0565b7f5472616465207365616c206e6f742067656e75696e65205b56616c696461746181526c626c6556322e736f6c3a37305d60981b602082015260400192915050565b6000611ac9602c83611fd0565b7f57616c6c6574206c6f636b65722066726f7a656e205b57616c6c65744c6f636b81526b61626c652e736f6c3a34335d60a01b602082015260400192915050565b80516040830190611b1b848261197f565b5060208201516102d960208501826119ea565b80516040830190611b1b84826119ea565b80516060830190611b5084826119ea565b5060208201516102d96020850182611b0a565b80516080830190611b748482611b0a565b5060208201516102d96040850182611b0a565b80516080830190611b988482611b2e565b5060208201516102d96040850182611b2e565b80516080830190611bbc84826119ea565b5060208201516102d96020850182611b3f565b80516080830190611be084826119ea565b5060208201516102d9602085018280516060830190611bff84826119ea565b506020820151611c1260208501826119ea565b5060408201516102d96040850182611dfc565b80516000906080840190611c398582611b3f565b5060208301518482036060860152611c518282611988565b95945050505050565b805160a0830190611c6b84826119ea565b506020820151611c7e6020850182611b2e565b5060408201516102d96060850182611b2e565b80516000906101c0840190611ca685826119ea565b506020830151611cb9602086018261197f565b506040830151611ccc60408601826119ea565b506060830151611cdf60608601826119fc565b506080830151611cf26080860182611c5a565b5060a0830151611d06610120860182611b87565b5060c08301518482036101a0860152611c518282611c25565b8051600090610260840190611d3485826119ea565b506020830151611d4760208601826119ea565b506040830151611d5a6040860182611b63565b506060830151611d6d60c08601826119ea565b50608083015184820360e0860152611d858282611c91565b91505060a0830151848203610100860152611da08282611c91565b91505060c0830151611db6610120860182611b87565b5060e0830151611dca6101a0860182611bcf565b50610100830151611ddf6102208601826119ea565b50610120830151611df46102408601826119ea565b509392505050565b61197981612012565b6020810161136d828461197f565b6020810161136d8284611970565b60608101611e2f8286611970565b611e3c60208301856119ea565b6118c66040830184611a05565b60408101611e57828561197f565b611e64602083018461197f565b9392505050565b60c08101611e79828961197f565b611e866020830188611970565b611e9360408301876119ea565b611ea0606083018661197f565b611ead60808301856119ea565b611eba60a0830184611a05565b979650505050505050565b6020810161136d82846119e1565b6020810161136d82846119ea565b60808101611eef82876119ea565b611efc6020830186611970565b611f09604083018561197f565b611c51606083018461197f565b6020810161136d82846119f3565b60408101611f3282856119f3565b611e6460208301846119f3565b6020808252810161136d81611a0e565b6020808252810161136d81611a6d565b6020808252810161136d81611abc565b60208082528101611e648184611d1f565b6040518181016001600160401b0381118282101715611f9e57600080fd5b604052919050565b60006001600160401b03821115611fbc57600080fd5b5060209081020190565b60200190565b5190565b90815260200190565b600061136d82612006565b151590565b90565b600061136d82611fd9565b8061200181612039565b919050565b6001600160a01b031690565b60ff1690565b600061136d82611fec565b600061136d82611ff7565b600061136d82611fe9565b6002811061204357fe5b50565b61204f81611fd9565b811461204357600080fd5b61204f81611fe4565b61204f81611fe9565b61204f81611fec565b6002811061204357600080fd5b61204f8161201256fea365627a7a7231582061f73c8b6acfda599156e4d19c9960f6a1b2c145b273a2500e48fe59c03a29706c6578706572696d656e74616cf564736f6c634300050c0040",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101075760003560e01c806301370d061461010c5780631327d3d81461012157806316cabd4714610134578063240625d8146101475780632738a112146101655780632f013a001461016d5780633a5381b5146101755780633bd7857f1461018a5780634476d23b14610192578063570ca735146101a75780635dc60def146101af578063627f09c3146101b75780636792ce6e146101ca5780636b0570d0146101dd5780636c70bee9146101e557806370327ea1146101ed578063892860b2146101f55780639621473514610208578063b3ab15fb1461021b578063d5f394881461022e578063e8ae41e314610236575b600080fd5b61011f61011a3660046118ec565b61023e565b005b61011f61012f3660046118ec565b6102df565b61011f61014236600461190a565b610370565b61014f610e48565b60405161015c9190611ec5565b60405180910390f35b61011f610e58565b61014f610ebe565b61017d610ec7565b60405161015c9190611f16565b61017d610ed6565b61019a610ee5565b60405161015c9190611e05565b61019a610ef9565b61011f610f08565b61011f6101c53660046118ec565b610f57565b61011f6101d83660046118ec565b610fe8565b61017d611079565b61017d611088565b61011f611097565b61011f6102033660046118ec565b6110fa565b61011f6102163660046118a8565b6111b5565b61011f6102293660046118a8565b611275565b61019a611318565b61017d61132c565b61024661133b565b61024f57600080fd5b806001600160a01b03811661026357600080fd5b60025482906001600160a01b0390811690821681146102d957600280546001600160a01b038681166001600160a01b03198316179092556040519116907f07998fa7be97abe2427246ae4688298c89d6196bbffdf0997b9495a8d27bc673906102cf9083908890611f24565b60405180910390a1505b50505050565b6102e761133b565b6102f057600080fd5b806001600160a01b03811661030457600080fd5b60045482906001600160a01b0390811690821681146102d957600480546001600160a01b038681166001600160a01b03198316179092556040519116907f1882af944a16549c3d4f60e3cd26f158b0c7aac3222cf32971fc21375ce05f60906102cf9083908890611f24565b600360009054906101000a90046001600160a01b03166001600160a01b031663f71e860f6040518163ffffffff1660e01b815260040160206040518083038186803b1580156103be57600080fd5b505afa1580156103d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506103f691908101906118ce565b61041b5760405162461bcd60e51b815260040161041290611f3f565b60405180910390fd5b60048054604051637211c8c760e11b815283926001600160a01b039092169163e423918e9161044c91859101611f6f565b60206040518083038186803b15801561046457600080fd5b505afa158015610478573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061049c91908101906118ce565b6104b85760405162461bcd60e51b815260040161041290611f4f565b6004805460405163d587271760e01b81526000926001600160a01b039092169163d5872717916104ea91879101611f6f565b60206040518083038186803b15801561050257600080fd5b505afa158015610516573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061053a91908101906118ce565b6106485760048054604051632b1a3a1960e11b81526001600160a01b039091169163563474329161056d91879101611f6f565b60206040518083038186803b15801561058557600080fd5b505afa158015610599573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506105bd91908101906118ce565b8015610643575060048054604051633427a68760e21b81526001600160a01b039091169163d09e9a1c916105f391879101611f6f565b60206040518083038186803b15801561060b57600080fd5b505afa15801561061f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061064391908101906118ce565b61074d565b600480546040516349c3fc7760e11b81526001600160a01b0390911691639387f8ee9161067791879101611f6f565b60206040518083038186803b15801561068f57600080fd5b505afa1580156106a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506106c791908101906118ce565b801561074d57506004805460405163b0ee5a5b60e01b81526001600160a01b039091169163b0ee5a5b916106fd91879101611f6f565b60206040518083038186803b15801561071557600080fd5b505afa158015610729573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061074d91908101906118ce565b60048054604051637105512560e11b81529293506000926001600160a01b039091169163e20aa24a9161078291889101611f6f565b60206040518083038186803b15801561079a57600080fd5b505afa1580156107ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506107d291908101906118ce565b6108e057600480546040516377a901cd60e01b81526001600160a01b03909116916377a901cd9161080591889101611f6f565b60206040518083038186803b15801561081d57600080fd5b505afa158015610831573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061085591908101906118ce565b80156108db575060048054604051630e88468f60e21b81526001600160a01b0390911691633a211a3c9161088b91889101611f6f565b60206040518083038186803b1580156108a357600080fd5b505afa1580156108b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506108db91908101906118ce565b6109e5565b6004805460405163095f4df760e41b81526001600160a01b03909116916395f4df709161090f91889101611f6f565b60206040518083038186803b15801561092757600080fd5b505afa15801561093b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061095f91908101906118ce565b80156109e557506004805460405163d2e362a160e01b81526001600160a01b039091169163d2e362a19161099591889101611f6f565b60206040518083038186803b1580156109ad57600080fd5b505afa1580156109c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506109e591908101906118ce565b90508180156109f15750805b156109fb57600080fd5b600360009054906101000a90046001600160a01b03166001600160a01b031663f8e6e8886040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610a4b57600080fd5b505af1158015610a5f573d6000803e3d6000fd5b505060025460e0870151516040516375d8655b60e01b81526001600160a01b0390921693506375d8655b9250610a9791600401611ed3565b600060405180830381600087803b158015610ab157600080fd5b505af1158015610ac5573d6000803e3d6000fd5b505060055460035460408051639699f33760e01b815290516001600160a01b03938416955063760b82929450339390921691639699f33791600480820192602092909190829003018186803b158015610b1d57600080fd5b505afa158015610b31573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610b55919081019061193e565b60006040518463ffffffff1660e01b8152600401610b7593929190611e21565b600060405180830381600087803b158015610b8f57600080fd5b505af1158015610ba3573d6000803e3d6000fd5b5050505081610cbd57600654608085015160208082015160a09092015151516040808901515180519301519051634d2a299160e11b81526001600160a01b0390951694639a54532294610c0194909333939092600090600401611e6b565b600060405180830381600087803b158015610c1b57600080fd5b505af1158015610c2f573d6000803e3d6000fd5b5050600654608087015160208082015160a090920151810151516040808b015183015180519301519051634d2a299160e11b81526001600160a01b039095169650639a5453229550610c8a9433939190600090600401611e6b565b600060405180830381600087803b158015610ca457600080fd5b505af1158015610cb8573d6000803e3d6000fd5b505050505b80610dd55760065460a080860151602080820151919092015151516040808901515180519401519051634d2a299160e11b81526001600160a01b0390951694639a54532294610d16949333939092600090600401611e6b565b600060405180830381600087803b158015610d3057600080fd5b505af1158015610d44573d6000803e3d6000fd5b505060065460a0808801516020808201519190920151820151516040808b015184015180519401519051634d2a299160e11b81526001600160a01b039095169650639a5453229550610da29492933393909190600090600401611e6b565b600060405180830381600087803b158015610dbc57600080fd5b505af1158015610dd0573d6000803e3d6000fd5b505050505b60e0840151517f4b1c77e1b2b1e3866c73bbddcaf9f4cad172b890bfab938da442005e1234d407903384610e1157866080015160200151610e14565b60005b84610e27578760a0015160200151610e2a565b60005b604051610e3a9493929190611ee1565b60405180910390a150505050565b600654600160a01b900460ff1681565b33610e61610ee5565b6001600160a01b031614610e7457600080fd5b60005460ff1615610e8457600080fd5b7f787a5d936e74f4b564b9153575886059829c78cd9927b1be5e0d976b317ef73633604051610eb39190611e13565b60405180910390a133ff5b60005460ff1681565b6004546001600160a01b031681565b6002546001600160a01b031681565b60005461010090046001600160a01b031690565b6001546001600160a01b031681565b610f1061133b565b610f1957600080fd5b6006805460ff60a01b1916600160a01b1790556040517f56ec8900b9c4bf84f4b715a53068ca06961dd49084c07b481931e2c2045346e690600090a1565b610f5f61133b565b610f6857600080fd5b806001600160a01b038116610f7c57600080fd5b60035482906001600160a01b0390811690821681146102d957600380546001600160a01b038681166001600160a01b03198316179092556040519116907f634f61bf00e14adedce330c80c2823e16e184f189ebe853e1ddecc4a268477ff906102cf9083908890611f24565b610ff061133b565b610ff957600080fd5b806001600160a01b03811661100d57600080fd5b60055482906001600160a01b0390811690821681146102d957600580546001600160a01b038681166001600160a01b03198316179092556040519116907fc9f3f00c1760fe26985aeacb814a21c56ea289d680562e89b249681b08c30382906102cf9083908890611f24565b6005546001600160a01b031681565b6003546001600160a01b031681565b336110a0610ee5565b6001600160a01b0316146110b357600080fd5b6000805460ff191660011790556040517fd5a2a04a775c741c2ca0dc46ea7ce4835190e1aaf1ca018def0e82568ec33616906110f0903390611e13565b60405180910390a1565b61110261133b565b61110b57600080fd5b806001600160a01b03811661111f57600080fd5b60065482906001600160a01b0390811690821681146102d957600654600160a01b900460ff16156111625760405162461bcd60e51b815260040161041290611f5f565b600680546001600160a01b038681166001600160a01b03198316179092556040519116907fa44d361e26327b72a7ccbeae801b3c5cd7677ea4fa74168b289e273c46bfecfc906102cf9083908890611f24565b6111bd61133b565b6111c657600080fd5b806001600160a01b0381166111da57600080fd5b6001600160a01b0381163014156111f057600080fd5b6000546001600160a01b03838116610100909204161461127157600080546001600160a01b03848116610100908102610100600160a81b03198416179093556040519290910416907f977e5fa58e458501775e0008d275006294c5249e3c08d1d0e3a9f3acad14f6e4906112679083908690611e49565b60405180910390a1505b5050565b61127d611351565b61128657600080fd5b806001600160a01b03811661129a57600080fd5b6001600160a01b0381163014156112b057600080fd5b6001546001600160a01b0383811691161461127157600180546001600160a01b038481166001600160a01b03198316179092556040519116907f9f611b789425d0d5b90b920f1b2852907dd865c80074a30b1629aaa041d1812c906112679083908690611e49565b60005461010090046001600160a01b031681565b6006546001600160a01b031681565b60005461010090046001600160a01b0316331490565b6001546001600160a01b0316331490565b803561136d81612046565b92915050565b600082601f83011261138457600080fd5b813561139761139282611fa6565b611f80565b915081818352602084019350602081019050838560808402820111156113bc57600080fd5b60005b838110156113ea57816113d28882611542565b845250602090920191608091909101906001016113bf565b5050505092915050565b805161136d8161205a565b803561136d81612063565b803561136d8161206c565b803561136d81612075565b60006040828403121561143257600080fd5b61143c6040611f80565b9050600061144a8484611362565b825250602061145b848483016113ff565b60208301525092915050565b60006040828403121561147957600080fd5b6114836040611f80565b9050600061144a84846113ff565b6000606082840312156114a357600080fd5b6114ad6040611f80565b905060006114bb84846113ff565b825250602061145b84848301611420565b6000608082840312156114de57600080fd5b6114e86040611f80565b905060006114f68484611420565b825250604061145b84848301611420565b60006080828403121561151957600080fd5b6115236040611f80565b905060006115318484611467565b825250604061145b84848301611467565b60006080828403121561155457600080fd5b61155e6040611f80565b9050600061156c84846113ff565b825250602061145b84848301611491565b60006080828403121561158f57600080fd5b6115996040611f80565b905060006115a784846113ff565b825250602061145b848483016000606082840312156115c557600080fd5b6115cf6060611f80565b905060006115dd84846113ff565b82525060206115ee848483016113ff565b60208301525060406116028482850161189d565b60408301525092915050565b60006080828403121561162057600080fd5b61162a6040611f80565b905060006116388484611491565b82525060608201356001600160401b0381111561165457600080fd5b61145b84828501611373565b600060a0828403121561167257600080fd5b61167c6060611f80565b9050600061168a84846113ff565b825250602061169b84848301611467565b602083015250606061160284828501611467565b60006101c082840312156116c257600080fd5b6116cc60e0611f80565b905060006116da84846113ff565b82525060206116eb84848301611362565b60208301525060406116ff848285016113ff565b604083015250606061171384828501611415565b606083015250608061172784828501611660565b60808301525061012061173c84828501611507565b60a0830152506101a08201356001600160401b0381111561175c57600080fd5b6117688482850161160e565b60c08301525092915050565b6000610260828403121561178757600080fd5b611792610140611f80565b905060006117a084846113ff565b82525060206117b1848483016113ff565b60208301525060406117c5848285016114cc565b60408301525060c06117d9848285016113ff565b60608301525060e08201356001600160401b038111156117f857600080fd5b611804848285016116af565b6080830152506101008201356001600160401b0381111561182457600080fd5b611830848285016116af565b60a08301525061012061184584828501611507565b60c0830152506101a061185a8482850161157d565b60e08301525061022061186f848285016113ff565b61010083015250610240611885848285016113ff565b6101208301525092915050565b805161136d81612063565b803561136d81612082565b6000602082840312156118ba57600080fd5b60006118c68484611362565b949350505050565b6000602082840312156118e057600080fd5b60006118c684846113f4565b6000602082840312156118fe57600080fd5b60006118c6848461140a565b60006020828403121561191c57600080fd5b81356001600160401b0381111561193257600080fd5b6118c684828501611774565b60006020828403121561195057600080fd5b60006118c68484611892565b60006119688383611bab565b505060800190565b61197981612018565b82525050565b61197981611fd9565b600061199382611fcc565b61199d8185611fd0565b93506119a883611fc6565b8060005b838110156119d65781516119c0888261195c565b97506119cb83611fc6565b9250506001016119ac565b509495945050505050565b61197981611fe4565b61197981611fe9565b61197981611fec565b61197981612023565b6119798161202e565b6000611a1b603f83611fd0565b7f4f7065726174696f6e616c206d6f6465206973206e6f74206e6f726d616c205b81527f436f6e666967757261626c654f7065726174696f6e616c2e736f6c3a32325d00602082015260400192915050565b6000611a7a602d83611fd0565b7f5472616465207365616c206e6f742067656e75696e65205b56616c696461746181526c626c6556322e736f6c3a37305d60981b602082015260400192915050565b6000611ac9602c83611fd0565b7f57616c6c6574206c6f636b65722066726f7a656e205b57616c6c65744c6f636b81526b61626c652e736f6c3a34335d60a01b602082015260400192915050565b80516040830190611b1b848261197f565b5060208201516102d960208501826119ea565b80516040830190611b1b84826119ea565b80516060830190611b5084826119ea565b5060208201516102d96020850182611b0a565b80516080830190611b748482611b0a565b5060208201516102d96040850182611b0a565b80516080830190611b988482611b2e565b5060208201516102d96040850182611b2e565b80516080830190611bbc84826119ea565b5060208201516102d96020850182611b3f565b80516080830190611be084826119ea565b5060208201516102d9602085018280516060830190611bff84826119ea565b506020820151611c1260208501826119ea565b5060408201516102d96040850182611dfc565b80516000906080840190611c398582611b3f565b5060208301518482036060860152611c518282611988565b95945050505050565b805160a0830190611c6b84826119ea565b506020820151611c7e6020850182611b2e565b5060408201516102d96060850182611b2e565b80516000906101c0840190611ca685826119ea565b506020830151611cb9602086018261197f565b506040830151611ccc60408601826119ea565b506060830151611cdf60608601826119fc565b506080830151611cf26080860182611c5a565b5060a0830151611d06610120860182611b87565b5060c08301518482036101a0860152611c518282611c25565b8051600090610260840190611d3485826119ea565b506020830151611d4760208601826119ea565b506040830151611d5a6040860182611b63565b506060830151611d6d60c08601826119ea565b50608083015184820360e0860152611d858282611c91565b91505060a0830151848203610100860152611da08282611c91565b91505060c0830151611db6610120860182611b87565b5060e0830151611dca6101a0860182611bcf565b50610100830151611ddf6102208601826119ea565b50610120830151611df46102408601826119ea565b509392505050565b61197981612012565b6020810161136d828461197f565b6020810161136d8284611970565b60608101611e2f8286611970565b611e3c60208301856119ea565b6118c66040830184611a05565b60408101611e57828561197f565b611e64602083018461197f565b9392505050565b60c08101611e79828961197f565b611e866020830188611970565b611e9360408301876119ea565b611ea0606083018661197f565b611ead60808301856119ea565b611eba60a0830184611a05565b979650505050505050565b6020810161136d82846119e1565b6020810161136d82846119ea565b60808101611eef82876119ea565b611efc6020830186611970565b611f09604083018561197f565b611c51606083018461197f565b6020810161136d82846119f3565b60408101611f3282856119f3565b611e6460208301846119f3565b6020808252810161136d81611a0e565b6020808252810161136d81611a6d565b6020808252810161136d81611abc565b60208082528101611e648184611d1f565b6040518181016001600160401b0381118282101715611f9e57600080fd5b604052919050565b60006001600160401b03821115611fbc57600080fd5b5060209081020190565b60200190565b5190565b90815260200190565b600061136d82612006565b151590565b90565b600061136d82611fd9565b8061200181612039565b919050565b6001600160a01b031690565b60ff1690565b600061136d82611fec565b600061136d82611ff7565b600061136d82611fe9565b6002811061204357fe5b50565b61204f81611fd9565b811461204357600080fd5b61204f81611fe4565b61204f81611fe9565b61204f81611fec565b6002811061204357600080fd5b61204f8161201256fea365627a7a7231582061f73c8b6acfda599156e4d19c9960f6a1b2c145b273a2500e48fe59c03a29706c6578706572696d656e74616cf564736f6c634300050c0040",
  "sourceMap": "758:3634:46:-;;;1342:62;8:9:-1;5:2;;;30:1;27;20:12;5:2;1342:62:46;;;;;;;;;;;;;;;;;;;;;1380:8;;-1:-1:-1;;;;;681:22:51;;673:31;;;;;;-1:-1:-1;;;;;722:25:51;;742:4;722:25;;714:34;;;;;;-1:-1:-1;1105:8:65;:20;;-1:-1:-1;;;;;;1105:20:65;;-1:-1:-1;;;;;1105:20:65;;;;;;;;;;-1:-1:-1;1135:20:65;;-1:-1:-1;;;;;;1135:20:65;;;;;;-1:-1:-1;758:3634:46;;5:134:-1;83:13;;101:33;83:13;101:33;;;68:71;;;;;146:263;;261:2;249:9;240:7;236:23;232:32;229:2;;;277:1;274;267:12;229:2;312:1;329:64;385:7;365:9;329:64;;;319:74;223:186;-1:-1;;;;223:186;416:91;;-1:-1;;;;;576:54;;478:24;559:76;642:117;711:24;729:5;711:24;;;704:5;701:35;691:2;;750:1;747;740:12;691:2;685:74;;;758:3634:46;;;;;;",
  "deployedSourceMap": "758:3634:46:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;758:3634:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1097:457:37;;;;;;;;;:::i;:::-;;1196:384:98;;;;;;;;;:::i;1679:2711:46:-;;;;;;;;;:::i;558:30:101:-;;;:::i;:::-;;;;;;;;;;;;;;;;1449:425:80;;;:::i;421:35::-;;;:::i;676:28:98:-;;;:::i;:::-;;;;;;;;532:36:37;;;:::i;1390:100:65:-;;;:::i;:::-;;;;;;;;563:23;;;:::i;1818:167:101:-;;;:::i;1068:441:19:-;;;;;;;;;:::i;1069:426:79:-;;;;;;;;;:::i;524:32::-;;;:::i;514:34:19:-;;;:::i;1091:314:80:-;;;:::i;1138:564:101:-;;;;;;;;;:::i;1605:368:65:-;;;;;;;;;:::i;2088:::-;;;;;;;;;:::i;534:23::-;;;:::i;520:32:101:-;;;:::i;1097:457:37:-;3461:12:65;:10;:12::i;:::-;3453:21;;;;;;1213:17:37;-1:-1:-1;;;;;458:22:51;;450:31;;;;;;1290:14:37;;1262:17;;-1:-1:-1;;;;;1290:14:37;;;;850:22:51;;;;846:41;;1391:14:37;;;-1:-1:-1;;;;;1415:34:37;;;-1:-1:-1;;;;;;1415:34:37;;;;;;1487:60;;1391:14;;;1487:60;;;;1391:14;;1432:17;;1487:60;;;;;;;;;;886:1:51;846:41;491:1;;3484::65;1097:457:37;:::o;1196:384:98:-;3461:12:65;:10;:12::i;:::-;3453:21;;;;;;1299:12:98;-1:-1:-1;;;;;458:22:51;;450:31;;;;;;1366:9:98;;1343:12;;-1:-1:-1;;;;;1366:9:98;;;;850:22:51;;;;846:41;;1447:9:98;;;-1:-1:-1;;;;;1466:24:98;;;-1:-1:-1;;;;;;1466:24:98;;;;;;1528:45;;1447:9;;;1528:45;;;;1447:9;;1478:12;;1528:45;;1679:2711:46;582:13:20;;;;;;;;;-1:-1:-1;;;;;582:13:20;-1:-1:-1;;;;;582:37:20;;:39;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;582:39:20;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;582:39:20;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;582:39:20;;;;;;;;;574:115;;;;-1:-1:-1;;;574:115:20;;;;;;;;;;;;;;;;;2366:9:98;;;:35;;-1:-1:-1;;;2366:35:98;;1793:5:46;;-1:-1:-1;;;;;2366:9:98;;;;:28;;:35;;1793:5:46;;2366:35:98;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2366:35:98;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2366:35:98;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;2366:35:98;;;;;;;;;2358:93;;;;-1:-1:-1;;;2358:93:98;;;;;;;;;1881:9:46;;;:51;;-1:-1:-1;;;1881:51:46;;1855:23;;-1:-1:-1;;;;;1881:9:46;;;;:44;;:51;;1926:5;;1881:51;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1881:51:46;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1881:51:46;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;1881:51:46;;;;;;;;;:277;;2059:9;;;:46;;-1:-1:-1;;;2059:46:46;;-1:-1:-1;;;;;2059:9:46;;;;:39;;:46;;2099:5;;2059:46;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2059:46:46;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2059:46:46;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;2059:46:46;;;;;;;;;:99;;;;-1:-1:-1;2109:9:46;;;:49;;-1:-1:-1;;;2109:49:46;;-1:-1:-1;;;;;2109:9:46;;;;:42;;:49;;2152:5;;2109:49;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2109:49:46;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2109:49:46;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;2109:49:46;;;;;;;;;1881:277;;;1943:9;;;:49;;-1:-1:-1;;;1943:49:46;;-1:-1:-1;;;;;1943:9:46;;;;:42;;:49;;1986:5;;1943:49;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1943:49:46;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1943:49:46;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;1943:49:46;;;;;;;;;:105;;;;-1:-1:-1;1996:9:46;;;:52;;-1:-1:-1;;;1996:52:46;;-1:-1:-1;;;;;1996:9:46;;;;:45;;:52;;2042:5;;1996:52;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1996:52:46;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1996:52:46;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;1996:52:46;;;;;;;;;2238:9;;;:52;;-1:-1:-1;;;2238:52:46;;1855:303;;-1:-1:-1;2211:24:46;;-1:-1:-1;;;;;2238:9:46;;;;:45;;:52;;2284:5;;2238:52;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2238:52:46;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2238:52:46;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;2238:52:46;;;;;;;;;:282;;2419:9;;;:47;;-1:-1:-1;;;2419:47:46;;-1:-1:-1;;;;;2419:9:46;;;;:40;;:47;;2460:5;;2419:47;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2419:47:46;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2419:47:46;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;2419:47:46;;;;;;;;;:101;;;;-1:-1:-1;2470:9:46;;;:50;;-1:-1:-1;;;2470:50:46;;-1:-1:-1;;;;;2470:9:46;;;;:43;;:50;;2514:5;;2470:50;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2470:50:46;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2470:50:46;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;2470:50:46;;;;;;;;;2238:282;;;2301:9;;;:50;;-1:-1:-1;;;2301:50:46;;-1:-1:-1;;;;;2301:9:46;;;;:43;;:50;;2345:5;;2301:50;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2301:50:46;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2301:50:46;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;2301:50:46;;;;;;;;;:107;;;;-1:-1:-1;2355:9:46;;;:53;;-1:-1:-1;;;2355:53:46;;-1:-1:-1;;;;;2355:9:46;;;;:46;;:53;;2402:5;;2355:53;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2355:53:46;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2355:53:46;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;2355:53:46;;;;;;;;;2211:309;;2586:18;:41;;;;;2608:19;2586:41;2584:44;2576:53;;;;;;2680:13;;;;;;;;;-1:-1:-1;;;;;2680:13:46;-1:-1:-1;;;;;2680:36:46;;:38;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2680:38:46;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;2771:14:46;;2809:10;;;;:15;2771:54;;-1:-1:-1;;;2771:54:46;;-1:-1:-1;;;;;2771:14:46;;;;-1:-1:-1;2771:37:46;;-1:-1:-1;2771:54:46;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2771:54:46;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;2869:12:46;;2911:13;;:34;;;-1:-1:-1;;;2911:34:46;;;;-1:-1:-1;;;;;2869:12:46;;;;-1:-1:-1;2869:29:46;;-1:-1:-1;2899:10:46;;2911:13;;;;:32;;:34;;;;;;;;;;;;;;;:13;:34;;;5:2:-1;;;;30:1;27;20:12;5:2;2911:34:46;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2911:34:46;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;2911:34:46;;;;;;;;;2947:1;2869:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2869:80:46;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2869:80:46;;;;3056:18;3051:491;;3090:12;;3140:11;;;;:18;;;;;3172:20;;;;;:29;:37;3227:16;;;;;:25;:28;;3257;;;3090:212;;-1:-1:-1;;;3090:212:46;;-1:-1:-1;;;;;3090:12:46;;;;:32;;:212;;3140:18;;3160:10;;3172:37;;3090:12;;:212;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3090:212:46;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;3316:12:46;;3366:11;;;;:18;;;;;3398:20;;;;;:30;;;:38;3454:16;;;;;:26;;;:29;;3485;;;3316:215;;-1:-1:-1;;;3316:215:46;;-1:-1:-1;;;;;3316:12:46;;;;-1:-1:-1;3316:32:46;;-1:-1:-1;3316:215:46;;3386:10;;3454:29;3485;3316:12;;:215;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3316:215:46;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3316:215:46;;;;3051:491;3649:19;3644:496;;3684:12;;3734;;;;;:19;;;;;3767:21;;;;;:30;:38;3823:16;;;;;:25;:28;;3853;;;3684:214;;-1:-1:-1;;;3684:214:46;;-1:-1:-1;;;;;3684:12:46;;;;:32;;:214;;3734:19;3755:10;;3767:38;;3684:12;;:214;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3684:214:46;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;3912:12:46;;3962;;;;;:19;;;;;3995:21;;;;;:31;;;:39;4052:16;;;;;:26;;;:29;;4083;;;3912:217;;-1:-1:-1;;;3912:217:46;;-1:-1:-1;;;;;3912:12:46;;;;-1:-1:-1;3912:32:46;;-1:-1:-1;3912:217:46;;3962:19;;3983:10;;4052:29;;4083;3912:12;;:217;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3912:217:46;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3912:217:46;;;;3644:496;4212:10;;;;:15;4177:206;;4229:10;4253:18;:52;;4287:5;:11;;;:18;;;4253:52;;;4282:1;4253:52;4319:19;:54;;4354:5;:12;;;:19;;;4319:54;;;4349:1;4319:54;4177:206;;;;;;;;;;;;;;;;;;2461:1:98;;699::20;1679:2711:46;:::o;558:30:101:-;;;-1:-1:-1;;;558:30:101;;;;;:::o;1449:425:80:-;1590:10;1574:12;:10;:12::i;:::-;-1:-1:-1;;;;;1574:26:80;;1566:35;;;;;;1684:23;;;;1683:24;1675:33;;;;;;1746:39;1774:10;1746:39;;;;;;;;;;;;;;;1856:10;1843:24;421:35;;;;;;:::o;676:28:98:-;;;-1:-1:-1;;;;;676:28:98;;:::o;532:36:37:-;;;-1:-1:-1;;;;;532:36:37;;:::o;1390:100:65:-;1445:7;1475:8;;;;-1:-1:-1;;;;;1475:8:65;;1390:100::o;563:23::-;;;-1:-1:-1;;;;;563:23:65;;:::o;1818:167:101:-;3461:12:65;:10;:12::i;:::-;3453:21;;;;;;1890:18:101;:25;;-1:-1:-1;;;;1890:25:101;-1:-1:-1;;;1890:25:101;;;1953;;;;1890;;1953;1818:167::o;1068:441:19:-;3461:12:65;:10;:12::i;:::-;3453:21;;;;;;1181:16:19;-1:-1:-1;;;;;458:22:51;;450:31;;;;;;1256:13:19;;1229:16;;-1:-1:-1;;;;;1256:13:19;;;;850:22:51;;;;846:41;;1352:13:19;;;-1:-1:-1;;;;;1375:32:19;;;-1:-1:-1;;;;;;1375:32:19;;;;;;1445:57;;1352:13;;;1445:57;;;;1352:13;;1391:16;;1445:57;;1069:426:79;3461:12:65;:10;:12::i;:::-;3453:21;;;;;;1179:15:79;-1:-1:-1;;;;;458:22:51;;450:31;;;;;;1252:12:79;;1226:15;;-1:-1:-1;;;;;1252:12:79;;;;850:22:51;;;;846:41;;1344:12:79;;;-1:-1:-1;;;;;1366:30:79;;;-1:-1:-1;;;;;;1366:30:79;;;;;;1434:54;;1344:12;;;1434:54;;;;1344:12;;1381:15;;1434:54;;524:32;;;-1:-1:-1;;;;;524:32:79;;:::o;514:34:19:-;;;-1:-1:-1;;;;;514:34:19;;:::o;1091:314:80:-;1232:10;1216:12;:10;:12::i;:::-;-1:-1:-1;;;;;1216:26:80;;1208:35;;;;;;1290:23;:30;;-1:-1:-1;;1290:30:80;1316:4;1290:30;;;1358:40;;;;;;1387:10;;1358:40;;;;;;;;;;1091:314::o;1138:564:101:-;3461:12:65;:10;:12::i;:::-;3453:21;;;;;;1248:15:101;-1:-1:-1;;;;;458:22:51;;450:31;;;;;;1321:12:101;;1295:15;;-1:-1:-1;;;;;1321:12:101;;;;850:22:51;;;;846:41;;1417:18:101;;-1:-1:-1;;;1417:18:101;;;;1416:19;1408:76;;;;-1:-1:-1;;;1408:76:101;;;;;;;;;1551:12;;;-1:-1:-1;;;;;1573:30:101;;;-1:-1:-1;;;;;;1573:30:101;;;;;;1641:54;;1551:12;;;1641:54;;;;1551:12;;1588:15;;1641:54;;1605:368:65;3461:12;:10;:12::i;:::-;3453:21;;;;;;1700:11;-1:-1:-1;;;;;681:22:51;;673:31;;;;;;-1:-1:-1;;;;;722:25:51;;742:4;722:25;;714:34;;;;;;1746:8:65;;-1:-1:-1;;;;;1731:23:65;;;1746:8;;;;;1731:23;1727:240;;1802:19;1824:8;;-1:-1:-1;;;;;1846:22:65;;;1824:8;1846:22;;;-1:-1:-1;;;;;;1846:22:65;;;;;;1914:42;;1824:8;;;;;;1914:42;;;;1824:8;;1857:11;;1914:42;;;;;;;;;;1727:240;;3484:1;1605:368;:::o;2088:::-;3619:12;:10;:12::i;:::-;3611:21;;;;;;2183:11;-1:-1:-1;;;;;681:22:51;;673:31;;;;;;-1:-1:-1;;;;;722:25:51;;742:4;722:25;;714:34;;;;;;2229:8:65;;-1:-1:-1;;;;;2214:23:65;;;2229:8;;2214:23;2210:240;;2307:8;;;-1:-1:-1;;;;;2329:22:65;;;-1:-1:-1;;;;;;2329:22:65;;;;;;2397:42;;2307:8;;;2397:42;;;;2307:8;;2340:11;;2397:42;;534:23;;;;;;-1:-1:-1;;;;;534:23:65;;:::o;520:32:101:-;;;-1:-1:-1;;;;;520:32:101;;:::o;2585:113:65:-;2642:4;2683:8;;;;-1:-1:-1;;;;;2683:8:65;2669:10;:22;;2585:113::o;2827:::-;2925:8;;-1:-1:-1;;;;;2925:8:65;2911:10;:22;;2827:113::o;5:130:-1:-;72:20;;97:33;72:20;97:33;;;57:78;;;;;187:780;;327:3;320:4;312:6;308:17;304:27;294:2;;345:1;342;335:12;294:2;382:6;369:20;404:103;419:87;499:6;419:87;;;404:103;;;395:112;;524:5;549:6;542:5;535:21;579:4;571:6;567:17;557:27;;601:4;596:3;592:14;585:21;;654:6;701:3;693:4;685:6;681:17;676:3;672:27;669:36;666:2;;;718:1;715;708:12;666:2;743:1;728:233;753:6;750:1;747:13;728:233;;;811:3;833:64;893:3;881:10;833:64;;;821:77;;-1:-1;921:4;912:14;;;;949:4;940:14;;;;;775:1;768:9;728:233;;;732:14;287:680;;;;;;;;975:128;1050:13;;1068:30;1050:13;1068:30;;1110:130;1177:20;;1202:33;1177:20;1202:33;;1247:174;1336:20;;1361:55;1336:20;1361:55;;2154:168;2240:20;;2265:52;2240:20;2265:52;;2503:460;;2615:4;2603:9;2598:3;2594:19;2590:30;2587:2;;;2633:1;2630;2623:12;2587:2;2651:20;2666:4;2651:20;;;2642:29;-1:-1;2719:1;2750:49;2795:3;2775:9;2750:49;;;2726:74;;-1:-1;2859:2;2892:49;2937:3;2913:22;;;2892:49;;;2885:4;2878:5;2874:16;2867:75;2821:132;2581:382;;;;;3020:482;;3145:4;3133:9;3128:3;3124:19;3120:30;3117:2;;;3163:1;3160;3153:12;3117:2;3181:20;3196:4;3181:20;;;3172:29;-1:-1;3254:1;3285:48;3329:3;3309:9;3285:48;;3546:490;;3656:4;3644:9;3639:3;3635:19;3631:30;3628:2;;;3674:1;3671;3664:12;3628:2;3692:20;3707:4;3692:20;;;3683:29;-1:-1;3764:1;3795:48;3839:3;3819:9;3795:48;;;3771:73;;-1:-1;3909:2;3942:72;4010:3;3986:22;;;3942:72;;4097:536;;4226:4;4214:9;4209:3;4205:19;4201:30;4198:2;;;4244:1;4241;4234:12;4198:2;4262:20;4277:4;4262:20;;;4253:29;-1:-1;4336:1;4367:72;4435:3;4415:9;4367:72;;;4343:97;;-1:-1;4506:2;4539:72;4607:3;4583:22;;;4539:72;;4707:575;;4849:4;4837:9;4832:3;4828:19;4824:30;4821:2;;;4867:1;4864;4857:12;4821:2;4885:20;4900:4;4885:20;;;4876:29;-1:-1;4959:1;4990:85;5071:3;5051:9;4990:85;;;4966:110;;-1:-1;5142:2;5175:85;5256:3;5232:22;;;5175:85;;5963:495;;6079:4;6067:9;6062:3;6058:19;6054:30;6051:2;;;6097:1;6094;6087:12;6051:2;6115:20;6130:4;6115:20;;;6106:29;-1:-1;6189:1;6220:49;6265:3;6245:9;6220:49;;;6196:74;;-1:-1;6333:2;6366:70;6432:3;6408:22;;;6366:70;;6498:489;;6606:4;6594:9;6589:3;6585:19;6581:30;6578:2;;;6624:1;6621;6614:12;6578:2;6642:20;6657:4;6642:20;;;6633:29;-1:-1;6712:1;6743:49;6788:3;6768:9;6743:49;;;6719:74;;-1:-1;6859:2;6892:73;6961:3;6937:22;;;7032:598;7145:4;7133:9;7128:3;7124:19;7120:30;7117:2;;;7163:1;7160;7153:12;7117:2;7181:20;7196:4;7181:20;;;7172:29;-1:-1;7248:1;7279:49;7324:3;7304:9;7279:49;;;7255:74;;-1:-1;7387:2;7420:49;7465:3;7441:22;;;7420:49;;;7413:4;7406:5;7402:16;7395:75;7350:131;7528:2;7561:47;7604:3;7595:6;7584:9;7580:22;7561:47;;;7554:4;7547:5;7543:16;7536:73;7491:129;7111:519;;;;;7696:644;;7830:4;7818:9;7813:3;7809:19;7805:30;7802:2;;;7848:1;7845;7838:12;7802:2;7866:20;7881:4;7866:20;;;7857:29;-1:-1;7938:1;7969:70;8035:3;8015:9;7969:70;;;7945:95;;-1:-1;8130:2;8115:18;;8102:32;-1:-1;;;;;8143:30;;8140:2;;;8186:1;8183;8176:12;8140:2;8221:97;8314:3;8305:6;8294:9;8290:22;8221:97;;8912:689;;9026:4;9014:9;9009:3;9005:19;9001:30;8998:2;;;9044:1;9041;9034:12;8998:2;9062:20;9077:4;9062:20;;;9053:29;-1:-1;9134:1;9165:48;9209:3;9189:9;9165:48;;;9141:73;;-1:-1;9277:2;9310:84;9390:3;9366:22;;;9310:84;;;9303:4;9296:5;9292:16;9285:110;9235:171;9461:2;9494:85;9575:3;9566:6;9555:9;9551:22;9494:85;;9646:1444;;9760:5;9748:9;9743:3;9739:19;9735:31;9732:2;;;9779:1;9776;9769:12;9732:2;9797:20;9812:4;9797:20;;;9788:29;-1:-1;9868:1;9899:49;9944:3;9924:9;9899:49;;;9875:74;;-1:-1;10012:2;10045:49;10090:3;10066:22;;;10045:49;;;10038:4;10031:5;10027:16;10020:75;9970:136;10165:2;10198:49;10243:3;10234:6;10223:9;10219:22;10198:49;;;10191:4;10184:5;10180:16;10173:75;10116:143;10318:2;10351:68;10415:3;10406:6;10395:9;10391:22;10351:68;;;10344:4;10337:5;10333:16;10326:94;10269:162;10482:3;10516:74;10586:3;10577:6;10566:9;10562:22;10516:74;;;10509:4;10502:5;10498:16;10491:100;10441:161;10656:3;10690:102;10788:3;10779:6;10768:9;10764:22;10690:102;;;10683:4;10676:5;10672:16;10665:128;10612:192;10882:3;10871:9;10867:19;10854:33;-1:-1;;;;;10899:6;10896:30;10893:2;;;10939:1;10936;10929:12;10893:2;10974:94;11064:3;11055:6;11044:9;11040:22;10974:94;;;10967:4;10960:5;10956:16;10949:120;10814:266;9726:1364;;;;;11130:1986;;11243:5;11231:9;11226:3;11222:19;11218:31;11215:2;;;11262:1;11259;11252:12;11215:2;11280:21;11295:5;11280:21;;;11271:30;-1:-1;11352:1;11383:49;11428:3;11408:9;11383:49;;;11359:74;;-1:-1;11496:2;11529:48;11573:3;11549:22;;;11529:48;;;11522:4;11515:5;11511:16;11504:74;11454:135;11645:2;11678:89;11763:3;11754:6;11743:9;11739:22;11678:89;;;11671:4;11664:5;11660:16;11653:115;11599:180;11829:3;11863:48;11907:3;11898:6;11887:9;11883:22;11863:48;;;11856:4;11849:5;11845:16;11838:74;11789:134;12002:3;11991:9;11987:19;11974:33;-1:-1;;;;;12019:6;12016:30;12013:2;;;12059:1;12056;12049:12;12013:2;12094:74;12164:3;12155:6;12144:9;12140:22;12094:74;;;12087:4;12080:5;12076:16;12069:100;11933:247;12260:3;12249:9;12245:19;12232:33;-1:-1;;;;;12277:6;12274:30;12271:2;;;12317:1;12314;12307:12;12271:2;12352:74;12422:3;12413:6;12402:9;12398:22;12352:74;;;12345:4;12338:5;12334:16;12327:100;12190:248;12493:3;12527:98;12621:3;12612:6;12601:9;12597:22;12527:98;;;12520:4;12513:5;12509:16;12502:124;12448:189;12687:3;12721:68;12785:3;12776:6;12765:9;12761:22;12721:68;;;12714:4;12707:5;12703:16;12696:94;12647:154;12858:3;12893:49;12938:3;12929:6;12918:9;12914:22;12893:49;;;12885:5;12878;12874:17;12867:76;12811:143;13010:3;13045:49;13090:3;13081:6;13070:9;13066:22;13045:49;;;13037:5;13030;13026:17;13019:76;12964:142;11209:1907;;;;;13798:134;13876:13;;13894:33;13876:13;13894:33;;13939:126;14004:20;;14029:31;14004:20;14029:31;;14072:241;;14176:2;14164:9;14155:7;14151:23;14147:32;14144:2;;;14192:1;14189;14182:12;14144:2;14227:1;14244:53;14289:7;14269:9;14244:53;;;14234:63;14138:175;-1:-1;;;;14138:175;14320:257;;14432:2;14420:9;14411:7;14407:23;14403:32;14400:2;;;14448:1;14445;14438:12;14400:2;14483:1;14500:61;14553:7;14533:9;14500:61;;14584:285;;14710:2;14698:9;14689:7;14685:23;14681:32;14678:2;;;14726:1;14723;14716:12;14678:2;14761:1;14778:75;14845:7;14825:9;14778:75;;16046:375;;16174:2;16162:9;16153:7;16149:23;16145:32;16142:2;;;16190:1;16187;16180:12;16142:2;16225:31;;-1:-1;;;;;16265:30;;16262:2;;;16308:1;16305;16298:12;16262:2;16328:77;16397:7;16388:6;16377:9;16373:22;16328:77;;16428:263;;16543:2;16531:9;16522:7;16518:23;16514:32;16511:2;;;16559:1;16556;16549:12;16511:2;16594:1;16611:64;16667:7;16647:9;16611:64;;16699:285;;16840:104;16940:3;16932:6;16840:104;;;-1:-1;;16973:4;16964:14;;16833:151;16992:142;17083:45;17122:5;17083:45;;;17078:3;17071:58;17065:69;;;17141:103;17214:24;17232:5;17214:24;;17456:870;;17641:77;17712:5;17641:77;;;17731:103;17827:6;17822:3;17731:103;;;17724:110;;17855:79;17928:5;17855:79;;;17954:7;17982:1;17967:337;17992:6;17989:1;17986:13;17967:337;;;18059:6;18053:13;18080:117;18193:3;18178:13;18080:117;;;18073:124;;18214:83;18290:6;18214:83;;;18204:93;-1:-1;;18014:1;18007:9;17967:337;;;-1:-1;18317:3;;17620:706;-1:-1;;;;;17620:706;18334:104;18411:21;18426:5;18411:21;;18445:103;18518:24;18536:5;18518:24;;18675:170;18780:59;18833:5;18780:59;;19578:150;19668:54;19716:5;19668:54;;19959:142;20050:45;20089:5;20050:45;;20109:465;;20269:67;20333:2;20328:3;20269:67;;;20369:66;20349:87;;20470:66;20465:2;20456:12;;20449:88;20565:2;20556:12;;20255:319;-1:-1;;20255:319;20583:465;;20743:67;20807:2;20802:3;20743:67;;;20843:66;20823:87;;-1:-1;;;20939:2;20930:12;;20923:88;21039:2;21030:12;;20729:319;-1:-1;;20729:319;21057:465;;21217:67;21281:2;21276:3;21217:67;;;21317:66;21297:87;;-1:-1;;;21413:2;21404:12;;21397:88;21513:2;21504:12;;21203:319;-1:-1;;21203:319;21605:460;21802:22;;21738:4;21729:14;;;21830:62;21733:3;21802:22;21830:62;;;21758:140;21969:4;21962:5;21958:16;21952:23;21981:63;22038:4;22033:3;22029:14;22015:12;21981:63;;22169:493;22397:22;;22328:4;22319:14;;;22425:60;22323:3;22397:22;22425:60;;22740:514;22937:22;;22869:4;22860:14;;;22965:60;22864:3;22937:22;22965:60;;;22889:142;23108:4;23101:5;23097:16;23091:23;23120:113;23227:4;23222:3;23218:14;23204:12;23120:113;;23366:607;23603:22;;23533:4;23524:14;;;23631:112;23528:3;23603:22;23631:112;;;23553:196;23827:4;23820:5;23816:16;23810:23;23839:113;23946:4;23941:3;23937:14;23923:12;23839:113;;24111:685;24374:22;;24304:4;24295:14;;;24402:138;24299:3;24374:22;24402:138;;;24324:222;24624:4;24617:5;24613:16;24607:23;24636:139;24769:4;24764:3;24760:14;24746:12;24636:139;;25673:524;25884:22;;25814:4;25805:14;;;25912:62;25809:3;25884:22;25912:62;;;25834:146;26055:4;26048:5;26044:16;26038:23;26067:109;26170:4;26165:3;26161:14;26147:12;26067:109;;26267:513;26458:22;;26392:4;26383:14;;;26486:62;26387:3;26458:22;26486:62;;;26412:142;26632:4;26625:5;26621:16;26615:23;26644:115;26753:4;26748:3;26744:14;26730:12;27058:22;;26995:4;26986:14;;;27086:62;26990:3;27058:22;27086:62;;;27015:139;27224:4;27217:5;27213:16;27207:23;27236:63;27293:4;27288:3;27284:14;27270:12;27236:63;;;27164:141;27375:4;27368:5;27364:16;27358:23;27387:59;27440:4;27435:3;27431:14;27417:12;27387:59;;27589:732;27842:22;;27589:732;;27774:4;27765:14;;;27870:108;27769:3;27842:22;27870:108;;;27794:190;28058:4;28051:5;28047:16;28041:23;28110:3;28104:4;28100:14;28093:4;28088:3;28084:14;28077:38;28130:153;28278:4;28264:12;28130:153;;;28122:161;27747:574;-1:-1;;;;;27747:574;28978:779;29183:22;;29115:4;29106:14;;;29211:60;29110:3;29183:22;29211:60;;;29135:142;29352:4;29345:5;29341:16;29335:23;29364:137;29495:4;29490:3;29486:14;29472:12;29364:137;;;29287:220;29585:4;29578:5;29574:16;29568:23;29597:139;29730:4;29725:3;29721:14;29707:12;29597:139;;29837:1617;30050:22;;29837:1617;;29982:5;29973:15;;;30078:62;29977:3;30050:22;30078:62;;;30003:143;30221:4;30214:5;30210:16;30204:23;30233:63;30290:4;30285:3;30281:14;30267:12;30233:63;;;30156:146;30384:4;30377:5;30373:16;30367:23;30396:63;30453:4;30448:3;30444:14;30430:12;30396:63;;;30312:153;30547:4;30540:5;30536:16;30530:23;30559:80;30633:4;30628:3;30624:14;30610:12;30559:80;;;30475:170;30719:4;30712:5;30708:16;30702:23;30731:117;30842:4;30837:3;30833:14;30819:12;30731:117;;;30655:199;30931:4;30924:5;30920:16;30914:23;30943:174;31110:5;31105:3;31101:15;31087:12;30943:174;;;30864:259;31196:4;31189:5;31185:16;31179:23;31249:3;31243:4;31239:14;31231:5;31226:3;31222:15;31215:39;31269:147;31411:4;31397:12;31269:147;;31524:2205;31741:22;;31524:2205;;31673:5;31664:15;;;31769:62;31668:3;31741:22;31769:62;;;31694:143;31912:4;31905:5;31901:16;31895:23;31924:61;31979:4;31974:3;31970:14;31956:12;31924:61;;;31847:144;32070:4;32063:5;32059:16;32053:23;32082:147;32223:4;32218:3;32214:14;32200:12;32082:147;;;32001:234;32308:4;32301:5;32297:16;32291:23;32320:61;32375:4;32370:3;32366:14;32352:12;32320:61;;;32245:142;32461:4;32454:5;32450:16;32444:23;32513:3;32507:4;32503:14;32496:4;32491:3;32487:14;32480:38;32533:107;32635:4;32621:12;32533:107;;;32525:115;;32397:255;32727:4;32720:5;32716:16;32710:23;32780:3;32774:4;32770:14;32762:5;32757:3;32753:15;32746:39;32800:107;32902:4;32888:12;32800:107;;;32792:115;;32662:257;32997:4;32990:5;32986:16;32980:23;33009:166;33168:5;33163:3;33159:15;33145:12;33009:166;;;32929:252;33254:4;33247:5;33243:16;33237:23;33266:106;33365:5;33360:3;33356:15;33342:12;33266:106;;;33191:187;33458:5;33451;33447:17;33441:24;33471:64;33528:5;33523:3;33519:15;33505:12;33471:64;;;33388:153;33620:5;33613;33609:17;33603:24;33633:64;33690:5;33685:3;33681:15;33667:12;33633:64;;;-1:-1;33720:4;31646:2083;-1:-1;;;31646:2083;34562:97;34631:22;34647:5;34631:22;;34666:213;34784:2;34769:18;;34798:71;34773:9;34842:6;34798:71;;34886:229;35012:2;34997:18;;35026:79;35001:9;35078:6;35026:79;;35122:467;35312:2;35297:18;;35326:79;35301:9;35378:6;35326:79;;;35416:72;35484:2;35473:9;35469:18;35460:6;35416:72;;;35499:80;35575:2;35564:9;35560:18;35551:6;35499:80;;35596:324;35742:2;35727:18;;35756:71;35731:9;35800:6;35756:71;;;35838:72;35906:2;35895:9;35891:18;35882:6;35838:72;;;35713:207;;;;;;35927:799;36199:3;36184:19;;36214:71;36188:9;36258:6;36214:71;;;36296:80;36372:2;36361:9;36357:18;36348:6;36296:80;;;36387:70;36453:2;36442:9;36438:18;36429:6;36387:70;;;36468:72;36536:2;36525:9;36521:18;36512:6;36468:72;;;36551:73;36619:3;36608:9;36604:19;36595:6;36551:73;;;36635:81;36711:3;36700:9;36696:19;36687:6;36635:81;;;36170:556;;;;;;;;;;36733:201;36845:2;36830:18;;36859:65;36834:9;36897:6;36859:65;;36941:213;37059:2;37044:18;;37073:71;37048:9;37117:6;37073:71;;37161:563;37371:3;37356:19;;37386:71;37360:9;37430:6;37386:71;;;37468:80;37544:2;37533:9;37529:18;37520:6;37468:80;;;37559:72;37627:2;37616:9;37612:18;37603:6;37559:72;;;37642;37710:2;37699:9;37695:18;37686:6;37642:72;;37731:257;37871:2;37856:18;;37885:93;37860:9;37951:6;37885:93;;37995:412;38185:2;38170:18;;38199:93;38174:9;38265:6;38199:93;;;38303:94;38393:2;38382:9;38378:18;38369:6;38303:94;;41200:407;41391:2;41405:47;;;41376:18;;41466:131;41376:18;41466:131;;41614:407;41805:2;41819:47;;;41790:18;;41880:131;41790:18;41880:131;;42028:407;42219:2;42233:47;;;42204:18;;42294:131;42204:18;42294:131;;42442:357;42608:2;42622:47;;;42593:18;;42683:106;42593:18;42775:6;42683:106;;42806:256;42868:2;42862:9;42894:17;;;-1:-1;;;;;42954:34;;42990:22;;;42951:62;42948:2;;;43026:1;43023;43016:12;42948:2;43042;43035:22;42846:216;;-1:-1;42846:216;43069:327;;-1:-1;;;;;43243:6;43240:30;43237:2;;;43283:1;43280;43273:12;43237:2;-1:-1;43318:4;43306:17;;;43371:15;;43174:222;43403:174;43550:4;43541:14;;43498:79;43584:160;43710:12;;43681:63;43890:195;44025:19;;;44074:4;44065:14;;44018:67;44265:91;;44327:24;44345:5;44327:24;;44469:85;44535:13;44528:21;;44511:43;44561:72;44623:5;44606:27;44640:113;;44724:24;44742:5;44724:24;;45249:144;45330:5;45336:52;45330:5;45336:52;;;45313:80;;;;45478:121;-1:-1;;;;;45540:54;;45523:76;45685:81;45756:4;45745:16;;45728:38;45773:129;;45860:37;45891:5;45860:37;;47465:144;;47561:43;47598:5;47561:43;;47616:116;;47703:24;47721:5;47703:24;;47982:110;48070:1;48063:5;48060:12;48050:2;;48076:9;48050:2;48044:48;;48099:117;48168:24;48186:5;48168:24;;;48161:5;48158:35;48148:2;;48207:1;48204;48197:12;48223:111;48289:21;48304:5;48289:21;;48341:117;48410:24;48428:5;48410:24;;48465:161;48556:46;48596:5;48556:46;;49307:113;49395:1;49388:5;49385:12;49375:2;;49411:1;49408;49401:12;49673:113;49740:22;49756:5;49740:22;",
  "source": "/*\n * Hubii Nahmii\n *\n * Compliant with the Hubii Nahmii specification v0.12.\n *\n * Copyright (C) 2017-2018 Hubii AS\n */\n\npragma solidity >=0.4.25 <0.6.0;\npragma experimental ABIEncoderV2;\n\nimport {Ownable} from \"./Ownable.sol\";\nimport {FraudChallengable} from \"./FraudChallengable.sol\";\nimport {ConfigurableOperational} from \"./ConfigurableOperational.sol\";\nimport {ValidatableV2} from \"./ValidatableV2.sol\";\nimport {SecurityBondable} from \"./SecurityBondable.sol\";\nimport {WalletLockable} from \"./WalletLockable.sol\";\nimport {TradeTypesLib} from \"./TradeTypesLib.sol\";\nimport {SafeMathIntLib} from \"./SafeMathIntLib.sol\";\n\n/**\n * @title FraudChallengeByTrade\n * @notice Where driips are challenged wrt fraud by mismatch in single trade property values\n */\ncontract FraudChallengeByTrade is Ownable, FraudChallengable, ConfigurableOperational, ValidatableV2,\nSecurityBondable, WalletLockable {\n    using SafeMathIntLib for int256;\n\n    //\n    // Events\n    // -----------------------------------------------------------------------------------------------------------------\n    event ChallengeByTradeEvent(bytes32 tradeHash, address challenger, address lockedBuyer, address lockedSeller);\n\n    //\n    // Constructor\n    // -----------------------------------------------------------------------------------------------------------------\n    constructor(address deployer) Ownable(deployer) public {\n    }\n\n    //\n    // Functions\n    // -----------------------------------------------------------------------------------------------------------------\n    /// @notice Submit a trade candidate in continuous Fraud Challenge (FC)\n    /// @param trade Fraudulent trade candidate\n    function challenge(TradeTypesLib.Trade memory trade)\n    public\n    onlyOperationalModeNormal\n    onlySealedTrade(trade)\n    {\n        // Genuineness affected by buyer\n        bool genuineBuyerAndFee = validator.isTradeIntendedCurrencyNonFungible(trade) ?\n        validator.isGenuineTradeBuyerOfNonFungible(trade) && validator.isGenuineTradeBuyerFeeOfNonFungible(trade) :\n        validator.isGenuineTradeBuyerOfFungible(trade) && validator.isGenuineTradeBuyerFeeOfFungible(trade);\n\n        // Genuineness affected by seller\n        bool genuineSellerAndFee = validator.isTradeConjugateCurrencyNonFungible(trade) ?\n        validator.isGenuineTradeSellerOfNonFungible(trade) && validator.isGenuineTradeSellerFeeOfNonFungible(trade) :\n        validator.isGenuineTradeSellerOfFungible(trade) && validator.isGenuineTradeSellerFeeOfFungible(trade);\n\n        // Require existence of fraud signal\n        require(!(genuineBuyerAndFee && genuineSellerAndFee));\n\n        // Toggle operational mode exit\n        configuration.setOperationalModeExit();\n\n        // Tag trade (hash) as fraudulent\n        fraudChallenge.addFraudulentTradeHash(trade.seal.hash);\n\n        // Reward stake fraction\n        securityBond.rewardFractional(msg.sender, configuration.fraudStakeFraction(), 0);\n\n        // Lock amount of size equivalent to trade intended and conjugate amounts of buyer\n        if (!genuineBuyerAndFee) {\n            walletLocker.lockFungibleByProxy(\n                trade.buyer.wallet, msg.sender, trade.buyer.balances.intended.current,\n                trade.currencies.intended.ct, trade.currencies.intended.id, 0\n            );\n            walletLocker.lockFungibleByProxy(\n                trade.buyer.wallet, msg.sender, trade.buyer.balances.conjugate.current,\n                trade.currencies.conjugate.ct, trade.currencies.conjugate.id, 0\n            );\n        }\n\n        // Lock amount of size equivalent to trade intended and conjugate amounts of seller\n        if (!genuineSellerAndFee) {\n            walletLocker.lockFungibleByProxy(\n                trade.seller.wallet, msg.sender, trade.seller.balances.intended.current,\n                trade.currencies.intended.ct, trade.currencies.intended.id, 0\n            );\n            walletLocker.lockFungibleByProxy(\n                trade.seller.wallet, msg.sender, trade.seller.balances.conjugate.current,\n                trade.currencies.conjugate.ct, trade.currencies.conjugate.id, 0\n            );\n        }\n\n        // Emit event\n        emit ChallengeByTradeEvent(\n            trade.seal.hash, msg.sender,\n            genuineBuyerAndFee ? address(0) : trade.buyer.wallet,\n            genuineSellerAndFee ? address(0) : trade.seller.wallet\n        );\n    }\n}",
  "sourcePath": "/opt/buildagent/work/855e104608380c36/contracts/FraudChallengeByTrade.sol",
  "ast": {
    "absolutePath": "/opt/buildagent/work/855e104608380c36/contracts/FraudChallengeByTrade.sol",
    "exportedSymbols": {
      "FraudChallengeByTrade": [
        21279
      ]
    },
    "id": 21280,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 21004,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".25",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "122:32:46"
      },
      {
        "id": 21005,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "155:33:46"
      },
      {
        "absolutePath": "/opt/buildagent/work/855e104608380c36/contracts/Ownable.sol",
        "file": "./Ownable.sol",
        "id": 21007,
        "nodeType": "ImportDirective",
        "scope": 21280,
        "sourceUnit": 30686,
        "src": "190:38:46",
        "symbolAliases": [
          {
            "foreign": 21006,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/opt/buildagent/work/855e104608380c36/contracts/FraudChallengable.sol",
        "file": "./FraudChallengable.sol",
        "id": 21009,
        "nodeType": "ImportDirective",
        "scope": 21280,
        "sourceUnit": 19009,
        "src": "229:58:46",
        "symbolAliases": [
          {
            "foreign": 21008,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/opt/buildagent/work/855e104608380c36/contracts/ConfigurableOperational.sol",
        "file": "./ConfigurableOperational.sol",
        "id": 21011,
        "nodeType": "ImportDirective",
        "scope": 21280,
        "sourceUnit": 5969,
        "src": "288:70:46",
        "symbolAliases": [
          {
            "foreign": 21010,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/opt/buildagent/work/855e104608380c36/contracts/ValidatableV2.sol",
        "file": "./ValidatableV2.sol",
        "id": 21013,
        "nodeType": "ImportDirective",
        "scope": 21280,
        "sourceUnit": 42423,
        "src": "359:50:46",
        "symbolAliases": [
          {
            "foreign": 21012,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/opt/buildagent/work/855e104608380c36/contracts/SecurityBondable.sol",
        "file": "./SecurityBondable.sol",
        "id": 21015,
        "nodeType": "ImportDirective",
        "scope": 21280,
        "sourceUnit": 37078,
        "src": "410:56:46",
        "symbolAliases": [
          {
            "foreign": 21014,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/opt/buildagent/work/855e104608380c36/contracts/WalletLockable.sol",
        "file": "./WalletLockable.sol",
        "id": 21017,
        "nodeType": "ImportDirective",
        "scope": 21280,
        "sourceUnit": 45732,
        "src": "467:52:46",
        "symbolAliases": [
          {
            "foreign": 21016,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/opt/buildagent/work/855e104608380c36/contracts/TradeTypesLib.sol",
        "file": "./TradeTypesLib.sol",
        "id": 21019,
        "nodeType": "ImportDirective",
        "scope": 21280,
        "sourceUnit": 40380,
        "src": "520:50:46",
        "symbolAliases": [
          {
            "foreign": 21018,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/opt/buildagent/work/855e104608380c36/contracts/SafeMathIntLib.sol",
        "file": "./SafeMathIntLib.sol",
        "id": 21021,
        "nodeType": "ImportDirective",
        "scope": 21280,
        "sourceUnit": 35677,
        "src": "571:52:46",
        "symbolAliases": [
          {
            "foreign": 21020,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 21022,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 30685,
              "src": "792:7:46",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$30685",
                "typeString": "contract Ownable"
              }
            },
            "id": 21023,
            "nodeType": "InheritanceSpecifier",
            "src": "792:7:46"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 21024,
              "name": "FraudChallengable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 19008,
              "src": "801:17:46",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FraudChallengable_$19008",
                "typeString": "contract FraudChallengable"
              }
            },
            "id": 21025,
            "nodeType": "InheritanceSpecifier",
            "src": "801:17:46"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 21026,
              "name": "ConfigurableOperational",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5968,
              "src": "820:23:46",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ConfigurableOperational_$5968",
                "typeString": "contract ConfigurableOperational"
              }
            },
            "id": 21027,
            "nodeType": "InheritanceSpecifier",
            "src": "820:23:46"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 21028,
              "name": "ValidatableV2",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 42422,
              "src": "845:13:46",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ValidatableV2_$42422",
                "typeString": "contract ValidatableV2"
              }
            },
            "id": 21029,
            "nodeType": "InheritanceSpecifier",
            "src": "845:13:46"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 21030,
              "name": "SecurityBondable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 37077,
              "src": "860:16:46",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SecurityBondable_$37077",
                "typeString": "contract SecurityBondable"
              }
            },
            "id": 21031,
            "nodeType": "InheritanceSpecifier",
            "src": "860:16:46"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 21032,
              "name": "WalletLockable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 45731,
              "src": "878:14:46",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_WalletLockable_$45731",
                "typeString": "contract WalletLockable"
              }
            },
            "id": 21033,
            "nodeType": "InheritanceSpecifier",
            "src": "878:14:46"
          }
        ],
        "contractDependencies": [
          5950,
          5968,
          19008,
          23037,
          30685,
          37077,
          37143,
          42422,
          45731
        ],
        "contractKind": "contract",
        "documentation": "@title FraudChallengeByTrade\n@notice Where driips are challenged wrt fraud by mismatch in single trade property values",
        "fullyImplemented": true,
        "id": 21279,
        "linearizedBaseContracts": [
          21279,
          45731,
          37077,
          42422,
          5968,
          5950,
          19008,
          30685,
          37143,
          23037
        ],
        "name": "FraudChallengeByTrade",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 21036,
            "libraryName": {
              "contractScope": null,
              "id": 21034,
              "name": "SafeMathIntLib",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 35676,
              "src": "905:14:46",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMathIntLib_$35676",
                "typeString": "library SafeMathIntLib"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "899:32:46",
            "typeName": {
              "id": 21035,
              "name": "int256",
              "nodeType": "ElementaryTypeName",
              "src": "924:6:46",
              "typeDescriptions": {
                "typeIdentifier": "t_int256",
                "typeString": "int256"
              }
            }
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 21046,
            "name": "ChallengeByTradeEvent",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 21045,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21038,
                  "indexed": false,
                  "name": "tradeHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 21046,
                  "src": "1107:17:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 21037,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1107:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21040,
                  "indexed": false,
                  "name": "challenger",
                  "nodeType": "VariableDeclaration",
                  "scope": 21046,
                  "src": "1126:18:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21039,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1126:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21042,
                  "indexed": false,
                  "name": "lockedBuyer",
                  "nodeType": "VariableDeclaration",
                  "scope": 21046,
                  "src": "1146:19:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21041,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1146:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21044,
                  "indexed": false,
                  "name": "lockedSeller",
                  "nodeType": "VariableDeclaration",
                  "scope": 21046,
                  "src": "1167:20:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21043,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1167:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1106:82:46"
            },
            "src": "1079:110:46"
          },
          {
            "body": {
              "id": 21054,
              "nodeType": "Block",
              "src": "1397:7:46",
              "statements": []
            },
            "documentation": null,
            "id": 21055,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 21051,
                    "name": "deployer",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 21048,
                    "src": "1380:8:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 21052,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 21050,
                  "name": "Ownable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 30685,
                  "src": "1372:7:46",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Ownable_$30685_$",
                    "typeString": "type(contract Ownable)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1372:17:46"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 21049,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21048,
                  "name": "deployer",
                  "nodeType": "VariableDeclaration",
                  "scope": 21055,
                  "src": "1354:16:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21047,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1354:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1353:18:46"
            },
            "returnParameters": {
              "id": 21053,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1397:0:46"
            },
            "scope": 21279,
            "src": "1342:62:46",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 21277,
              "nodeType": "Block",
              "src": "1804:2586:46",
              "statements": [
                {
                  "assignments": [
                    21066
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 21066,
                      "name": "genuineBuyerAndFee",
                      "nodeType": "VariableDeclaration",
                      "scope": 21277,
                      "src": "1855:23:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 21065,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1855:4:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 21090,
                  "initialValue": {
                    "argumentTypes": null,
                    "condition": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 21069,
                          "name": "trade",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21057,
                          "src": "1926:5:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                            "typeString": "struct TradeTypesLib.Trade memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                            "typeString": "struct TradeTypesLib.Trade memory"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 21067,
                          "name": "validator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42245,
                          "src": "1881:9:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ValidatorV2_$45642",
                            "typeString": "contract ValidatorV2"
                          }
                        },
                        "id": 21068,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isTradeIntendedCurrencyNonFungible",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45440,
                        "src": "1881:44:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_pure$_t_struct$_Trade_$40362_memory_ptr_$returns$_t_bool_$",
                          "typeString": "function (struct TradeTypesLib.Trade memory) pure external returns (bool)"
                        }
                      },
                      "id": 21070,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1881:51:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 21088,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 21082,
                            "name": "trade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21057,
                            "src": "2099:5:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                              "typeString": "struct TradeTypesLib.Trade memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                              "typeString": "struct TradeTypesLib.Trade memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 21080,
                            "name": "validator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42245,
                            "src": "2059:9:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ValidatorV2_$45642",
                              "typeString": "contract ValidatorV2"
                            }
                          },
                          "id": 21081,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isGenuineTradeBuyerOfFungible",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43642,
                          "src": "2059:39:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_struct$_Trade_$40362_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (struct TradeTypesLib.Trade memory) view external returns (bool)"
                          }
                        },
                        "id": 21083,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2059:46:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 21086,
                            "name": "trade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21057,
                            "src": "2152:5:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                              "typeString": "struct TradeTypesLib.Trade memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                              "typeString": "struct TradeTypesLib.Trade memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 21084,
                            "name": "validator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42245,
                            "src": "2109:9:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ValidatorV2_$45642",
                              "typeString": "contract ValidatorV2"
                            }
                          },
                          "id": 21085,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isGenuineTradeBuyerFeeOfFungible",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43337,
                          "src": "2109:42:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_struct$_Trade_$40362_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (struct TradeTypesLib.Trade memory) view external returns (bool)"
                          }
                        },
                        "id": 21087,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2109:49:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "2059:99:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 21089,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "1881:277:46",
                    "trueExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 21079,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 21073,
                            "name": "trade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21057,
                            "src": "1986:5:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                              "typeString": "struct TradeTypesLib.Trade memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                              "typeString": "struct TradeTypesLib.Trade memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 21071,
                            "name": "validator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42245,
                            "src": "1943:9:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ValidatorV2_$45642",
                              "typeString": "contract ValidatorV2"
                            }
                          },
                          "id": 21072,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isGenuineTradeBuyerOfNonFungible",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43776,
                          "src": "1943:42:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_struct$_Trade_$40362_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (struct TradeTypesLib.Trade memory) view external returns (bool)"
                          }
                        },
                        "id": 21074,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1943:49:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 21077,
                            "name": "trade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21057,
                            "src": "2042:5:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                              "typeString": "struct TradeTypesLib.Trade memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                              "typeString": "struct TradeTypesLib.Trade memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 21075,
                            "name": "validator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42245,
                            "src": "1996:9:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ValidatorV2_$45642",
                              "typeString": "contract ValidatorV2"
                            }
                          },
                          "id": 21076,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isGenuineTradeBuyerFeeOfNonFungible",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43490,
                          "src": "1996:45:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_struct$_Trade_$40362_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (struct TradeTypesLib.Trade memory) view external returns (bool)"
                          }
                        },
                        "id": 21078,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1996:52:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "1943:105:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1855:303:46"
                },
                {
                  "assignments": [
                    21092
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 21092,
                      "name": "genuineSellerAndFee",
                      "nodeType": "VariableDeclaration",
                      "scope": 21277,
                      "src": "2211:24:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 21091,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2211:4:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 21116,
                  "initialValue": {
                    "argumentTypes": null,
                    "condition": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 21095,
                          "name": "trade",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21057,
                          "src": "2284:5:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                            "typeString": "struct TradeTypesLib.Trade memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                            "typeString": "struct TradeTypesLib.Trade memory"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 21093,
                          "name": "validator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42245,
                          "src": "2238:9:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ValidatorV2_$45642",
                            "typeString": "contract ValidatorV2"
                          }
                        },
                        "id": 21094,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isTradeConjugateCurrencyNonFungible",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45472,
                        "src": "2238:45:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_pure$_t_struct$_Trade_$40362_memory_ptr_$returns$_t_bool_$",
                          "typeString": "function (struct TradeTypesLib.Trade memory) pure external returns (bool)"
                        }
                      },
                      "id": 21096,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2238:52:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 21114,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 21108,
                            "name": "trade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21057,
                            "src": "2460:5:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                              "typeString": "struct TradeTypesLib.Trade memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                              "typeString": "struct TradeTypesLib.Trade memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 21106,
                            "name": "validator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42245,
                            "src": "2419:9:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ValidatorV2_$45642",
                              "typeString": "contract ValidatorV2"
                            }
                          },
                          "id": 21107,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isGenuineTradeSellerOfFungible",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43750,
                          "src": "2419:40:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_struct$_Trade_$40362_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (struct TradeTypesLib.Trade memory) view external returns (bool)"
                          }
                        },
                        "id": 21109,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2419:47:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 21112,
                            "name": "trade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21057,
                            "src": "2514:5:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                              "typeString": "struct TradeTypesLib.Trade memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                              "typeString": "struct TradeTypesLib.Trade memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 21110,
                            "name": "validator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42245,
                            "src": "2470:9:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ValidatorV2_$45642",
                              "typeString": "contract ValidatorV2"
                            }
                          },
                          "id": 21111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isGenuineTradeSellerFeeOfFungible",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43446,
                          "src": "2470:43:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_struct$_Trade_$40362_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (struct TradeTypesLib.Trade memory) view external returns (bool)"
                          }
                        },
                        "id": 21113,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2470:50:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "2419:101:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 21115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "2238:282:46",
                    "trueExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 21105,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 21099,
                            "name": "trade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21057,
                            "src": "2345:5:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                              "typeString": "struct TradeTypesLib.Trade memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                              "typeString": "struct TradeTypesLib.Trade memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 21097,
                            "name": "validator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42245,
                            "src": "2301:9:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ValidatorV2_$45642",
                              "typeString": "contract ValidatorV2"
                            }
                          },
                          "id": 21098,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isGenuineTradeSellerOfNonFungible",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43802,
                          "src": "2301:43:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_struct$_Trade_$40362_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (struct TradeTypesLib.Trade memory) view external returns (bool)"
                          }
                        },
                        "id": 21100,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2301:50:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 21103,
                            "name": "trade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21057,
                            "src": "2402:5:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                              "typeString": "struct TradeTypesLib.Trade memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                              "typeString": "struct TradeTypesLib.Trade memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 21101,
                            "name": "validator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42245,
                            "src": "2355:9:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ValidatorV2_$45642",
                              "typeString": "contract ValidatorV2"
                            }
                          },
                          "id": 21102,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isGenuineTradeSellerFeeOfNonFungible",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43534,
                          "src": "2355:46:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_struct$_Trade_$40362_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (struct TradeTypesLib.Trade memory) view external returns (bool)"
                          }
                        },
                        "id": 21104,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2355:53:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "2301:107:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2211:309:46"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 21122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2584:44:46",
                        "subExpression": {
                          "argumentTypes": null,
                          "components": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 21120,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 21118,
                                "name": "genuineBuyerAndFee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 21066,
                                "src": "2586:18:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 21119,
                                "name": "genuineSellerAndFee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 21092,
                                "src": "2608:19:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "2586:41:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 21121,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "2585:43:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 21117,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        57372,
                        57373
                      ],
                      "referencedDeclaration": 57372,
                      "src": "2576:7:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 21123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2576:53:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21124,
                  "nodeType": "ExpressionStatement",
                  "src": "2576:53:46"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 21125,
                        "name": "configuration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5894,
                        "src": "2680:13:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Configuration_$7342",
                          "typeString": "contract Configuration"
                        }
                      },
                      "id": 21127,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setOperationalModeExit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6265,
                      "src": "2680:36:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 21128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2680:38:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21129,
                  "nodeType": "ExpressionStatement",
                  "src": "2680:38:46"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 21133,
                            "name": "trade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21057,
                            "src": "2809:5:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                              "typeString": "struct TradeTypesLib.Trade memory"
                            }
                          },
                          "id": 21134,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "seal",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 40357,
                          "src": "2809:10:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Seal_$23176_memory",
                            "typeString": "struct NahmiiTypesLib.Seal memory"
                          }
                        },
                        "id": 21135,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "hash",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 23173,
                        "src": "2809:15:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 21130,
                        "name": "fraudChallenge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18952,
                        "src": "2771:14:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FraudChallenge_$19296",
                          "typeString": "contract FraudChallenge"
                        }
                      },
                      "id": 21132,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addFraudulentTradeHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19243,
                      "src": "2771:37:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 21136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2771:54:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21137,
                  "nodeType": "ExpressionStatement",
                  "src": "2771:54:46"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 21141,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 57369,
                          "src": "2899:3:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 21142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2899:10:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 21143,
                            "name": "configuration",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5894,
                            "src": "2911:13:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Configuration_$7342",
                              "typeString": "contract Configuration"
                            }
                          },
                          "id": 21144,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "fraudStakeFraction",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7107,
                          "src": "2911:32:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 21145,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2911:34:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 21146,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2947:1:46",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 21138,
                        "name": "securityBond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37021,
                        "src": "2869:12:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SecurityBond_$37011",
                          "typeString": "contract SecurityBond"
                        }
                      },
                      "id": 21140,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "rewardFractional",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36388,
                      "src": "2869:29:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256) external"
                      }
                    },
                    "id": 21147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2869:80:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21148,
                  "nodeType": "ExpressionStatement",
                  "src": "2869:80:46"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 21150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "3055:19:46",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 21149,
                      "name": "genuineBuyerAndFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21066,
                      "src": "3056:18:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 21200,
                  "nodeType": "IfStatement",
                  "src": "3051:491:46",
                  "trueBody": {
                    "id": 21199,
                    "nodeType": "Block",
                    "src": "3076:466:46",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 21154,
                                  "name": "trade",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 21057,
                                  "src": "3140:5:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                                    "typeString": "struct TradeTypesLib.Trade memory"
                                  }
                                },
                                "id": 21155,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "buyer",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 40351,
                                "src": "3140:11:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TradeParty_$40341_memory",
                                  "typeString": "struct TradeTypesLib.TradeParty memory"
                                }
                              },
                              "id": 21156,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "wallet",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 40330,
                              "src": "3140:18:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 21157,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 57369,
                                "src": "3160:3:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 21158,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "3160:10:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 21159,
                                      "name": "trade",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 21057,
                                      "src": "3172:5:46",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                                        "typeString": "struct TradeTypesLib.Trade memory"
                                      }
                                    },
                                    "id": 21160,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "buyer",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 40351,
                                    "src": "3172:11:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TradeParty_$40341_memory",
                                      "typeString": "struct TradeTypesLib.TradeParty memory"
                                    }
                                  },
                                  "id": 21161,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "balances",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 40338,
                                  "src": "3172:20:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_IntendedConjugateCurrentPreviousInt256_$23154_memory",
                                    "typeString": "struct NahmiiTypesLib.IntendedConjugateCurrentPreviousInt256 memory"
                                  }
                                },
                                "id": 21162,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "intended",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 23151,
                                "src": "3172:29:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_CurrentPreviousInt256_$23144_memory",
                                  "typeString": "struct NahmiiTypesLib.CurrentPreviousInt256 memory"
                                }
                              },
                              "id": 21163,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "current",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 23141,
                              "src": "3172:37:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 21164,
                                    "name": "trade",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 21057,
                                    "src": "3227:5:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                                      "typeString": "struct TradeTypesLib.Trade memory"
                                    }
                                  },
                                  "id": 21165,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "currencies",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 40347,
                                  "src": "3227:16:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_IntendedConjugateCurrency_$23129_memory",
                                    "typeString": "struct NahmiiTypesLib.IntendedConjugateCurrency memory"
                                  }
                                },
                                "id": 21166,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "intended",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 23126,
                                "src": "3227:25:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Currency_$23045_memory",
                                  "typeString": "struct MonetaryTypesLib.Currency memory"
                                }
                              },
                              "id": 21167,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "ct",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 23042,
                              "src": "3227:28:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 21168,
                                    "name": "trade",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 21057,
                                    "src": "3257:5:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                                      "typeString": "struct TradeTypesLib.Trade memory"
                                    }
                                  },
                                  "id": 21169,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "currencies",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 40347,
                                  "src": "3257:16:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_IntendedConjugateCurrency_$23129_memory",
                                    "typeString": "struct NahmiiTypesLib.IntendedConjugateCurrency memory"
                                  }
                                },
                                "id": 21170,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "intended",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 23126,
                                "src": "3257:25:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Currency_$23045_memory",
                                  "typeString": "struct MonetaryTypesLib.Currency memory"
                                }
                              },
                              "id": 21171,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "id",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 23044,
                              "src": "3257:28:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 21172,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3287:1:46",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 21151,
                              "name": "walletLocker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45652,
                              "src": "3090:12:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_WalletLocker_$47049",
                                "typeString": "contract WalletLocker"
                              }
                            },
                            "id": 21153,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "lockFungibleByProxy",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 46088,
                            "src": "3090:32:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_int256_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,int256,address,uint256,uint256) external"
                            }
                          },
                          "id": 21173,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3090:212:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 21174,
                        "nodeType": "ExpressionStatement",
                        "src": "3090:212:46"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 21178,
                                  "name": "trade",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 21057,
                                  "src": "3366:5:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                                    "typeString": "struct TradeTypesLib.Trade memory"
                                  }
                                },
                                "id": 21179,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "buyer",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 40351,
                                "src": "3366:11:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TradeParty_$40341_memory",
                                  "typeString": "struct TradeTypesLib.TradeParty memory"
                                }
                              },
                              "id": 21180,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "wallet",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 40330,
                              "src": "3366:18:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 21181,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 57369,
                                "src": "3386:3:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 21182,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "3386:10:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 21183,
                                      "name": "trade",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 21057,
                                      "src": "3398:5:46",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                                        "typeString": "struct TradeTypesLib.Trade memory"
                                      }
                                    },
                                    "id": 21184,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "buyer",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 40351,
                                    "src": "3398:11:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TradeParty_$40341_memory",
                                      "typeString": "struct TradeTypesLib.TradeParty memory"
                                    }
                                  },
                                  "id": 21185,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "balances",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 40338,
                                  "src": "3398:20:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_IntendedConjugateCurrentPreviousInt256_$23154_memory",
                                    "typeString": "struct NahmiiTypesLib.IntendedConjugateCurrentPreviousInt256 memory"
                                  }
                                },
                                "id": 21186,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "conjugate",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 23153,
                                "src": "3398:30:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_CurrentPreviousInt256_$23144_memory",
                                  "typeString": "struct NahmiiTypesLib.CurrentPreviousInt256 memory"
                                }
                              },
                              "id": 21187,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "current",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 23141,
                              "src": "3398:38:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 21188,
                                    "name": "trade",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 21057,
                                    "src": "3454:5:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                                      "typeString": "struct TradeTypesLib.Trade memory"
                                    }
                                  },
                                  "id": 21189,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "currencies",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 40347,
                                  "src": "3454:16:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_IntendedConjugateCurrency_$23129_memory",
                                    "typeString": "struct NahmiiTypesLib.IntendedConjugateCurrency memory"
                                  }
                                },
                                "id": 21190,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "conjugate",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 23128,
                                "src": "3454:26:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Currency_$23045_memory",
                                  "typeString": "struct MonetaryTypesLib.Currency memory"
                                }
                              },
                              "id": 21191,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "ct",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 23042,
                              "src": "3454:29:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 21192,
                                    "name": "trade",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 21057,
                                    "src": "3485:5:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                                      "typeString": "struct TradeTypesLib.Trade memory"
                                    }
                                  },
                                  "id": 21193,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "currencies",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 40347,
                                  "src": "3485:16:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_IntendedConjugateCurrency_$23129_memory",
                                    "typeString": "struct NahmiiTypesLib.IntendedConjugateCurrency memory"
                                  }
                                },
                                "id": 21194,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "conjugate",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 23128,
                                "src": "3485:26:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Currency_$23045_memory",
                                  "typeString": "struct MonetaryTypesLib.Currency memory"
                                }
                              },
                              "id": 21195,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "id",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 23044,
                              "src": "3485:29:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 21196,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3516:1:46",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 21175,
                              "name": "walletLocker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45652,
                              "src": "3316:12:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_WalletLocker_$47049",
                                "typeString": "contract WalletLocker"
                              }
                            },
                            "id": 21177,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "lockFungibleByProxy",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 46088,
                            "src": "3316:32:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_int256_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,int256,address,uint256,uint256) external"
                            }
                          },
                          "id": 21197,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3316:215:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 21198,
                        "nodeType": "ExpressionStatement",
                        "src": "3316:215:46"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 21202,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "3648:20:46",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 21201,
                      "name": "genuineSellerAndFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21092,
                      "src": "3649:19:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 21252,
                  "nodeType": "IfStatement",
                  "src": "3644:496:46",
                  "trueBody": {
                    "id": 21251,
                    "nodeType": "Block",
                    "src": "3670:470:46",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 21206,
                                  "name": "trade",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 21057,
                                  "src": "3734:5:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                                    "typeString": "struct TradeTypesLib.Trade memory"
                                  }
                                },
                                "id": 21207,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "seller",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 40353,
                                "src": "3734:12:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TradeParty_$40341_memory",
                                  "typeString": "struct TradeTypesLib.TradeParty memory"
                                }
                              },
                              "id": 21208,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "wallet",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 40330,
                              "src": "3734:19:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 21209,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 57369,
                                "src": "3755:3:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 21210,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "3755:10:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 21211,
                                      "name": "trade",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 21057,
                                      "src": "3767:5:46",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                                        "typeString": "struct TradeTypesLib.Trade memory"
                                      }
                                    },
                                    "id": 21212,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "seller",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 40353,
                                    "src": "3767:12:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TradeParty_$40341_memory",
                                      "typeString": "struct TradeTypesLib.TradeParty memory"
                                    }
                                  },
                                  "id": 21213,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "balances",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 40338,
                                  "src": "3767:21:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_IntendedConjugateCurrentPreviousInt256_$23154_memory",
                                    "typeString": "struct NahmiiTypesLib.IntendedConjugateCurrentPreviousInt256 memory"
                                  }
                                },
                                "id": 21214,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "intended",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 23151,
                                "src": "3767:30:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_CurrentPreviousInt256_$23144_memory",
                                  "typeString": "struct NahmiiTypesLib.CurrentPreviousInt256 memory"
                                }
                              },
                              "id": 21215,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "current",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 23141,
                              "src": "3767:38:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 21216,
                                    "name": "trade",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 21057,
                                    "src": "3823:5:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                                      "typeString": "struct TradeTypesLib.Trade memory"
                                    }
                                  },
                                  "id": 21217,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "currencies",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 40347,
                                  "src": "3823:16:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_IntendedConjugateCurrency_$23129_memory",
                                    "typeString": "struct NahmiiTypesLib.IntendedConjugateCurrency memory"
                                  }
                                },
                                "id": 21218,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "intended",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 23126,
                                "src": "3823:25:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Currency_$23045_memory",
                                  "typeString": "struct MonetaryTypesLib.Currency memory"
                                }
                              },
                              "id": 21219,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "ct",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 23042,
                              "src": "3823:28:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 21220,
                                    "name": "trade",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 21057,
                                    "src": "3853:5:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                                      "typeString": "struct TradeTypesLib.Trade memory"
                                    }
                                  },
                                  "id": 21221,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "currencies",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 40347,
                                  "src": "3853:16:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_IntendedConjugateCurrency_$23129_memory",
                                    "typeString": "struct NahmiiTypesLib.IntendedConjugateCurrency memory"
                                  }
                                },
                                "id": 21222,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "intended",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 23126,
                                "src": "3853:25:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Currency_$23045_memory",
                                  "typeString": "struct MonetaryTypesLib.Currency memory"
                                }
                              },
                              "id": 21223,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "id",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 23044,
                              "src": "3853:28:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 21224,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3883:1:46",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 21203,
                              "name": "walletLocker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45652,
                              "src": "3684:12:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_WalletLocker_$47049",
                                "typeString": "contract WalletLocker"
                              }
                            },
                            "id": 21205,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "lockFungibleByProxy",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 46088,
                            "src": "3684:32:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_int256_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,int256,address,uint256,uint256) external"
                            }
                          },
                          "id": 21225,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3684:214:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 21226,
                        "nodeType": "ExpressionStatement",
                        "src": "3684:214:46"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 21230,
                                  "name": "trade",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 21057,
                                  "src": "3962:5:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                                    "typeString": "struct TradeTypesLib.Trade memory"
                                  }
                                },
                                "id": 21231,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "seller",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 40353,
                                "src": "3962:12:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TradeParty_$40341_memory",
                                  "typeString": "struct TradeTypesLib.TradeParty memory"
                                }
                              },
                              "id": 21232,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "wallet",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 40330,
                              "src": "3962:19:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 21233,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 57369,
                                "src": "3983:3:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 21234,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "3983:10:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 21235,
                                      "name": "trade",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 21057,
                                      "src": "3995:5:46",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                                        "typeString": "struct TradeTypesLib.Trade memory"
                                      }
                                    },
                                    "id": 21236,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "seller",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 40353,
                                    "src": "3995:12:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TradeParty_$40341_memory",
                                      "typeString": "struct TradeTypesLib.TradeParty memory"
                                    }
                                  },
                                  "id": 21237,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "balances",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 40338,
                                  "src": "3995:21:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_IntendedConjugateCurrentPreviousInt256_$23154_memory",
                                    "typeString": "struct NahmiiTypesLib.IntendedConjugateCurrentPreviousInt256 memory"
                                  }
                                },
                                "id": 21238,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "conjugate",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 23153,
                                "src": "3995:31:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_CurrentPreviousInt256_$23144_memory",
                                  "typeString": "struct NahmiiTypesLib.CurrentPreviousInt256 memory"
                                }
                              },
                              "id": 21239,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "current",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 23141,
                              "src": "3995:39:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 21240,
                                    "name": "trade",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 21057,
                                    "src": "4052:5:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                                      "typeString": "struct TradeTypesLib.Trade memory"
                                    }
                                  },
                                  "id": 21241,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "currencies",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 40347,
                                  "src": "4052:16:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_IntendedConjugateCurrency_$23129_memory",
                                    "typeString": "struct NahmiiTypesLib.IntendedConjugateCurrency memory"
                                  }
                                },
                                "id": 21242,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "conjugate",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 23128,
                                "src": "4052:26:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Currency_$23045_memory",
                                  "typeString": "struct MonetaryTypesLib.Currency memory"
                                }
                              },
                              "id": 21243,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "ct",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 23042,
                              "src": "4052:29:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 21244,
                                    "name": "trade",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 21057,
                                    "src": "4083:5:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                                      "typeString": "struct TradeTypesLib.Trade memory"
                                    }
                                  },
                                  "id": 21245,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "currencies",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 40347,
                                  "src": "4083:16:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_IntendedConjugateCurrency_$23129_memory",
                                    "typeString": "struct NahmiiTypesLib.IntendedConjugateCurrency memory"
                                  }
                                },
                                "id": 21246,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "conjugate",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 23128,
                                "src": "4083:26:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Currency_$23045_memory",
                                  "typeString": "struct MonetaryTypesLib.Currency memory"
                                }
                              },
                              "id": 21247,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "id",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 23044,
                              "src": "4083:29:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 21248,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4114:1:46",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 21227,
                              "name": "walletLocker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45652,
                              "src": "3912:12:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_WalletLocker_$47049",
                                "typeString": "contract WalletLocker"
                              }
                            },
                            "id": 21229,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "lockFungibleByProxy",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 46088,
                            "src": "3912:32:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_int256_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,int256,address,uint256,uint256) external"
                            }
                          },
                          "id": 21249,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3912:217:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 21250,
                        "nodeType": "ExpressionStatement",
                        "src": "3912:217:46"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 21254,
                            "name": "trade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21057,
                            "src": "4212:5:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                              "typeString": "struct TradeTypesLib.Trade memory"
                            }
                          },
                          "id": 21255,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "seal",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 40357,
                          "src": "4212:10:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Seal_$23176_memory",
                            "typeString": "struct NahmiiTypesLib.Seal memory"
                          }
                        },
                        "id": 21256,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "hash",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 23173,
                        "src": "4212:15:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 21257,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 57369,
                          "src": "4229:3:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 21258,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4229:10:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "condition": {
                          "argumentTypes": null,
                          "id": 21259,
                          "name": "genuineBuyerAndFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21066,
                          "src": "4253:18:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 21263,
                              "name": "trade",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21057,
                              "src": "4287:5:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                                "typeString": "struct TradeTypesLib.Trade memory"
                              }
                            },
                            "id": 21264,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "buyer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 40351,
                            "src": "4287:11:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeParty_$40341_memory",
                              "typeString": "struct TradeTypesLib.TradeParty memory"
                            }
                          },
                          "id": 21265,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "wallet",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 40330,
                          "src": "4287:18:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 21266,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "Conditional",
                        "src": "4253:52:46",
                        "trueExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 21261,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4282:1:46",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 21260,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4274:7:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 21262,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4274:10:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "condition": {
                          "argumentTypes": null,
                          "id": 21267,
                          "name": "genuineSellerAndFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21092,
                          "src": "4319:19:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 21271,
                              "name": "trade",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21057,
                              "src": "4354:5:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                                "typeString": "struct TradeTypesLib.Trade memory"
                              }
                            },
                            "id": 21272,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "seller",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 40353,
                            "src": "4354:12:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeParty_$40341_memory",
                              "typeString": "struct TradeTypesLib.TradeParty memory"
                            }
                          },
                          "id": 21273,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "wallet",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 40330,
                          "src": "4354:19:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 21274,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "Conditional",
                        "src": "4319:54:46",
                        "trueExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 21269,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4349:1:46",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 21268,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4341:7:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 21270,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4341:10:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 21253,
                      "name": "ChallengeByTradeEvent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21046,
                      "src": "4177:21:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address,address,address)"
                      }
                    },
                    "id": 21275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4177:206:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21276,
                  "nodeType": "EmitStatement",
                  "src": "4172:211:46"
                }
              ]
            },
            "documentation": "@notice Submit a trade candidate in continuous Fraud Challenge (FC)\n @param trade Fraudulent trade candidate",
            "id": 21278,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 21060,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 21059,
                  "name": "onlyOperationalModeNormal",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5967,
                  "src": "1747:25:46",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1747:25:46"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 21062,
                    "name": "trade",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 21057,
                    "src": "1793:5:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                      "typeString": "struct TradeTypesLib.Trade memory"
                    }
                  }
                ],
                "id": 21063,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 21061,
                  "name": "onlySealedTrade",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 42342,
                  "src": "1777:15:46",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_struct$_Trade_$40362_memory_ptr_$",
                    "typeString": "modifier (struct TradeTypesLib.Trade memory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1777:22:46"
              }
            ],
            "name": "challenge",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 21058,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21057,
                  "name": "trade",
                  "nodeType": "VariableDeclaration",
                  "scope": 21278,
                  "src": "1698:32:46",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                    "typeString": "struct TradeTypesLib.Trade"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 21056,
                    "name": "TradeTypesLib.Trade",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 40362,
                    "src": "1698:19:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$40362_storage_ptr",
                      "typeString": "struct TradeTypesLib.Trade"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1697:34:46"
            },
            "returnParameters": {
              "id": 21064,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1804:0:46"
            },
            "scope": 21279,
            "src": "1679:2711:46",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 21280,
        "src": "758:3634:46"
      }
    ],
    "src": "122:4270:46"
  },
  "legacyAST": {
    "absolutePath": "/opt/buildagent/work/855e104608380c36/contracts/FraudChallengeByTrade.sol",
    "exportedSymbols": {
      "FraudChallengeByTrade": [
        21279
      ]
    },
    "id": 21280,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 21004,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".25",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "122:32:46"
      },
      {
        "id": 21005,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "155:33:46"
      },
      {
        "absolutePath": "/opt/buildagent/work/855e104608380c36/contracts/Ownable.sol",
        "file": "./Ownable.sol",
        "id": 21007,
        "nodeType": "ImportDirective",
        "scope": 21280,
        "sourceUnit": 30686,
        "src": "190:38:46",
        "symbolAliases": [
          {
            "foreign": 21006,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/opt/buildagent/work/855e104608380c36/contracts/FraudChallengable.sol",
        "file": "./FraudChallengable.sol",
        "id": 21009,
        "nodeType": "ImportDirective",
        "scope": 21280,
        "sourceUnit": 19009,
        "src": "229:58:46",
        "symbolAliases": [
          {
            "foreign": 21008,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/opt/buildagent/work/855e104608380c36/contracts/ConfigurableOperational.sol",
        "file": "./ConfigurableOperational.sol",
        "id": 21011,
        "nodeType": "ImportDirective",
        "scope": 21280,
        "sourceUnit": 5969,
        "src": "288:70:46",
        "symbolAliases": [
          {
            "foreign": 21010,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/opt/buildagent/work/855e104608380c36/contracts/ValidatableV2.sol",
        "file": "./ValidatableV2.sol",
        "id": 21013,
        "nodeType": "ImportDirective",
        "scope": 21280,
        "sourceUnit": 42423,
        "src": "359:50:46",
        "symbolAliases": [
          {
            "foreign": 21012,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/opt/buildagent/work/855e104608380c36/contracts/SecurityBondable.sol",
        "file": "./SecurityBondable.sol",
        "id": 21015,
        "nodeType": "ImportDirective",
        "scope": 21280,
        "sourceUnit": 37078,
        "src": "410:56:46",
        "symbolAliases": [
          {
            "foreign": 21014,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/opt/buildagent/work/855e104608380c36/contracts/WalletLockable.sol",
        "file": "./WalletLockable.sol",
        "id": 21017,
        "nodeType": "ImportDirective",
        "scope": 21280,
        "sourceUnit": 45732,
        "src": "467:52:46",
        "symbolAliases": [
          {
            "foreign": 21016,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/opt/buildagent/work/855e104608380c36/contracts/TradeTypesLib.sol",
        "file": "./TradeTypesLib.sol",
        "id": 21019,
        "nodeType": "ImportDirective",
        "scope": 21280,
        "sourceUnit": 40380,
        "src": "520:50:46",
        "symbolAliases": [
          {
            "foreign": 21018,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/opt/buildagent/work/855e104608380c36/contracts/SafeMathIntLib.sol",
        "file": "./SafeMathIntLib.sol",
        "id": 21021,
        "nodeType": "ImportDirective",
        "scope": 21280,
        "sourceUnit": 35677,
        "src": "571:52:46",
        "symbolAliases": [
          {
            "foreign": 21020,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 21022,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 30685,
              "src": "792:7:46",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$30685",
                "typeString": "contract Ownable"
              }
            },
            "id": 21023,
            "nodeType": "InheritanceSpecifier",
            "src": "792:7:46"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 21024,
              "name": "FraudChallengable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 19008,
              "src": "801:17:46",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FraudChallengable_$19008",
                "typeString": "contract FraudChallengable"
              }
            },
            "id": 21025,
            "nodeType": "InheritanceSpecifier",
            "src": "801:17:46"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 21026,
              "name": "ConfigurableOperational",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5968,
              "src": "820:23:46",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ConfigurableOperational_$5968",
                "typeString": "contract ConfigurableOperational"
              }
            },
            "id": 21027,
            "nodeType": "InheritanceSpecifier",
            "src": "820:23:46"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 21028,
              "name": "ValidatableV2",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 42422,
              "src": "845:13:46",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ValidatableV2_$42422",
                "typeString": "contract ValidatableV2"
              }
            },
            "id": 21029,
            "nodeType": "InheritanceSpecifier",
            "src": "845:13:46"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 21030,
              "name": "SecurityBondable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 37077,
              "src": "860:16:46",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SecurityBondable_$37077",
                "typeString": "contract SecurityBondable"
              }
            },
            "id": 21031,
            "nodeType": "InheritanceSpecifier",
            "src": "860:16:46"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 21032,
              "name": "WalletLockable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 45731,
              "src": "878:14:46",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_WalletLockable_$45731",
                "typeString": "contract WalletLockable"
              }
            },
            "id": 21033,
            "nodeType": "InheritanceSpecifier",
            "src": "878:14:46"
          }
        ],
        "contractDependencies": [
          5950,
          5968,
          19008,
          23037,
          30685,
          37077,
          37143,
          42422,
          45731
        ],
        "contractKind": "contract",
        "documentation": "@title FraudChallengeByTrade\n@notice Where driips are challenged wrt fraud by mismatch in single trade property values",
        "fullyImplemented": true,
        "id": 21279,
        "linearizedBaseContracts": [
          21279,
          45731,
          37077,
          42422,
          5968,
          5950,
          19008,
          30685,
          37143,
          23037
        ],
        "name": "FraudChallengeByTrade",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 21036,
            "libraryName": {
              "contractScope": null,
              "id": 21034,
              "name": "SafeMathIntLib",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 35676,
              "src": "905:14:46",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMathIntLib_$35676",
                "typeString": "library SafeMathIntLib"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "899:32:46",
            "typeName": {
              "id": 21035,
              "name": "int256",
              "nodeType": "ElementaryTypeName",
              "src": "924:6:46",
              "typeDescriptions": {
                "typeIdentifier": "t_int256",
                "typeString": "int256"
              }
            }
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 21046,
            "name": "ChallengeByTradeEvent",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 21045,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21038,
                  "indexed": false,
                  "name": "tradeHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 21046,
                  "src": "1107:17:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 21037,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1107:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21040,
                  "indexed": false,
                  "name": "challenger",
                  "nodeType": "VariableDeclaration",
                  "scope": 21046,
                  "src": "1126:18:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21039,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1126:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21042,
                  "indexed": false,
                  "name": "lockedBuyer",
                  "nodeType": "VariableDeclaration",
                  "scope": 21046,
                  "src": "1146:19:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21041,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1146:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21044,
                  "indexed": false,
                  "name": "lockedSeller",
                  "nodeType": "VariableDeclaration",
                  "scope": 21046,
                  "src": "1167:20:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21043,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1167:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1106:82:46"
            },
            "src": "1079:110:46"
          },
          {
            "body": {
              "id": 21054,
              "nodeType": "Block",
              "src": "1397:7:46",
              "statements": []
            },
            "documentation": null,
            "id": 21055,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 21051,
                    "name": "deployer",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 21048,
                    "src": "1380:8:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 21052,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 21050,
                  "name": "Ownable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 30685,
                  "src": "1372:7:46",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Ownable_$30685_$",
                    "typeString": "type(contract Ownable)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1372:17:46"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 21049,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21048,
                  "name": "deployer",
                  "nodeType": "VariableDeclaration",
                  "scope": 21055,
                  "src": "1354:16:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21047,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1354:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1353:18:46"
            },
            "returnParameters": {
              "id": 21053,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1397:0:46"
            },
            "scope": 21279,
            "src": "1342:62:46",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 21277,
              "nodeType": "Block",
              "src": "1804:2586:46",
              "statements": [
                {
                  "assignments": [
                    21066
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 21066,
                      "name": "genuineBuyerAndFee",
                      "nodeType": "VariableDeclaration",
                      "scope": 21277,
                      "src": "1855:23:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 21065,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1855:4:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 21090,
                  "initialValue": {
                    "argumentTypes": null,
                    "condition": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 21069,
                          "name": "trade",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21057,
                          "src": "1926:5:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                            "typeString": "struct TradeTypesLib.Trade memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                            "typeString": "struct TradeTypesLib.Trade memory"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 21067,
                          "name": "validator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42245,
                          "src": "1881:9:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ValidatorV2_$45642",
                            "typeString": "contract ValidatorV2"
                          }
                        },
                        "id": 21068,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isTradeIntendedCurrencyNonFungible",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45440,
                        "src": "1881:44:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_pure$_t_struct$_Trade_$40362_memory_ptr_$returns$_t_bool_$",
                          "typeString": "function (struct TradeTypesLib.Trade memory) pure external returns (bool)"
                        }
                      },
                      "id": 21070,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1881:51:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 21088,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 21082,
                            "name": "trade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21057,
                            "src": "2099:5:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                              "typeString": "struct TradeTypesLib.Trade memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                              "typeString": "struct TradeTypesLib.Trade memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 21080,
                            "name": "validator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42245,
                            "src": "2059:9:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ValidatorV2_$45642",
                              "typeString": "contract ValidatorV2"
                            }
                          },
                          "id": 21081,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isGenuineTradeBuyerOfFungible",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43642,
                          "src": "2059:39:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_struct$_Trade_$40362_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (struct TradeTypesLib.Trade memory) view external returns (bool)"
                          }
                        },
                        "id": 21083,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2059:46:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 21086,
                            "name": "trade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21057,
                            "src": "2152:5:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                              "typeString": "struct TradeTypesLib.Trade memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                              "typeString": "struct TradeTypesLib.Trade memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 21084,
                            "name": "validator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42245,
                            "src": "2109:9:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ValidatorV2_$45642",
                              "typeString": "contract ValidatorV2"
                            }
                          },
                          "id": 21085,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isGenuineTradeBuyerFeeOfFungible",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43337,
                          "src": "2109:42:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_struct$_Trade_$40362_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (struct TradeTypesLib.Trade memory) view external returns (bool)"
                          }
                        },
                        "id": 21087,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2109:49:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "2059:99:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 21089,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "1881:277:46",
                    "trueExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 21079,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 21073,
                            "name": "trade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21057,
                            "src": "1986:5:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                              "typeString": "struct TradeTypesLib.Trade memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                              "typeString": "struct TradeTypesLib.Trade memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 21071,
                            "name": "validator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42245,
                            "src": "1943:9:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ValidatorV2_$45642",
                              "typeString": "contract ValidatorV2"
                            }
                          },
                          "id": 21072,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isGenuineTradeBuyerOfNonFungible",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43776,
                          "src": "1943:42:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_struct$_Trade_$40362_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (struct TradeTypesLib.Trade memory) view external returns (bool)"
                          }
                        },
                        "id": 21074,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1943:49:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 21077,
                            "name": "trade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21057,
                            "src": "2042:5:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                              "typeString": "struct TradeTypesLib.Trade memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                              "typeString": "struct TradeTypesLib.Trade memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 21075,
                            "name": "validator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42245,
                            "src": "1996:9:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ValidatorV2_$45642",
                              "typeString": "contract ValidatorV2"
                            }
                          },
                          "id": 21076,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isGenuineTradeBuyerFeeOfNonFungible",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43490,
                          "src": "1996:45:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_struct$_Trade_$40362_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (struct TradeTypesLib.Trade memory) view external returns (bool)"
                          }
                        },
                        "id": 21078,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1996:52:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "1943:105:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1855:303:46"
                },
                {
                  "assignments": [
                    21092
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 21092,
                      "name": "genuineSellerAndFee",
                      "nodeType": "VariableDeclaration",
                      "scope": 21277,
                      "src": "2211:24:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 21091,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2211:4:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 21116,
                  "initialValue": {
                    "argumentTypes": null,
                    "condition": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 21095,
                          "name": "trade",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21057,
                          "src": "2284:5:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                            "typeString": "struct TradeTypesLib.Trade memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                            "typeString": "struct TradeTypesLib.Trade memory"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 21093,
                          "name": "validator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42245,
                          "src": "2238:9:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ValidatorV2_$45642",
                            "typeString": "contract ValidatorV2"
                          }
                        },
                        "id": 21094,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isTradeConjugateCurrencyNonFungible",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45472,
                        "src": "2238:45:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_pure$_t_struct$_Trade_$40362_memory_ptr_$returns$_t_bool_$",
                          "typeString": "function (struct TradeTypesLib.Trade memory) pure external returns (bool)"
                        }
                      },
                      "id": 21096,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2238:52:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 21114,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 21108,
                            "name": "trade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21057,
                            "src": "2460:5:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                              "typeString": "struct TradeTypesLib.Trade memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                              "typeString": "struct TradeTypesLib.Trade memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 21106,
                            "name": "validator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42245,
                            "src": "2419:9:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ValidatorV2_$45642",
                              "typeString": "contract ValidatorV2"
                            }
                          },
                          "id": 21107,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isGenuineTradeSellerOfFungible",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43750,
                          "src": "2419:40:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_struct$_Trade_$40362_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (struct TradeTypesLib.Trade memory) view external returns (bool)"
                          }
                        },
                        "id": 21109,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2419:47:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 21112,
                            "name": "trade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21057,
                            "src": "2514:5:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                              "typeString": "struct TradeTypesLib.Trade memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                              "typeString": "struct TradeTypesLib.Trade memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 21110,
                            "name": "validator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42245,
                            "src": "2470:9:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ValidatorV2_$45642",
                              "typeString": "contract ValidatorV2"
                            }
                          },
                          "id": 21111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isGenuineTradeSellerFeeOfFungible",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43446,
                          "src": "2470:43:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_struct$_Trade_$40362_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (struct TradeTypesLib.Trade memory) view external returns (bool)"
                          }
                        },
                        "id": 21113,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2470:50:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "2419:101:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 21115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "2238:282:46",
                    "trueExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 21105,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 21099,
                            "name": "trade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21057,
                            "src": "2345:5:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                              "typeString": "struct TradeTypesLib.Trade memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                              "typeString": "struct TradeTypesLib.Trade memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 21097,
                            "name": "validator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42245,
                            "src": "2301:9:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ValidatorV2_$45642",
                              "typeString": "contract ValidatorV2"
                            }
                          },
                          "id": 21098,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isGenuineTradeSellerOfNonFungible",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43802,
                          "src": "2301:43:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_struct$_Trade_$40362_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (struct TradeTypesLib.Trade memory) view external returns (bool)"
                          }
                        },
                        "id": 21100,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2301:50:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 21103,
                            "name": "trade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21057,
                            "src": "2402:5:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                              "typeString": "struct TradeTypesLib.Trade memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                              "typeString": "struct TradeTypesLib.Trade memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 21101,
                            "name": "validator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42245,
                            "src": "2355:9:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ValidatorV2_$45642",
                              "typeString": "contract ValidatorV2"
                            }
                          },
                          "id": 21102,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isGenuineTradeSellerFeeOfNonFungible",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43534,
                          "src": "2355:46:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_struct$_Trade_$40362_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (struct TradeTypesLib.Trade memory) view external returns (bool)"
                          }
                        },
                        "id": 21104,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2355:53:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "2301:107:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2211:309:46"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 21122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2584:44:46",
                        "subExpression": {
                          "argumentTypes": null,
                          "components": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 21120,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 21118,
                                "name": "genuineBuyerAndFee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 21066,
                                "src": "2586:18:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 21119,
                                "name": "genuineSellerAndFee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 21092,
                                "src": "2608:19:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "2586:41:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 21121,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "2585:43:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 21117,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        57372,
                        57373
                      ],
                      "referencedDeclaration": 57372,
                      "src": "2576:7:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 21123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2576:53:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21124,
                  "nodeType": "ExpressionStatement",
                  "src": "2576:53:46"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 21125,
                        "name": "configuration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5894,
                        "src": "2680:13:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Configuration_$7342",
                          "typeString": "contract Configuration"
                        }
                      },
                      "id": 21127,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setOperationalModeExit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6265,
                      "src": "2680:36:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 21128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2680:38:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21129,
                  "nodeType": "ExpressionStatement",
                  "src": "2680:38:46"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 21133,
                            "name": "trade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21057,
                            "src": "2809:5:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                              "typeString": "struct TradeTypesLib.Trade memory"
                            }
                          },
                          "id": 21134,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "seal",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 40357,
                          "src": "2809:10:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Seal_$23176_memory",
                            "typeString": "struct NahmiiTypesLib.Seal memory"
                          }
                        },
                        "id": 21135,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "hash",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 23173,
                        "src": "2809:15:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 21130,
                        "name": "fraudChallenge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18952,
                        "src": "2771:14:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FraudChallenge_$19296",
                          "typeString": "contract FraudChallenge"
                        }
                      },
                      "id": 21132,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addFraudulentTradeHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19243,
                      "src": "2771:37:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 21136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2771:54:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21137,
                  "nodeType": "ExpressionStatement",
                  "src": "2771:54:46"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 21141,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 57369,
                          "src": "2899:3:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 21142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2899:10:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 21143,
                            "name": "configuration",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5894,
                            "src": "2911:13:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Configuration_$7342",
                              "typeString": "contract Configuration"
                            }
                          },
                          "id": 21144,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "fraudStakeFraction",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7107,
                          "src": "2911:32:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 21145,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2911:34:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 21146,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2947:1:46",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 21138,
                        "name": "securityBond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37021,
                        "src": "2869:12:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SecurityBond_$37011",
                          "typeString": "contract SecurityBond"
                        }
                      },
                      "id": 21140,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "rewardFractional",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36388,
                      "src": "2869:29:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256) external"
                      }
                    },
                    "id": 21147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2869:80:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21148,
                  "nodeType": "ExpressionStatement",
                  "src": "2869:80:46"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 21150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "3055:19:46",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 21149,
                      "name": "genuineBuyerAndFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21066,
                      "src": "3056:18:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 21200,
                  "nodeType": "IfStatement",
                  "src": "3051:491:46",
                  "trueBody": {
                    "id": 21199,
                    "nodeType": "Block",
                    "src": "3076:466:46",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 21154,
                                  "name": "trade",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 21057,
                                  "src": "3140:5:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                                    "typeString": "struct TradeTypesLib.Trade memory"
                                  }
                                },
                                "id": 21155,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "buyer",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 40351,
                                "src": "3140:11:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TradeParty_$40341_memory",
                                  "typeString": "struct TradeTypesLib.TradeParty memory"
                                }
                              },
                              "id": 21156,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "wallet",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 40330,
                              "src": "3140:18:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 21157,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 57369,
                                "src": "3160:3:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 21158,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "3160:10:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 21159,
                                      "name": "trade",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 21057,
                                      "src": "3172:5:46",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                                        "typeString": "struct TradeTypesLib.Trade memory"
                                      }
                                    },
                                    "id": 21160,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "buyer",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 40351,
                                    "src": "3172:11:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TradeParty_$40341_memory",
                                      "typeString": "struct TradeTypesLib.TradeParty memory"
                                    }
                                  },
                                  "id": 21161,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "balances",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 40338,
                                  "src": "3172:20:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_IntendedConjugateCurrentPreviousInt256_$23154_memory",
                                    "typeString": "struct NahmiiTypesLib.IntendedConjugateCurrentPreviousInt256 memory"
                                  }
                                },
                                "id": 21162,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "intended",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 23151,
                                "src": "3172:29:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_CurrentPreviousInt256_$23144_memory",
                                  "typeString": "struct NahmiiTypesLib.CurrentPreviousInt256 memory"
                                }
                              },
                              "id": 21163,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "current",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 23141,
                              "src": "3172:37:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 21164,
                                    "name": "trade",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 21057,
                                    "src": "3227:5:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                                      "typeString": "struct TradeTypesLib.Trade memory"
                                    }
                                  },
                                  "id": 21165,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "currencies",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 40347,
                                  "src": "3227:16:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_IntendedConjugateCurrency_$23129_memory",
                                    "typeString": "struct NahmiiTypesLib.IntendedConjugateCurrency memory"
                                  }
                                },
                                "id": 21166,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "intended",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 23126,
                                "src": "3227:25:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Currency_$23045_memory",
                                  "typeString": "struct MonetaryTypesLib.Currency memory"
                                }
                              },
                              "id": 21167,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "ct",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 23042,
                              "src": "3227:28:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 21168,
                                    "name": "trade",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 21057,
                                    "src": "3257:5:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                                      "typeString": "struct TradeTypesLib.Trade memory"
                                    }
                                  },
                                  "id": 21169,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "currencies",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 40347,
                                  "src": "3257:16:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_IntendedConjugateCurrency_$23129_memory",
                                    "typeString": "struct NahmiiTypesLib.IntendedConjugateCurrency memory"
                                  }
                                },
                                "id": 21170,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "intended",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 23126,
                                "src": "3257:25:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Currency_$23045_memory",
                                  "typeString": "struct MonetaryTypesLib.Currency memory"
                                }
                              },
                              "id": 21171,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "id",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 23044,
                              "src": "3257:28:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 21172,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3287:1:46",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 21151,
                              "name": "walletLocker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45652,
                              "src": "3090:12:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_WalletLocker_$47049",
                                "typeString": "contract WalletLocker"
                              }
                            },
                            "id": 21153,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "lockFungibleByProxy",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 46088,
                            "src": "3090:32:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_int256_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,int256,address,uint256,uint256) external"
                            }
                          },
                          "id": 21173,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3090:212:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 21174,
                        "nodeType": "ExpressionStatement",
                        "src": "3090:212:46"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 21178,
                                  "name": "trade",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 21057,
                                  "src": "3366:5:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                                    "typeString": "struct TradeTypesLib.Trade memory"
                                  }
                                },
                                "id": 21179,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "buyer",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 40351,
                                "src": "3366:11:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TradeParty_$40341_memory",
                                  "typeString": "struct TradeTypesLib.TradeParty memory"
                                }
                              },
                              "id": 21180,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "wallet",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 40330,
                              "src": "3366:18:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 21181,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 57369,
                                "src": "3386:3:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 21182,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "3386:10:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 21183,
                                      "name": "trade",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 21057,
                                      "src": "3398:5:46",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                                        "typeString": "struct TradeTypesLib.Trade memory"
                                      }
                                    },
                                    "id": 21184,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "buyer",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 40351,
                                    "src": "3398:11:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TradeParty_$40341_memory",
                                      "typeString": "struct TradeTypesLib.TradeParty memory"
                                    }
                                  },
                                  "id": 21185,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "balances",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 40338,
                                  "src": "3398:20:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_IntendedConjugateCurrentPreviousInt256_$23154_memory",
                                    "typeString": "struct NahmiiTypesLib.IntendedConjugateCurrentPreviousInt256 memory"
                                  }
                                },
                                "id": 21186,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "conjugate",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 23153,
                                "src": "3398:30:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_CurrentPreviousInt256_$23144_memory",
                                  "typeString": "struct NahmiiTypesLib.CurrentPreviousInt256 memory"
                                }
                              },
                              "id": 21187,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "current",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 23141,
                              "src": "3398:38:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 21188,
                                    "name": "trade",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 21057,
                                    "src": "3454:5:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                                      "typeString": "struct TradeTypesLib.Trade memory"
                                    }
                                  },
                                  "id": 21189,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "currencies",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 40347,
                                  "src": "3454:16:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_IntendedConjugateCurrency_$23129_memory",
                                    "typeString": "struct NahmiiTypesLib.IntendedConjugateCurrency memory"
                                  }
                                },
                                "id": 21190,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "conjugate",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 23128,
                                "src": "3454:26:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Currency_$23045_memory",
                                  "typeString": "struct MonetaryTypesLib.Currency memory"
                                }
                              },
                              "id": 21191,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "ct",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 23042,
                              "src": "3454:29:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 21192,
                                    "name": "trade",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 21057,
                                    "src": "3485:5:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                                      "typeString": "struct TradeTypesLib.Trade memory"
                                    }
                                  },
                                  "id": 21193,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "currencies",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 40347,
                                  "src": "3485:16:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_IntendedConjugateCurrency_$23129_memory",
                                    "typeString": "struct NahmiiTypesLib.IntendedConjugateCurrency memory"
                                  }
                                },
                                "id": 21194,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "conjugate",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 23128,
                                "src": "3485:26:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Currency_$23045_memory",
                                  "typeString": "struct MonetaryTypesLib.Currency memory"
                                }
                              },
                              "id": 21195,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "id",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 23044,
                              "src": "3485:29:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 21196,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3516:1:46",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 21175,
                              "name": "walletLocker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45652,
                              "src": "3316:12:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_WalletLocker_$47049",
                                "typeString": "contract WalletLocker"
                              }
                            },
                            "id": 21177,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "lockFungibleByProxy",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 46088,
                            "src": "3316:32:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_int256_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,int256,address,uint256,uint256) external"
                            }
                          },
                          "id": 21197,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3316:215:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 21198,
                        "nodeType": "ExpressionStatement",
                        "src": "3316:215:46"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 21202,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "3648:20:46",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 21201,
                      "name": "genuineSellerAndFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21092,
                      "src": "3649:19:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 21252,
                  "nodeType": "IfStatement",
                  "src": "3644:496:46",
                  "trueBody": {
                    "id": 21251,
                    "nodeType": "Block",
                    "src": "3670:470:46",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 21206,
                                  "name": "trade",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 21057,
                                  "src": "3734:5:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                                    "typeString": "struct TradeTypesLib.Trade memory"
                                  }
                                },
                                "id": 21207,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "seller",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 40353,
                                "src": "3734:12:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TradeParty_$40341_memory",
                                  "typeString": "struct TradeTypesLib.TradeParty memory"
                                }
                              },
                              "id": 21208,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "wallet",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 40330,
                              "src": "3734:19:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 21209,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 57369,
                                "src": "3755:3:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 21210,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "3755:10:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 21211,
                                      "name": "trade",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 21057,
                                      "src": "3767:5:46",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                                        "typeString": "struct TradeTypesLib.Trade memory"
                                      }
                                    },
                                    "id": 21212,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "seller",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 40353,
                                    "src": "3767:12:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TradeParty_$40341_memory",
                                      "typeString": "struct TradeTypesLib.TradeParty memory"
                                    }
                                  },
                                  "id": 21213,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "balances",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 40338,
                                  "src": "3767:21:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_IntendedConjugateCurrentPreviousInt256_$23154_memory",
                                    "typeString": "struct NahmiiTypesLib.IntendedConjugateCurrentPreviousInt256 memory"
                                  }
                                },
                                "id": 21214,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "intended",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 23151,
                                "src": "3767:30:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_CurrentPreviousInt256_$23144_memory",
                                  "typeString": "struct NahmiiTypesLib.CurrentPreviousInt256 memory"
                                }
                              },
                              "id": 21215,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "current",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 23141,
                              "src": "3767:38:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 21216,
                                    "name": "trade",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 21057,
                                    "src": "3823:5:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                                      "typeString": "struct TradeTypesLib.Trade memory"
                                    }
                                  },
                                  "id": 21217,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "currencies",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 40347,
                                  "src": "3823:16:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_IntendedConjugateCurrency_$23129_memory",
                                    "typeString": "struct NahmiiTypesLib.IntendedConjugateCurrency memory"
                                  }
                                },
                                "id": 21218,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "intended",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 23126,
                                "src": "3823:25:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Currency_$23045_memory",
                                  "typeString": "struct MonetaryTypesLib.Currency memory"
                                }
                              },
                              "id": 21219,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "ct",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 23042,
                              "src": "3823:28:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 21220,
                                    "name": "trade",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 21057,
                                    "src": "3853:5:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                                      "typeString": "struct TradeTypesLib.Trade memory"
                                    }
                                  },
                                  "id": 21221,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "currencies",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 40347,
                                  "src": "3853:16:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_IntendedConjugateCurrency_$23129_memory",
                                    "typeString": "struct NahmiiTypesLib.IntendedConjugateCurrency memory"
                                  }
                                },
                                "id": 21222,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "intended",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 23126,
                                "src": "3853:25:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Currency_$23045_memory",
                                  "typeString": "struct MonetaryTypesLib.Currency memory"
                                }
                              },
                              "id": 21223,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "id",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 23044,
                              "src": "3853:28:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 21224,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3883:1:46",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 21203,
                              "name": "walletLocker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45652,
                              "src": "3684:12:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_WalletLocker_$47049",
                                "typeString": "contract WalletLocker"
                              }
                            },
                            "id": 21205,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "lockFungibleByProxy",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 46088,
                            "src": "3684:32:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_int256_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,int256,address,uint256,uint256) external"
                            }
                          },
                          "id": 21225,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3684:214:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 21226,
                        "nodeType": "ExpressionStatement",
                        "src": "3684:214:46"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 21230,
                                  "name": "trade",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 21057,
                                  "src": "3962:5:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                                    "typeString": "struct TradeTypesLib.Trade memory"
                                  }
                                },
                                "id": 21231,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "seller",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 40353,
                                "src": "3962:12:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TradeParty_$40341_memory",
                                  "typeString": "struct TradeTypesLib.TradeParty memory"
                                }
                              },
                              "id": 21232,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "wallet",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 40330,
                              "src": "3962:19:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 21233,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 57369,
                                "src": "3983:3:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 21234,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "3983:10:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 21235,
                                      "name": "trade",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 21057,
                                      "src": "3995:5:46",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                                        "typeString": "struct TradeTypesLib.Trade memory"
                                      }
                                    },
                                    "id": 21236,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "seller",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 40353,
                                    "src": "3995:12:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TradeParty_$40341_memory",
                                      "typeString": "struct TradeTypesLib.TradeParty memory"
                                    }
                                  },
                                  "id": 21237,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "balances",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 40338,
                                  "src": "3995:21:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_IntendedConjugateCurrentPreviousInt256_$23154_memory",
                                    "typeString": "struct NahmiiTypesLib.IntendedConjugateCurrentPreviousInt256 memory"
                                  }
                                },
                                "id": 21238,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "conjugate",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 23153,
                                "src": "3995:31:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_CurrentPreviousInt256_$23144_memory",
                                  "typeString": "struct NahmiiTypesLib.CurrentPreviousInt256 memory"
                                }
                              },
                              "id": 21239,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "current",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 23141,
                              "src": "3995:39:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 21240,
                                    "name": "trade",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 21057,
                                    "src": "4052:5:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                                      "typeString": "struct TradeTypesLib.Trade memory"
                                    }
                                  },
                                  "id": 21241,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "currencies",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 40347,
                                  "src": "4052:16:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_IntendedConjugateCurrency_$23129_memory",
                                    "typeString": "struct NahmiiTypesLib.IntendedConjugateCurrency memory"
                                  }
                                },
                                "id": 21242,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "conjugate",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 23128,
                                "src": "4052:26:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Currency_$23045_memory",
                                  "typeString": "struct MonetaryTypesLib.Currency memory"
                                }
                              },
                              "id": 21243,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "ct",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 23042,
                              "src": "4052:29:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 21244,
                                    "name": "trade",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 21057,
                                    "src": "4083:5:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                                      "typeString": "struct TradeTypesLib.Trade memory"
                                    }
                                  },
                                  "id": 21245,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "currencies",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 40347,
                                  "src": "4083:16:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_IntendedConjugateCurrency_$23129_memory",
                                    "typeString": "struct NahmiiTypesLib.IntendedConjugateCurrency memory"
                                  }
                                },
                                "id": 21246,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "conjugate",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 23128,
                                "src": "4083:26:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Currency_$23045_memory",
                                  "typeString": "struct MonetaryTypesLib.Currency memory"
                                }
                              },
                              "id": 21247,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "id",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 23044,
                              "src": "4083:29:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 21248,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4114:1:46",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 21227,
                              "name": "walletLocker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45652,
                              "src": "3912:12:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_WalletLocker_$47049",
                                "typeString": "contract WalletLocker"
                              }
                            },
                            "id": 21229,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "lockFungibleByProxy",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 46088,
                            "src": "3912:32:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_int256_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,int256,address,uint256,uint256) external"
                            }
                          },
                          "id": 21249,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3912:217:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 21250,
                        "nodeType": "ExpressionStatement",
                        "src": "3912:217:46"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 21254,
                            "name": "trade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21057,
                            "src": "4212:5:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                              "typeString": "struct TradeTypesLib.Trade memory"
                            }
                          },
                          "id": 21255,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "seal",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 40357,
                          "src": "4212:10:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Seal_$23176_memory",
                            "typeString": "struct NahmiiTypesLib.Seal memory"
                          }
                        },
                        "id": 21256,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "hash",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 23173,
                        "src": "4212:15:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 21257,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 57369,
                          "src": "4229:3:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 21258,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4229:10:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "condition": {
                          "argumentTypes": null,
                          "id": 21259,
                          "name": "genuineBuyerAndFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21066,
                          "src": "4253:18:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 21263,
                              "name": "trade",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21057,
                              "src": "4287:5:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                                "typeString": "struct TradeTypesLib.Trade memory"
                              }
                            },
                            "id": 21264,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "buyer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 40351,
                            "src": "4287:11:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeParty_$40341_memory",
                              "typeString": "struct TradeTypesLib.TradeParty memory"
                            }
                          },
                          "id": 21265,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "wallet",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 40330,
                          "src": "4287:18:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 21266,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "Conditional",
                        "src": "4253:52:46",
                        "trueExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 21261,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4282:1:46",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 21260,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4274:7:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 21262,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4274:10:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "condition": {
                          "argumentTypes": null,
                          "id": 21267,
                          "name": "genuineSellerAndFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21092,
                          "src": "4319:19:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 21271,
                              "name": "trade",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21057,
                              "src": "4354:5:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                                "typeString": "struct TradeTypesLib.Trade memory"
                              }
                            },
                            "id": 21272,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "seller",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 40353,
                            "src": "4354:12:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeParty_$40341_memory",
                              "typeString": "struct TradeTypesLib.TradeParty memory"
                            }
                          },
                          "id": 21273,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "wallet",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 40330,
                          "src": "4354:19:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 21274,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "Conditional",
                        "src": "4319:54:46",
                        "trueExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 21269,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4349:1:46",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 21268,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4341:7:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 21270,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4341:10:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 21253,
                      "name": "ChallengeByTradeEvent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21046,
                      "src": "4177:21:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address,address,address)"
                      }
                    },
                    "id": 21275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4177:206:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21276,
                  "nodeType": "EmitStatement",
                  "src": "4172:211:46"
                }
              ]
            },
            "documentation": "@notice Submit a trade candidate in continuous Fraud Challenge (FC)\n @param trade Fraudulent trade candidate",
            "id": 21278,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 21060,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 21059,
                  "name": "onlyOperationalModeNormal",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5967,
                  "src": "1747:25:46",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1747:25:46"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 21062,
                    "name": "trade",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 21057,
                    "src": "1793:5:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                      "typeString": "struct TradeTypesLib.Trade memory"
                    }
                  }
                ],
                "id": 21063,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 21061,
                  "name": "onlySealedTrade",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 42342,
                  "src": "1777:15:46",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_struct$_Trade_$40362_memory_ptr_$",
                    "typeString": "modifier (struct TradeTypesLib.Trade memory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1777:22:46"
              }
            ],
            "name": "challenge",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 21058,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21057,
                  "name": "trade",
                  "nodeType": "VariableDeclaration",
                  "scope": 21278,
                  "src": "1698:32:46",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Trade_$40362_memory_ptr",
                    "typeString": "struct TradeTypesLib.Trade"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 21056,
                    "name": "TradeTypesLib.Trade",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 40362,
                    "src": "1698:19:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$40362_storage_ptr",
                      "typeString": "struct TradeTypesLib.Trade"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1697:34:46"
            },
            "returnParameters": {
              "id": 21064,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1804:0:46"
            },
            "scope": 21279,
            "src": "1679:2711:46",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 21280,
        "src": "758:3634:46"
      }
    ],
    "src": "122:4270:46"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.12+commit.7709ece9.Emscripten.clang"
  },
  "networks": {
    "3": {
      "events": {
        "0x4b1c77e1b2b1e3866c73bbddcaf9f4cad172b890bfab938da442005e1234d407": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "bytes32",
              "name": "tradeHash",
              "type": "bytes32"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "challenger",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "lockedBuyer",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "lockedSeller",
              "type": "address"
            }
          ],
          "name": "ChallengeByTradeEvent",
          "type": "event"
        },
        "0x56ec8900b9c4bf84f4b715a53068ca06961dd49084c07b481931e2c2045346e6": {
          "anonymous": false,
          "inputs": [],
          "name": "FreezeWalletLockerEvent",
          "type": "event"
        },
        "0xd5a2a04a775c741c2ca0dc46ea7ce4835190e1aaf1ca018def0e82568ec33616": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "wallet",
              "type": "address"
            }
          ],
          "name": "SelfDestructionDisabledEvent",
          "type": "event"
        },
        "0x634f61bf00e14adedce330c80c2823e16e184f189ebe853e1ddecc4a268477ff": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "contract Configuration",
              "name": "oldConfiguration",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "contract Configuration",
              "name": "newConfiguration",
              "type": "address"
            }
          ],
          "name": "SetConfigurationEvent",
          "type": "event"
        },
        "0x977e5fa58e458501775e0008d275006294c5249e3c08d1d0e3a9f3acad14f6e4": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "oldDeployer",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "newDeployer",
              "type": "address"
            }
          ],
          "name": "SetDeployerEvent",
          "type": "event"
        },
        "0x07998fa7be97abe2427246ae4688298c89d6196bbffdf0997b9495a8d27bc673": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "contract FraudChallenge",
              "name": "oldFraudChallenge",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "contract FraudChallenge",
              "name": "newFraudChallenge",
              "type": "address"
            }
          ],
          "name": "SetFraudChallengeEvent",
          "type": "event"
        },
        "0x9f611b789425d0d5b90b920f1b2852907dd865c80074a30b1629aaa041d1812c": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "oldOperator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "newOperator",
              "type": "address"
            }
          ],
          "name": "SetOperatorEvent",
          "type": "event"
        },
        "0xc9f3f00c1760fe26985aeacb814a21c56ea289d680562e89b249681b08c30382": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "contract SecurityBond",
              "name": "oldSecurityBond",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "contract SecurityBond",
              "name": "newSecurityBond",
              "type": "address"
            }
          ],
          "name": "SetSecurityBondEvent",
          "type": "event"
        },
        "0x1882af944a16549c3d4f60e3cd26f158b0c7aac3222cf32971fc21375ce05f60": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "contract ValidatorV2",
              "name": "oldValidator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "contract ValidatorV2",
              "name": "newValidator",
              "type": "address"
            }
          ],
          "name": "SetValidatorEvent",
          "type": "event"
        },
        "0xa44d361e26327b72a7ccbeae801b3c5cd7677ea4fa74168b289e273c46bfecfc": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "contract WalletLocker",
              "name": "oldWalletLocker",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "contract WalletLocker",
              "name": "newWalletLocker",
              "type": "address"
            }
          ],
          "name": "SetWalletLockerEvent",
          "type": "event"
        },
        "0x787a5d936e74f4b564b9153575886059829c78cd9927b1be5e0d976b317ef736": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "wallet",
              "type": "address"
            }
          ],
          "name": "TriggerSelfDestructionEvent",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x3b257ac87b3bd9184d818607d4587170af16a1ac",
      "transactionHash": "0xd8cd9527be459fd95514bce088bd5c3e99d844c08b3a77e69fb4ca10eab37ad6"
    }
  },
  "schemaVersion": "2.0.3",
  "updatedAt": "2019-10-23T00:21:40.806Z"
}